/**************************************************************************
 *
 * Copyright (c) 2007 Intel Corporation, Hillsboro, OR, USA
 * Copyright (c) Imagination Technologies Limited, UK
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
 *
 **************************************************************************/

#ifndef _TNG_TOPAZ_HW_REG_H_
#define _TNG_TOPAZ_HW_REG_H_

/* #define KPDUMP */

#ifdef _LNC_TOPAZ_HW_REG_H_
#error "lnc_topaz_hw_reg.h shouldn't be included"
#endif

#include "psb_drv.h"

#define MTX_CMDID_PRIORITY 0x80

/* Register CR_MULTICORE_SRST */
#define TOPAZHP_TOP_CR_MULTICORE_SRST 0x0000
#define MASK_TOPAZHP_TOP_CR_IMG_TOPAZ_MTX_SOFT_RESET 0x00000001
#define SHIFT_TOPAZHP_TOP_CR_IMG_TOPAZ_MTX_SOFT_RESET 0
#define REGNUM_TOPAZHP_TOP_CR_IMG_TOPAZ_MTX_SOFT_RESET 0x0000
#define SIGNED_TOPAZHP_TOP_CR_IMG_TOPAZ_MTX_SOFT_RESET 0

#define MASK_TOPAZHP_TOP_CR_IMG_TOPAZ_IO_SOFT_RESET 0x00000002
#define SHIFT_TOPAZHP_TOP_CR_IMG_TOPAZ_IO_SOFT_RESET 1
#define REGNUM_TOPAZHP_TOP_CR_IMG_TOPAZ_IO_SOFT_RESET 0x0000
#define SIGNED_TOPAZHP_TOP_CR_IMG_TOPAZ_IO_SOFT_RESET 0

#define MASK_TOPAZHP_TOP_CR_IMG_TOPAZ_CORE_SOFT_RESET 0x00000004
#define SHIFT_TOPAZHP_TOP_CR_IMG_TOPAZ_CORE_SOFT_RESET 2
#define REGNUM_TOPAZHP_TOP_CR_IMG_TOPAZ_CORE_SOFT_RESET 0x0000
#define SIGNED_TOPAZHP_TOP_CR_IMG_TOPAZ_CORE_SOFT_RESET 0

/* Register CR_MULTICORE_INT_STAT */
#define TOPAZHP_TOP_CR_MULTICORE_INT_STAT 0x0004
#define MASK_TOPAZHP_TOP_CR_INT_STAT_DMAC 0x00000001
#define SHIFT_TOPAZHP_TOP_CR_INT_STAT_DMAC 0
#define REGNUM_TOPAZHP_TOP_CR_INT_STAT_DMAC 0x0004
#define SIGNED_TOPAZHP_TOP_CR_INT_STAT_DMAC 0

#define MASK_TOPAZHP_TOP_CR_INT_STAT_MTX 0x00000002
#define SHIFT_TOPAZHP_TOP_CR_INT_STAT_MTX 1
#define REGNUM_TOPAZHP_TOP_CR_INT_STAT_MTX 0x0004
#define SIGNED_TOPAZHP_TOP_CR_INT_STAT_MTX 0

#define MASK_TOPAZHP_TOP_CR_INT_STAT_MTX_HALT 0x00000004
#define SHIFT_TOPAZHP_TOP_CR_INT_STAT_MTX_HALT 2
#define REGNUM_TOPAZHP_TOP_CR_INT_STAT_MTX_HALT 0x0004
#define SIGNED_TOPAZHP_TOP_CR_INT_STAT_MTX_HALT 0

#define MASK_TOPAZHP_TOP_CR_INT_STAT_MMU_FAULT 0x00000008
#define SHIFT_TOPAZHP_TOP_CR_INT_STAT_MMU_FAULT 3
#define REGNUM_TOPAZHP_TOP_CR_INT_STAT_MMU_FAULT 0x0004
#define SIGNED_TOPAZHP_TOP_CR_INT_STAT_MMU_FAULT 0

#define MASK_TOPAZHP_TOP_CR_INT_STAT_MTX_CORES 0x0000FF00
#define SHIFT_TOPAZHP_TOP_CR_INT_STAT_MTX_CORES 8
#define REGNUM_TOPAZHP_TOP_CR_INT_STAT_MTX_CORES 0x0004
#define SIGNED_TOPAZHP_TOP_CR_INT_STAT_MTX_CORES 0

#define MASK_TOPAZHP_TOP_CR_INT_STAT_HOST_CORES 0x00FF0000
#define SHIFT_TOPAZHP_TOP_CR_INT_STAT_HOST_CORES 16
#define REGNUM_TOPAZHP_TOP_CR_INT_STAT_HOST_CORES 0x0004
#define SIGNED_TOPAZHP_TOP_CR_INT_STAT_HOST_CORES 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_MAS_MTX_INTS 0x40000000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_MAS_MTX_INTS 30
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_MAS_MTX_INTS 0x0004
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_MAS_MTX_INTS 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_MAS_HOST_INTS 0x80000000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_MAS_HOST_INTS 31
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_MAS_HOST_INTS 0x0004
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_MAS_HOST_INTS 0

/* Register CR_MULTICORE_MTX_INT_ENAB */
#define TOPAZHP_TOP_CR_MULTICORE_MTX_INT_ENAB 0x0008
#define MASK_TOPAZHP_TOP_CR_MTX_INTEN_DMAC 0x00000001
#define SHIFT_TOPAZHP_TOP_CR_MTX_INTEN_DMAC 0
#define REGNUM_TOPAZHP_TOP_CR_MTX_INTEN_DMAC 0x0008
#define SIGNED_TOPAZHP_TOP_CR_MTX_INTEN_DMAC 0

#define MASK_TOPAZHP_TOP_CR_MTX_INTEN_MTX 0x00000002
#define SHIFT_TOPAZHP_TOP_CR_MTX_INTEN_MTX 1
#define REGNUM_TOPAZHP_TOP_CR_MTX_INTEN_MTX 0x0008
#define SIGNED_TOPAZHP_TOP_CR_MTX_INTEN_MTX 0

#define MASK_TOPAZHP_TOP_CR_MTX_INTEN_MTX_HALT 0x00000004
#define SHIFT_TOPAZHP_TOP_CR_MTX_INTEN_MTX_HALT 2
#define REGNUM_TOPAZHP_TOP_CR_MTX_INTEN_MTX_HALT 0x0008
#define SIGNED_TOPAZHP_TOP_CR_MTX_INTEN_MTX_HALT 0

#define MASK_TOPAZHP_TOP_CR_MTX_INTEN_MMU_FAULT 0x00000008
#define SHIFT_TOPAZHP_TOP_CR_MTX_INTEN_MMU_FAULT 3
#define REGNUM_TOPAZHP_TOP_CR_MTX_INTEN_MMU_FAULT 0x0008
#define SIGNED_TOPAZHP_TOP_CR_MTX_INTEN_MMU_FAULT 0

#define MASK_TOPAZHP_TOP_CR_MTX_INTEN_MTX_CORES 0x0000FF00
#define SHIFT_TOPAZHP_TOP_CR_MTX_INTEN_MTX_CORES 8
#define REGNUM_TOPAZHP_TOP_CR_MTX_INTEN_MTX_CORES 0x0008
#define SIGNED_TOPAZHP_TOP_CR_MTX_INTEN_MTX_CORES 0

#define MASK_TOPAZHP_TOP_CR_MTX_INTEN_HOST_CORES 0x00FF0000
#define SHIFT_TOPAZHP_TOP_CR_MTX_INTEN_HOST_CORES 16
#define REGNUM_TOPAZHP_TOP_CR_MTX_INTEN_HOST_CORES 0x0008
#define SIGNED_TOPAZHP_TOP_CR_MTX_INTEN_HOST_CORES 0

#define MASK_TOPAZHP_TOP_CR_MTX_TOPAZHP_MAS_INTEN 0x40000000
#define SHIFT_TOPAZHP_TOP_CR_MTX_TOPAZHP_MAS_INTEN 30
#define REGNUM_TOPAZHP_TOP_CR_MTX_TOPAZHP_MAS_INTEN 0x0008
#define SIGNED_TOPAZHP_TOP_CR_MTX_TOPAZHP_MAS_INTEN 0

/* Register CR_MULTICORE_HOST_INT_ENAB */
#define TOPAZHP_TOP_CR_MULTICORE_HOST_INT_ENAB 0x000C
#define MASK_TOPAZHP_TOP_CR_HOST_INTEN_DMAC 0x00000001
#define SHIFT_TOPAZHP_TOP_CR_HOST_INTEN_DMAC 0
#define REGNUM_TOPAZHP_TOP_CR_HOST_INTEN_DMAC 0x000C
#define SIGNED_TOPAZHP_TOP_CR_HOST_INTEN_DMAC 0

#define MASK_TOPAZHP_TOP_CR_HOST_INTEN_MTX 0x00000002
#define SHIFT_TOPAZHP_TOP_CR_HOST_INTEN_MTX 1
#define REGNUM_TOPAZHP_TOP_CR_HOST_INTEN_MTX 0x000C
#define SIGNED_TOPAZHP_TOP_CR_HOST_INTEN_MTX 0

#define MASK_TOPAZHP_TOP_CR_HOST_INTEN_MTX_HALT 0x00000004
#define SHIFT_TOPAZHP_TOP_CR_HOST_INTEN_MTX_HALT 2
#define REGNUM_TOPAZHP_TOP_CR_HOST_INTEN_MTX_HALT 0x000C
#define SIGNED_TOPAZHP_TOP_CR_HOST_INTEN_MTX_HALT 0

#define MASK_TOPAZHP_TOP_CR_HOST_INTEN_MMU_FAULT 0x00000008
#define SHIFT_TOPAZHP_TOP_CR_HOST_INTEN_MMU_FAULT 3
#define REGNUM_TOPAZHP_TOP_CR_HOST_INTEN_MMU_FAULT 0x000C
#define SIGNED_TOPAZHP_TOP_CR_HOST_INTEN_MMU_FAULT 0

#define MASK_TOPAZHP_TOP_CR_HOST_INTEN_MTX_CORES 0x0000FF00
#define SHIFT_TOPAZHP_TOP_CR_HOST_INTEN_MTX_CORES 8
#define REGNUM_TOPAZHP_TOP_CR_HOST_INTEN_MTX_CORES 0x000C
#define SIGNED_TOPAZHP_TOP_CR_HOST_INTEN_MTX_CORES 0

#define MASK_TOPAZHP_TOP_CR_HOST_INTEN_HOST_CORES 0x00FF0000
#define SHIFT_TOPAZHP_TOP_CR_HOST_INTEN_HOST_CORES 16
#define REGNUM_TOPAZHP_TOP_CR_HOST_INTEN_HOST_CORES 0x000C
#define SIGNED_TOPAZHP_TOP_CR_HOST_INTEN_HOST_CORES 0

#define MASK_TOPAZHP_TOP_CR_HOST_TOPAZHP_MAS_INTEN 0x80000000
#define SHIFT_TOPAZHP_TOP_CR_HOST_TOPAZHP_MAS_INTEN 31
#define REGNUM_TOPAZHP_TOP_CR_HOST_TOPAZHP_MAS_INTEN 0x000C
#define SIGNED_TOPAZHP_TOP_CR_HOST_TOPAZHP_MAS_INTEN 0

/* Register CR_MULTICORE_INT_CLEAR */
#define TOPAZHP_TOP_CR_MULTICORE_INT_CLEAR 0x0010
#define MASK_TOPAZHP_TOP_CR_INTCLR_DMAC 0x00000001
#define SHIFT_TOPAZHP_TOP_CR_INTCLR_DMAC 0
#define REGNUM_TOPAZHP_TOP_CR_INTCLR_DMAC 0x0010
#define SIGNED_TOPAZHP_TOP_CR_INTCLR_DMAC 0

#define MASK_TOPAZHP_TOP_CR_INTCLR_MTX 0x00000002
#define SHIFT_TOPAZHP_TOP_CR_INTCLR_MTX 1
#define REGNUM_TOPAZHP_TOP_CR_INTCLR_MTX 0x0010
#define SIGNED_TOPAZHP_TOP_CR_INTCLR_MTX 0

#define MASK_TOPAZHP_TOP_CR_INTCLR_MTX_HALT 0x00000004
#define SHIFT_TOPAZHP_TOP_CR_INTCLR_MTX_HALT 2
#define REGNUM_TOPAZHP_TOP_CR_INTCLR_MTX_HALT 0x0010
#define SIGNED_TOPAZHP_TOP_CR_INTCLR_MTX_HALT 0

#define MASK_TOPAZHP_TOP_CR_INTCLR_MMU_FAULT 0x00000008
#define SHIFT_TOPAZHP_TOP_CR_INTCLR_MMU_FAULT 3
#define REGNUM_TOPAZHP_TOP_CR_INTCLR_MMU_FAULT 0x0010
#define SIGNED_TOPAZHP_TOP_CR_INTCLR_MMU_FAULT 0

/* Register CR_MULTICORE_MAN_CLK_GATE */
#define TOPAZHP_TOP_CR_MULTICORE_MAN_CLK_GATE 0x0014
#define MASK_TOPAZHP_TOP_CR_TOPAZ_MTX_MAN_CLK_GATE 0x00000002
#define SHIFT_TOPAZHP_TOP_CR_TOPAZ_MTX_MAN_CLK_GATE 1
#define REGNUM_TOPAZHP_TOP_CR_TOPAZ_MTX_MAN_CLK_GATE 0x0014
#define SIGNED_TOPAZHP_TOP_CR_TOPAZ_MTX_MAN_CLK_GATE 0

/* Register CR_TOPAZ_MTX_C_RATIO */
#define TOPAZHP_TOP_CR_TOPAZ_MTX_C_RATIO 0x0018
#define MASK_TOPAZHP_TOP_CR_MTX_C_RATIO 0x00000003
#define SHIFT_TOPAZHP_TOP_CR_MTX_C_RATIO 0
#define REGNUM_TOPAZHP_TOP_CR_MTX_C_RATIO 0x0018
#define SIGNED_TOPAZHP_TOP_CR_MTX_C_RATIO 0

/* Register CR_MMU_STATUS */
#define TOPAZHP_TOP_CR_MMU_STATUS   0x001C
#define MASK_TOPAZHP_TOP_CR_MMU_PF_N_RW 0x00000001
#define SHIFT_TOPAZHP_TOP_CR_MMU_PF_N_RW 0
#define REGNUM_TOPAZHP_TOP_CR_MMU_PF_N_RW 0x001C
#define SIGNED_TOPAZHP_TOP_CR_MMU_PF_N_RW 0

#define MASK_TOPAZHP_TOP_CR_MMU_FAULT_ADDR 0xFFFFF000
#define SHIFT_TOPAZHP_TOP_CR_MMU_FAULT_ADDR 12
#define REGNUM_TOPAZHP_TOP_CR_MMU_FAULT_ADDR 0x001C
#define SIGNED_TOPAZHP_TOP_CR_MMU_FAULT_ADDR 0

/* Register CR_MMU_MEM_REQ */
#define TOPAZHP_TOP_CR_MMU_MEM_REQ  0x0020
#define MASK_TOPAZHP_TOP_CR_MEM_REQ_STAT_READS 0x000000FF
#define SHIFT_TOPAZHP_TOP_CR_MEM_REQ_STAT_READS 0
#define REGNUM_TOPAZHP_TOP_CR_MEM_REQ_STAT_READS 0x0020
#define SIGNED_TOPAZHP_TOP_CR_MEM_REQ_STAT_READS 0

/* Register CR_MMU_CONTROL0 */
#define TOPAZHP_TOP_CR_MMU_CONTROL0 0x0024
#define MASK_TOPAZHP_TOP_CR_MMU_NOREORDER 0x00000001
#define SHIFT_TOPAZHP_TOP_CR_MMU_NOREORDER 0
#define REGNUM_TOPAZHP_TOP_CR_MMU_NOREORDER 0x0024
#define SIGNED_TOPAZHP_TOP_CR_MMU_NOREORDER 0

#define MASK_TOPAZHP_TOP_CR_MMU_PAUSE 0x00000002
#define SHIFT_TOPAZHP_TOP_CR_MMU_PAUSE 1
#define REGNUM_TOPAZHP_TOP_CR_MMU_PAUSE 0x0024
#define SIGNED_TOPAZHP_TOP_CR_MMU_PAUSE 0

#define MASK_TOPAZHP_TOP_CR_MMU_FLUSH 0x00000004
#define SHIFT_TOPAZHP_TOP_CR_MMU_FLUSH 2
#define REGNUM_TOPAZHP_TOP_CR_MMU_FLUSH 0x0024
#define SIGNED_TOPAZHP_TOP_CR_MMU_FLUSH 0

#define MASK_TOPAZHP_TOP_CR_MMU_INVALDC 0x00000008
#define SHIFT_TOPAZHP_TOP_CR_MMU_INVALDC 3
#define REGNUM_TOPAZHP_TOP_CR_MMU_INVALDC 0x0024
#define SIGNED_TOPAZHP_TOP_CR_MMU_INVALDC 0

#define MASK_TOPAZHP_TOP_CR_FLOWRATE_TOPAZ 0x00000700
#define SHIFT_TOPAZHP_TOP_CR_FLOWRATE_TOPAZ 8
#define REGNUM_TOPAZHP_TOP_CR_FLOWRATE_TOPAZ 0x0024
#define SIGNED_TOPAZHP_TOP_CR_FLOWRATE_TOPAZ 0

#define MASK_TOPAZHP_TOP_CR_MMU_BYPASS_TOPAZ 0x00010000
#define SHIFT_TOPAZHP_TOP_CR_MMU_BYPASS_TOPAZ 16
#define REGNUM_TOPAZHP_TOP_CR_MMU_BYPASS_TOPAZ 0x0024
#define SIGNED_TOPAZHP_TOP_CR_MMU_BYPASS_TOPAZ 0

/* Register CR_MMU_CONTROL1 */
#define TOPAZHP_TOP_CR_MMU_CONTROL1 0x0028
#define MASK_TOPAZHP_TOP_CR_MMU_TTE_THRESHOLD 0x00000FFF
#define SHIFT_TOPAZHP_TOP_CR_MMU_TTE_THRESHOLD 0
#define REGNUM_TOPAZHP_TOP_CR_MMU_TTE_THRESHOLD 0x0028
#define SIGNED_TOPAZHP_TOP_CR_MMU_TTE_THRESHOLD 0

#define MASK_TOPAZHP_TOP_CR_MMU_ADT_TTE 0x000FF000
#define SHIFT_TOPAZHP_TOP_CR_MMU_ADT_TTE 12
#define REGNUM_TOPAZHP_TOP_CR_MMU_ADT_TTE 0x0028
#define SIGNED_TOPAZHP_TOP_CR_MMU_ADT_TTE 0

#define MASK_TOPAZHP_TOP_CR_MMU_BEST_COUNT 0x0FF00000
#define SHIFT_TOPAZHP_TOP_CR_MMU_BEST_COUNT 20
#define REGNUM_TOPAZHP_TOP_CR_MMU_BEST_COUNT 0x0028
#define SIGNED_TOPAZHP_TOP_CR_MMU_BEST_COUNT 0

#define MASK_TOPAZHP_TOP_CR_MMU_PAGE_SIZE 0xF0000000
#define SHIFT_TOPAZHP_TOP_CR_MMU_PAGE_SIZE 28
#define REGNUM_TOPAZHP_TOP_CR_MMU_PAGE_SIZE 0x0028
#define SIGNED_TOPAZHP_TOP_CR_MMU_PAGE_SIZE 0

/* Register CR_MMU_CONTROL2 */
#define TOPAZHP_TOP_CR_MMU_CONTROL2 0x002C
#define MASK_TOPAZHP_TOP_CR_MMU_ENABLE_36BIT_ADDRESSING 0x00000001
#define SHIFT_TOPAZHP_TOP_CR_MMU_ENABLE_36BIT_ADDRESSING 0
#define REGNUM_TOPAZHP_TOP_CR_MMU_ENABLE_36BIT_ADDRESSING 0x002C
#define SIGNED_TOPAZHP_TOP_CR_MMU_ENABLE_36BIT_ADDRESSING 0

#define MASK_TOPAZHP_TOP_CR_MMU_TILING_SCHEME 0x00000008
#define SHIFT_TOPAZHP_TOP_CR_MMU_TILING_SCHEME 3
#define REGNUM_TOPAZHP_TOP_CR_MMU_TILING_SCHEME 0x002C
#define SIGNED_TOPAZHP_TOP_CR_MMU_TILING_SCHEME 0

/* Register CR_MMU_DIR_LIST_BASE_0 */
#define TOPAZHP_TOP_CR_MMU_DIR_LIST_BASE_0 0x0030
#define MASK_TOPAZHP_TOP_CR_MMU_DIR_LIST_BASE_ADDR_00 0xFFFFFFF0
#define SHIFT_TOPAZHP_TOP_CR_MMU_DIR_LIST_BASE_ADDR_00 4
#define REGNUM_TOPAZHP_TOP_CR_MMU_DIR_LIST_BASE_ADDR_00 0x0030
#define SIGNED_TOPAZHP_TOP_CR_MMU_DIR_LIST_BASE_ADDR_00 0

/* Register CR_MMU_TILE_0 */
#define TOPAZHP_TOP_CR_MMU_TILE_0   0x0038
#define MASK_TOPAZHP_TOP_CR_TILE_MIN_ADDR_00 0x00000FFF
#define SHIFT_TOPAZHP_TOP_CR_TILE_MIN_ADDR_00 0
#define REGNUM_TOPAZHP_TOP_CR_TILE_MIN_ADDR_00 0x0038
#define SIGNED_TOPAZHP_TOP_CR_TILE_MIN_ADDR_00 0

#define MASK_TOPAZHP_TOP_CR_TILE_MAX_ADDR_00 0x00FFF000
#define SHIFT_TOPAZHP_TOP_CR_TILE_MAX_ADDR_00 12
#define REGNUM_TOPAZHP_TOP_CR_TILE_MAX_ADDR_00 0x0038
#define SIGNED_TOPAZHP_TOP_CR_TILE_MAX_ADDR_00 0

#define MASK_TOPAZHP_TOP_CR_TILE_STRIDE_00 0x07000000
#define SHIFT_TOPAZHP_TOP_CR_TILE_STRIDE_00 24
#define REGNUM_TOPAZHP_TOP_CR_TILE_STRIDE_00 0x0038
#define SIGNED_TOPAZHP_TOP_CR_TILE_STRIDE_00 0

#define MASK_TOPAZHP_TOP_CR_TILE_ENABLE_00 0x10000000
#define SHIFT_TOPAZHP_TOP_CR_TILE_ENABLE_00 28
#define REGNUM_TOPAZHP_TOP_CR_TILE_ENABLE_00 0x0038
#define SIGNED_TOPAZHP_TOP_CR_TILE_ENABLE_00 0

/* Register CR_MMU_TILE_1 */
#define TOPAZHP_TOP_CR_MMU_TILE_1   0x003C
#define MASK_TOPAZHP_TOP_CR_TILE_MIN_ADDR_01 0x00000FFF
#define SHIFT_TOPAZHP_TOP_CR_TILE_MIN_ADDR_01 0
#define REGNUM_TOPAZHP_TOP_CR_TILE_MIN_ADDR_01 0x003C
#define SIGNED_TOPAZHP_TOP_CR_TILE_MIN_ADDR_01 0

#define MASK_TOPAZHP_TOP_CR_TILE_MAX_ADDR_01 0x00FFF000
#define SHIFT_TOPAZHP_TOP_CR_TILE_MAX_ADDR_01 12
#define REGNUM_TOPAZHP_TOP_CR_TILE_MAX_ADDR_01 0x003C
#define SIGNED_TOPAZHP_TOP_CR_TILE_MAX_ADDR_01 0

#define MASK_TOPAZHP_TOP_CR_TILE_STRIDE_01 0x07000000
#define SHIFT_TOPAZHP_TOP_CR_TILE_STRIDE_01 24
#define REGNUM_TOPAZHP_TOP_CR_TILE_STRIDE_01 0x003C
#define SIGNED_TOPAZHP_TOP_CR_TILE_STRIDE_01 0

#define MASK_TOPAZHP_TOP_CR_TILE_ENABLE_01 0x10000000
#define SHIFT_TOPAZHP_TOP_CR_TILE_ENABLE_01 28
#define REGNUM_TOPAZHP_TOP_CR_TILE_ENABLE_01 0x003C
#define SIGNED_TOPAZHP_TOP_CR_TILE_ENABLE_01 0

/* Register CR_MULTICORE_CORE_SEL_0 */
#define TOPAZHP_TOP_CR_MULTICORE_CORE_SEL_0 0x0050
#define MASK_TOPAZHP_TOP_CR_DMAC_MTX_SELECT 0x00000007
#define SHIFT_TOPAZHP_TOP_CR_DMAC_MTX_SELECT 0
#define REGNUM_TOPAZHP_TOP_CR_DMAC_MTX_SELECT 0x0050
#define SIGNED_TOPAZHP_TOP_CR_DMAC_MTX_SELECT 0

#define MASK_TOPAZHP_TOP_CR_WRITES_MTX_ALL 0x40000000
#define SHIFT_TOPAZHP_TOP_CR_WRITES_MTX_ALL 30
#define REGNUM_TOPAZHP_TOP_CR_WRITES_MTX_ALL 0x0050
#define SIGNED_TOPAZHP_TOP_CR_WRITES_MTX_ALL 0

#define MASK_TOPAZHP_TOP_CR_WRITES_CORE_ALL 0x80000000
#define SHIFT_TOPAZHP_TOP_CR_WRITES_CORE_ALL 31
#define REGNUM_TOPAZHP_TOP_CR_WRITES_CORE_ALL 0x0050
#define SIGNED_TOPAZHP_TOP_CR_WRITES_CORE_ALL 0

/* Register CR_MULTICORE_CORE_SEL_1 */
#define TOPAZHP_TOP_CR_MULTICORE_CORE_SEL_1 0x0054
#define MASK_TOPAZHP_TOP_CR_RTM_PORT_CORE_SELECT 0x0000001F
#define SHIFT_TOPAZHP_TOP_CR_RTM_PORT_CORE_SELECT 0
#define REGNUM_TOPAZHP_TOP_CR_RTM_PORT_CORE_SELECT 0x0054
#define SIGNED_TOPAZHP_TOP_CR_RTM_PORT_CORE_SELECT 0

/* Register CR_MULTICORE_HW_CFG */
#define TOPAZHP_TOP_CR_MULTICORE_HW_CFG 0x0058
#define MASK_TOPAZHP_TOP_CR_NUM_CORES_SUPPORTED 0x0000001F
#define SHIFT_TOPAZHP_TOP_CR_NUM_CORES_SUPPORTED 0
#define REGNUM_TOPAZHP_TOP_CR_NUM_CORES_SUPPORTED 0x0058
#define SIGNED_TOPAZHP_TOP_CR_NUM_CORES_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_NUM_MTX_SUPPORTED 0x00000700
#define SHIFT_TOPAZHP_TOP_CR_NUM_MTX_SUPPORTED 8
#define REGNUM_TOPAZHP_TOP_CR_NUM_MTX_SUPPORTED 0x0058
#define SIGNED_TOPAZHP_TOP_CR_NUM_MTX_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_NUM_CORES_PER_MTX 0x00070000
#define SHIFT_TOPAZHP_TOP_CR_NUM_CORES_PER_MTX 16
#define REGNUM_TOPAZHP_TOP_CR_NUM_CORES_PER_MTX 0x0058
#define SIGNED_TOPAZHP_TOP_CR_NUM_CORES_PER_MTX 0

#define MASK_TOPAZHP_TOP_CR_EXTENDED_ADDR_RANGE 0x0F000000
#define SHIFT_TOPAZHP_TOP_CR_EXTENDED_ADDR_RANGE 24
#define REGNUM_TOPAZHP_TOP_CR_EXTENDED_ADDR_RANGE 0x0058
#define SIGNED_TOPAZHP_TOP_CR_EXTENDED_ADDR_RANGE 0

/* Register CR_MULTICORE_CMD_FIFO_WRITE */
#define TOPAZHP_TOP_CR_MULTICORE_CMD_FIFO_WRITE 0x0060
#define MASK_TOPAZHP_TOP_CR_CMD_FIFO_WDATA 0xFFFFFFFF
#define SHIFT_TOPAZHP_TOP_CR_CMD_FIFO_WDATA 0
#define REGNUM_TOPAZHP_TOP_CR_CMD_FIFO_WDATA 0x0060
#define SIGNED_TOPAZHP_TOP_CR_CMD_FIFO_WDATA 0

/* Register CR_MULTICORE_CMD_FIFO_WRITE_SPACE */
#define TOPAZHP_TOP_CR_MULTICORE_CMD_FIFO_WRITE_SPACE 0x0064
#define MASK_TOPAZHP_TOP_CR_CMD_FIFO_SPACE 0x000000FF
#define SHIFT_TOPAZHP_TOP_CR_CMD_FIFO_SPACE 0
#define REGNUM_TOPAZHP_TOP_CR_CMD_FIFO_SPACE 0x0064
#define SIGNED_TOPAZHP_TOP_CR_CMD_FIFO_SPACE 0

#define MASK_TOPAZHP_TOP_CR_CMD_FIFO_FULL 0x00000100
#define SHIFT_TOPAZHP_TOP_CR_CMD_FIFO_FULL 8
#define REGNUM_TOPAZHP_TOP_CR_CMD_FIFO_FULL 0x0064
#define SIGNED_TOPAZHP_TOP_CR_CMD_FIFO_FULL 0

/* Register CR_TOPAZ_CMD_FIFO_READ */
#define TOPAZHP_TOP_CR_TOPAZ_CMD_FIFO_READ 0x0070
#define MASK_TOPAZHP_TOP_CR_CMD_FIFO_RDATA 0xFFFFFFFF
#define SHIFT_TOPAZHP_TOP_CR_CMD_FIFO_RDATA 0
#define REGNUM_TOPAZHP_TOP_CR_CMD_FIFO_RDATA 0x0070
#define SIGNED_TOPAZHP_TOP_CR_CMD_FIFO_RDATA 0

/* Register CR_TOPAZ_CMD_FIFO_READ_AVAILABLE */
#define TOPAZHP_TOP_CR_TOPAZ_CMD_FIFO_READ_AVAILABLE 0x0074
#define MASK_TOPAZHP_TOP_CR_CMD_FIFO_QUANTITY 0x000000FF
#define SHIFT_TOPAZHP_TOP_CR_CMD_FIFO_QUANTITY 0
#define REGNUM_TOPAZHP_TOP_CR_CMD_FIFO_QUANTITY 0x0074
#define SIGNED_TOPAZHP_TOP_CR_CMD_FIFO_QUANTITY 0

#define MASK_TOPAZHP_TOP_CR_CMD_FIFO_NOTEMPTY 0x00000100
#define SHIFT_TOPAZHP_TOP_CR_CMD_FIFO_NOTEMPTY 8
#define REGNUM_TOPAZHP_TOP_CR_CMD_FIFO_NOTEMPTY 0x0074
#define SIGNED_TOPAZHP_TOP_CR_CMD_FIFO_NOTEMPTY 0

/* Register CR_TOPAZ_CMD_FIFO_FLUSH */
#define TOPAZHP_TOP_CR_TOPAZ_CMD_FIFO_FLUSH 0x0078
#define MASK_TOPAZHP_TOP_CR_CMD_FIFO_FLUSH 0x00000001
#define SHIFT_TOPAZHP_TOP_CR_CMD_FIFO_FLUSH 0
#define REGNUM_TOPAZHP_TOP_CR_CMD_FIFO_FLUSH 0x0078
#define SIGNED_TOPAZHP_TOP_CR_CMD_FIFO_FLUSH 0

/* Register CR_MMU_TILE_EXT_0 */
#define TOPAZHP_TOP_CR_MMU_TILE_EXT_0 0x0080
#define MASK_TOPAZHP_TOP_CR_TILE_MIN_ADDR_EXT_00 0x000000FF
#define SHIFT_TOPAZHP_TOP_CR_TILE_MIN_ADDR_EXT_00 0
#define REGNUM_TOPAZHP_TOP_CR_TILE_MIN_ADDR_EXT_00 0x0080
#define SIGNED_TOPAZHP_TOP_CR_TILE_MIN_ADDR_EXT_00 0

#define MASK_TOPAZHP_TOP_CR_TILE_MAX_ADDR_EXT_00 0x0000FF00
#define SHIFT_TOPAZHP_TOP_CR_TILE_MAX_ADDR_EXT_00 8
#define REGNUM_TOPAZHP_TOP_CR_TILE_MAX_ADDR_EXT_00 0x0080
#define SIGNED_TOPAZHP_TOP_CR_TILE_MAX_ADDR_EXT_00 0

/* Register CR_MMU_TILE_EXT_1 */
#define TOPAZHP_TOP_CR_MMU_TILE_EXT_1 0x0084
#define MASK_TOPAZHP_TOP_CR_TILE_MIN_ADDR_EXT_01 0x000000FF
#define SHIFT_TOPAZHP_TOP_CR_TILE_MIN_ADDR_EXT_01 0
#define REGNUM_TOPAZHP_TOP_CR_TILE_MIN_ADDR_EXT_01 0x0084
#define SIGNED_TOPAZHP_TOP_CR_TILE_MIN_ADDR_EXT_01 0

#define MASK_TOPAZHP_TOP_CR_TILE_MAX_ADDR_EXT_01 0x0000FF00
#define SHIFT_TOPAZHP_TOP_CR_TILE_MAX_ADDR_EXT_01 8
#define REGNUM_TOPAZHP_TOP_CR_TILE_MAX_ADDR_EXT_01 0x0084
#define SIGNED_TOPAZHP_TOP_CR_TILE_MAX_ADDR_EXT_01 0

/* Register CR_TOPAZHP_CORE_ID */
#define TOPAZHP_TOP_CR_TOPAZHP_CORE_ID 0x03C0
#define MASK_TOPAZHP_TOP_CR_TOPAZHP_CORE_CONFIG 0x0000FFFF
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_CORE_CONFIG 0
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_CORE_CONFIG 0x03C0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_CORE_CONFIG 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_CORE_ID 0x00FF0000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_CORE_ID 16
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_CORE_ID 0x03C0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_CORE_ID 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_GROUP_ID 0xFF000000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_GROUP_ID 24
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_GROUP_ID 0x03C0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_GROUP_ID 0

/* Register CR_TOPAZHP_CORE_REV */
#define TOPAZHP_TOP_CR_TOPAZHP_CORE_REV 0x03D0
#define MASK_TOPAZHP_TOP_CR_TOPAZHP_MAINT_REV 0x000000FF
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_MAINT_REV 0
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_MAINT_REV 0x03D0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_MAINT_REV 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_MINOR_REV 0x0000FF00
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_MINOR_REV 8
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_MINOR_REV 0x03D0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_MINOR_REV 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_MAJOR_REV 0x00FF0000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_MAJOR_REV 16
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_MAJOR_REV 0x03D0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_MAJOR_REV 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_DESIGNER 0xFF000000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_DESIGNER 24
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_DESIGNER 0x03D0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_DESIGNER 0

/* Register CR_TOPAZHP_CORE_DES1 */
#define TOPAZHP_TOP_CR_TOPAZHP_CORE_DES1 0x03E0
#define MASK_TOPAZHP_TOP_CR_TOPAZHP_SCALER_SUPPORTED 0x00000080
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_SCALER_SUPPORTED 7
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_SCALER_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_SCALER_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_GENERATE_PERFORMANCE_STORE 0x00000100
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_GENERATE_PERFORMANCE_STORE 8
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_GENERATE_PERFORMANCE_STORE 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_GENERATE_PERFORMANCE_STORE 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_H264_LOSSLESS_SUPPORTED 0x00000200
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_H264_LOSSLESS_SUPPORTED 9
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_H264_LOSSLESS_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_H264_LOSSLESS_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_H264_CUSTOM_QUANT_SUPPORTED 0x00000400
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_H264_CUSTOM_QUANT_SUPPORTED 10
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_H264_CUSTOM_QUANT_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_H264_CUSTOM_QUANT_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_MPEG2_SUPPORTED 0x00000800
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_MPEG2_SUPPORTED 11
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_MPEG2_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_MPEG2_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_SIGNATURES_SUPPORTED_SUBSET 0x00001000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_SIGNATURES_SUPPORTED_SUBSET 12
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_SIGNATURES_SUPPORTED_SUBSET 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_SIGNATURES_SUPPORTED_SUBSET 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_SIGNATURES_SUPPORTED_ALL 0x00002000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_SIGNATURES_SUPPORTED_ALL 13
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_SIGNATURES_SUPPORTED_ALL 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_SIGNATURES_SUPPORTED_ALL 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_H264_WEIGHTED_PRED_ME_SUPPORTED 0x00004000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_H264_WEIGHTED_PRED_ME_SUPPORTED 14
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_H264_WEIGHTED_PRED_ME_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_H264_WEIGHTED_PRED_ME_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_H264_WEIGHTED_PRED_SUPPORTED 0x00008000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_H264_WEIGHTED_PRED_SUPPORTED 15
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_H264_WEIGHTED_PRED_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_H264_WEIGHTED_PRED_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_H264_2_REF_ON_P_PIC_SUPPORTED 0x00010000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_H264_2_REF_ON_P_PIC_SUPPORTED 16
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_H264_2_REF_ON_P_PIC_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_H264_2_REF_ON_P_PIC_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_H264_SPATIAL_DIRECT_SUPPORTED 0x00020000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_H264_SPATIAL_DIRECT_SUPPORTED 17
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_H264_SPATIAL_DIRECT_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_H264_SPATIAL_DIRECT_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_H264_MULTIPASS_SUPPORTED 0x00040000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_H264_MULTIPASS_SUPPORTED 18
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_H264_MULTIPASS_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_H264_MULTIPASS_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_H264_DEFAULT_TABLES_SUPPORTED 0x00080000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_H264_DEFAULT_TABLES_SUPPORTED 19
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_H264_DEFAULT_TABLES_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_H264_DEFAULT_TABLES_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_H264_8X8_TRANSFORM_SUPPORTED 0x00100000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_H264_8X8_TRANSFORM_SUPPORTED 20
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_H264_8X8_TRANSFORM_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_H264_8X8_TRANSFORM_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_H264_INTERLACED_SUPPORTED 0x00200000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_H264_INTERLACED_SUPPORTED 21
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_H264_INTERLACED_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_H264_INTERLACED_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_H264_B_PIC_SUPPORTED 0x00400000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_H264_B_PIC_SUPPORTED 22
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_H264_B_PIC_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_H264_B_PIC_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_H264_16X8_8X16_SUPPORTED 0x00800000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_H264_16X8_8X16_SUPPORTED 23
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_H264_16X8_8X16_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_H264_16X8_8X16_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_H264_CABAC_SUPPORTED 0x01000000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_H264_CABAC_SUPPORTED 24
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_H264_CABAC_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_H264_CABAC_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_SLAVE_JPEG_SUPPORTED 0x02000000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_SLAVE_JPEG_SUPPORTED 25
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_SLAVE_JPEG_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_SLAVE_JPEG_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_JPEG_SUPPORTED 0x04000000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_JPEG_SUPPORTED 26
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_JPEG_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_JPEG_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_H263_SUPPORTED 0x08000000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_H263_SUPPORTED 27
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_H263_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_H263_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_MPEG4_SUPPORTED 0x10000000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_MPEG4_SUPPORTED 28
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_MPEG4_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_MPEG4_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_H264_SUPPORTED 0x20000000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_H264_SUPPORTED 29
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_H264_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_H264_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_DMAC_SUPPORTED 0x40000000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_DMAC_SUPPORTED 30
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_DMAC_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_DMAC_SUPPORTED 0

#define MASK_TOPAZHP_TOP_CR_TOPAZHP_MMU_SUPPORTED 0x80000000
#define SHIFT_TOPAZHP_TOP_CR_TOPAZHP_MMU_SUPPORTED 31
#define REGNUM_TOPAZHP_TOP_CR_TOPAZHP_MMU_SUPPORTED 0x03E0
#define SIGNED_TOPAZHP_TOP_CR_TOPAZHP_MMU_SUPPORTED 0

/* Table MMU_DIR_LIST_BASE */

/* Register CR_MMU_DIR_LIST_BASE */
#define TOPAZHP_TOP_CR_MMU_DIR_LIST_BASE(X) (0x0030 + (4 * (X)))
#define MASK_TOPAZHP_TOP_CR_MMU_DIR_LIST_BASE_ADDR 0xFFFFFFF0
#define SHIFT_TOPAZHP_TOP_CR_MMU_DIR_LIST_BASE_ADDR 4
#define REGNUM_TOPAZHP_TOP_CR_MMU_DIR_LIST_BASE_ADDR 0x0030
#define SIGNED_TOPAZHP_TOP_CR_MMU_DIR_LIST_BASE_ADDR 0

/* Number of entries in table MMU_DIR_LIST_BASE */

#define TOPAZHP_TOP_MMU_DIR_LIST_BASE_SIZE_UINT32 1
#define TOPAZHP_TOP_MMU_DIR_LIST_BASE_NUM_ENTRIES 1


/* Table MMU_TILE */

/* Register CR_MMU_TILE */
#define TOPAZHP_TOP_CR_MMU_TILE(X)  (0x0038 + (4 * (X)))
#define MASK_TOPAZHP_TOP_CR_TILE_MIN_ADDR 0x00000FFF
#define SHIFT_TOPAZHP_TOP_CR_TILE_MIN_ADDR 0
#define REGNUM_TOPAZHP_TOP_CR_TILE_MIN_ADDR 0x0038
#define SIGNED_TOPAZHP_TOP_CR_TILE_MIN_ADDR 0

#define MASK_TOPAZHP_TOP_CR_TILE_MAX_ADDR 0x00FFF000
#define SHIFT_TOPAZHP_TOP_CR_TILE_MAX_ADDR 12
#define REGNUM_TOPAZHP_TOP_CR_TILE_MAX_ADDR 0x0038
#define SIGNED_TOPAZHP_TOP_CR_TILE_MAX_ADDR 0

#define MASK_TOPAZHP_TOP_CR_TILE_STRIDE 0x07000000
#define SHIFT_TOPAZHP_TOP_CR_TILE_STRIDE 24
#define REGNUM_TOPAZHP_TOP_CR_TILE_STRIDE 0x0038
#define SIGNED_TOPAZHP_TOP_CR_TILE_STRIDE 0

#define MASK_TOPAZHP_TOP_CR_TILE_ENABLE 0x10000000
#define SHIFT_TOPAZHP_TOP_CR_TILE_ENABLE 28
#define REGNUM_TOPAZHP_TOP_CR_TILE_ENABLE 0x0038
#define SIGNED_TOPAZHP_TOP_CR_TILE_ENABLE 0

/* Number of entries in table MMU_TILE */

#define TOPAZHP_TOP_MMU_TILE_SIZE_UINT32 2
#define TOPAZHP_TOP_MMU_TILE_NUM_ENTRIES 2


/* Table MMU_TILE_EXT */

/* Register CR_MMU_TILE_EXT */
#define TOPAZHP_TOP_CR_MMU_TILE_EXT(X) (0x0080 + (4 * (X)))
#define MASK_TOPAZHP_TOP_CR_TILE_MIN_ADDR_EXT 0x000000FF
#define SHIFT_TOPAZHP_TOP_CR_TILE_MIN_ADDR_EXT 0
#define REGNUM_TOPAZHP_TOP_CR_TILE_MIN_ADDR_EXT 0x0080
#define SIGNED_TOPAZHP_TOP_CR_TILE_MIN_ADDR_EXT 0

#define MASK_TOPAZHP_TOP_CR_TILE_MAX_ADDR_EXT 0x0000FF00
#define SHIFT_TOPAZHP_TOP_CR_TILE_MAX_ADDR_EXT 8
#define REGNUM_TOPAZHP_TOP_CR_TILE_MAX_ADDR_EXT 0x0080
#define SIGNED_TOPAZHP_TOP_CR_TILE_MAX_ADDR_EXT 0

/* Number of entries in table MMU_TILE_EXT */

#define TOPAZHP_TOP_MMU_TILE_EXT_SIZE_UINT32 2
#define TOPAZHP_TOP_MMU_TILE_EXT_NUM_ENTRIES 2


/* Register CR_MTX_DEBUG_MSTR */
#define TOPAZHP_TOP_CR_MTX_DEBUG_MSTR 0x0044
#define MASK_TOPAZHP_TOP_CR_MTX_MSTR_DBG_GPIO_IN 0x00000003
#define SHIFT_TOPAZHP_TOP_CR_MTX_MSTR_DBG_GPIO_IN 0
#define REGNUM_TOPAZHP_TOP_CR_MTX_MSTR_DBG_GPIO_IN 0x0044
#define SIGNED_TOPAZHP_TOP_CR_MTX_MSTR_DBG_GPIO_IN 0

#define MASK_TOPAZHP_TOP_CR_MTX_MSTR_DBG_IS_SLAVE 0x00000004
#define SHIFT_TOPAZHP_TOP_CR_MTX_MSTR_DBG_IS_SLAVE 2
#define REGNUM_TOPAZHP_TOP_CR_MTX_MSTR_DBG_IS_SLAVE 0x0044
#define SIGNED_TOPAZHP_TOP_CR_MTX_MSTR_DBG_IS_SLAVE 0

#define MASK_TOPAZHP_TOP_CR_MTX_MSTR_DBG_GPIO_OUT 0x00000018
#define SHIFT_TOPAZHP_TOP_CR_MTX_MSTR_DBG_GPIO_OUT 3
#define REGNUM_TOPAZHP_TOP_CR_MTX_MSTR_DBG_GPIO_OUT 0x0044
#define SIGNED_TOPAZHP_TOP_CR_MTX_MSTR_DBG_GPIO_OUT 0

#define MASK_TOPAZHP_TOP_CR_MTX_MSTR_RAM_BANKS 0x00000F00
#define SHIFT_TOPAZHP_TOP_CR_MTX_MSTR_RAM_BANKS 8
#define REGNUM_TOPAZHP_TOP_CR_MTX_MSTR_RAM_BANKS 0x0044
#define SIGNED_TOPAZHP_TOP_CR_MTX_MSTR_RAM_BANKS 0

#define MASK_TOPAZHP_TOP_CR_MTX_MSTR_RAM_BANK_SIZE 0x000F0000
#define SHIFT_TOPAZHP_TOP_CR_MTX_MSTR_RAM_BANK_SIZE 16
#define REGNUM_TOPAZHP_TOP_CR_MTX_MSTR_RAM_BANK_SIZE 0x0044
#define SIGNED_TOPAZHP_TOP_CR_MTX_MSTR_RAM_BANK_SIZE 0

#define MASK_TOPAZHP_TOP_CR_MTX_MSTR_LAST_RAM_BANK_SIZE 0x0F000000
#define SHIFT_TOPAZHP_TOP_CR_MTX_MSTR_LAST_RAM_BANK_SIZE 24
#define REGNUM_TOPAZHP_TOP_CR_MTX_MSTR_LAST_RAM_BANK_SIZE 0x0044
#define SIGNED_TOPAZHP_TOP_CR_MTX_MSTR_LAST_RAM_BANK_SIZE 0


/* Register CR_FIRMWARE_REG_1 */
#define TOPAZHP_TOP_CR_FIRMWARE_REG_1 0x0100
#define MASK_TOPAZHP_TOP_CR_FIRMWARE_REG_1 0xFFFFFFFF
#define SHIFT_TOPAZHP_TOP_CR_FIRMWARE_REG_1 0
#define REGNUM_TOPAZHP_TOP_CR_FIRMWARE_REG_1 0x0100
#define SIGNED_TOPAZHP_TOP_CR_FIRMWARE_REG_1 0

/* Register CR_FIRMWARE_REG_4 */
#define TOPAZHP_TOP_CR_FIRMWARE_REG_4 0x0300
#define MASK_TOPAZHP_TOP_CR_FIRMWARE_REG_4 0xFFFFFFFF
#define SHIFT_TOPAZHP_TOP_CR_FIRMWARE_REG_4 0
#define REGNUM_TOPAZHP_TOP_CR_FIRMWARE_REG_4 0x0300
#define SIGNED_TOPAZHP_TOP_CR_FIRMWARE_REG_4 0

#define MTX_SCRATCHREG_IDLE                     TOPAZHP_TOP_CR_FIRMWARE_REG_4

/* Flags relating to MTX_SCRATCHREG_IDLE */
#define SHIFT_FW_IDLE_REG_RECEIVED_COMMANDS (2)
#define MASK_FW_IDLE_REG_RECEIVED_COMMANDS (0x3FC)
#define SHIFT_FW_IDLE_REG_STATUS                (0)
#define MASK_FW_IDLE_REG_STATUS                 (3)

#define FW_IDLE_STATUS_IDLE                             (1)
#define FW_IDLE_STATUS_HW_ACTIVE                (2)
#define FW_IDLE_STATUS_BUSY                             (3)

/* Multicore Regs */
#define REG_OFFSET_TOPAZ_MULTICORE                      0x00000000
#define REG_OFFSET_TOPAZ_DMAC                           0x00000400
#define REG_OFFSET_TOPAZ_MTX                            0x00000800
#define REG_OFFSET_TOPAZ_VLC                            0x00000400

#define REG_MIN_TOPAZ_MULTICORE				0x0
#define REG_MAX_TOPAZ_MULTICORE				0x03FC
#define REG_MIN_TOPAZ_CORE				0x0
#define REG_MAX_TOPAZ_CORE				0x03FC
#define REG_MIN_TOPAZ_VLC				0x0
#define REG_MAX_TOPAZ_VLC				0x03FC

#define REG_SIZE_TOPAZ_MULTICORE                        0x00000400
#define REG_SIZE_TOPAZ_DMAC                                     0x00000400
#define REG_SIZE_TOPAZ_MTX                                      0x00000800

enum MTX_eScratchRegData {
	MTX_SCRATCHREG_FULLNESS = 0, /* !< Coded buffer fullness */
	MTX_SCRATCHREG_TOHOST,       /* !< Reg for MTX->Host data */
	MTX_SCRATCHREG_TOMTX,        /* !< Reg for Host->MTX data */
	MTX_SCRATCHREG_SIZE          /*!< End marker for enum */
};


/* FIXME, for not(IMG_UINT32_IS_ULONG), use "int" to replace "IMG_INT32" */
struct IMG_WRITEBACK_MSG {
	unsigned int ui32CmdWord;
	union {
		struct {
			unsigned int ui32Data;
			unsigned int ui32ExtraData;
			unsigned int ui32WritebackVal;
		};
		unsigned int ui32CodedBufferConsumed;
	};
};

#ifdef KPDUMP
#define MULTICORE_WRITE32(offset, value) \
	do { \
		*((unsigned long *)((unsigned char *)(dev_priv->topaz_reg) \
		+ REG_OFFSET_TOPAZ_MULTICORE + offset)) = value; \
		printk(KERN_ERR "WRW :REG_TOPAZHP_MULTICORE:0x%x 0x%x\n", \
		offset, value); \
	} while (0)

#define MULTICORE_READ32(offset, pointer) \
	do { \
		*(pointer) = *((unsigned long *)( \
			(unsigned char *)(dev_priv->topaz_reg) \
			+ REG_OFFSET_TOPAZ_MULTICORE + offset)); \
	} while (0)

#define DMAC_WRITE32(offset, value) \
	do {				       \
		*((unsigned long *)((unsigned char *)(dev_priv->topaz_reg) \
		+ REG_OFFSET_TOPAZ_DMAC + offset)) = value; \
		printk(KERN_ERR "WRW :REG_DMAC:0x%x 0x%x\n", offset, value); \
	} while (0)

#define DMAC_READ32(offset, pointer) \
	do {                                   \
		*(pointer) = *((unsigned long *)( \
			(unsigned char *)(dev_priv->topaz_reg) \
			+ REG_OFFSET_TOPAZ_DMAC + offset)); \
	} while (0)

#define MTX_WRITE32(offset, value) \
	do { \
		*((unsigned long *)((unsigned char *)(dev_priv->topaz_reg) \
				+ REG_OFFSET_TOPAZ_MTX + offset)) = value; \
		printk(KERN_ERR "WRW :REG_MTX:0x%x 0x%x\n", offset, value); \
	} while (0)

#define MTX_READ32(offset, pointer) \
	do { \
		*(pointer) = *((unsigned long *)( \
			(unsigned char *)(dev_priv->topaz_reg) \
			+ REG_OFFSET_TOPAZ_MTX + offset)); \
	} while (0)

#define TOPAZCORE_WRITE32(core, offset, value) \
	do { \
		*((unsigned long *)((unsigned char *)(dev_priv->topaz_reg) \
		+ core*(0x1000) + 0x1000 + offset)) = value; \
		printk(KERN_ERR "WRW :REG_TOPAZHP_CORE_0:0x%x 0x%x\n", \
			offset, value); \
	} while (0)

#define TOPAZCORE_READ32(core, offset, pointer) \
	do { \
		*(pointer) = *((unsigned long *)( \
			(unsigned char *)(dev_priv->topaz_reg) \
			+ core*(0x1000) + 0x1000 + offset));	\
	} while (0)

#define VLC_WRITE32(core, offset, value) \
	do { \
		*((unsigned long *)((unsigned char *)(dev_priv->topaz_reg) \
		+ core*(0x1000) + 0x1000 + \
		REG_OFFSET_TOPAZ_VLC + offset)) = value; \
		printk(KERN_ERR "WRW :REG_TOPAZHP_VLC_CORE_0:0x%x 0x%x\n", \
			offset, value); \
	} while (0)

#else

#define MULTICORE_WRITE32(offset, value) \
	do { \
		*((unsigned long *)((unsigned char *)(dev_priv->topaz_reg) \
		+ REG_OFFSET_TOPAZ_MULTICORE + offset)) = value; \
	} while (0)

#define MULTICORE_READ32(offset, pointer) \
	do { \
		*(pointer) = *((unsigned long *)( \
			(unsigned char *)(dev_priv->topaz_reg) \
			+ REG_OFFSET_TOPAZ_MULTICORE + offset)); \
	} while (0)

#define DMAC_WRITE32(offset, value) \
	do {				       \
		*((unsigned long *)((unsigned char *)(dev_priv->topaz_reg) \
		+ REG_OFFSET_TOPAZ_DMAC + offset)) = value; \
	} while (0)

#define DMAC_READ32(offset, pointer) \
	do { \
		*(pointer) = *((unsigned long *)( \
			(unsigned char *)(dev_priv->topaz_reg) \
			+ REG_OFFSET_TOPAZ_DMAC + offset)); \
	} while (0)

#define MTX_WRITE32(offset, value) \
	do { \
		*((unsigned long *)((unsigned char *)(dev_priv->topaz_reg) \
		+ REG_OFFSET_TOPAZ_MTX + offset)) = value; \
	} while (0)

#define MTX_READ32(offset, pointer) \
	do { \
		*(pointer) = *((unsigned long *)( \
			(unsigned char *)(dev_priv->topaz_reg) \
			+ REG_OFFSET_TOPAZ_MTX + offset));	\
	} while (0)

#define TOPAZCORE_WRITE32(core, offset, value) \
	do { \
		*((unsigned long *)((unsigned char *)(dev_priv->topaz_reg) \
		+ core*(0x1000) + 0x1000 + offset)) = value; \
	} while (0)

#define TOPAZCORE_READ32(core, offset, pointer) \
	do { \
		*(pointer) = *((unsigned long *)( \
			(unsigned char *)(dev_priv->topaz_reg) \
			+ core*(0x1000) + 0x1000 + offset)); \
	} while (0)

#define VLC_WRITE32(core, offset, value) \
	do { \
		*((unsigned long *)((unsigned char *)(dev_priv->topaz_reg) \
		+ core*(0x1000) + 0x1000 + \
		REG_OFFSET_TOPAZ_VLC + offset)) = value; \
	} while (0)
#endif
#define FPGA_AXI_WRITE32
#define FPGA_AXI_READ32
#define FPGA_OCP_WRITE32
#define FPGA_OCP_READ32

#define BIAS_MM_WRITE32(base, offset, value)  \
do {				       \
	*((unsigned long *)((unsigned char *)(dev_priv->topaz_reg)	\
				+ base + offset)) = value;		\
} while (0)

/*
 * MACROS to insert values into fields within a word. The basename of the
 * field must have MASK_BASENAME and SHIFT_BASENAME constants.
 */
#define MM_WRITE32(base, offset, value)  \
	do { \
		*((unsigned long *)( \
			(unsigned char *)(dev_priv->topaz_reg)	\
			+ base + offset)) = value;		\
	} while (0)

#define MM_READ32(base, offset, pointer) \
	do { \
		*(pointer) = *((unsigned long *)( \
			(unsigned char *)(dev_priv->topaz_reg) \
		+ base + offset));      \
	} while (0)

#define F_MASK(basename)  (MASK_##basename)
#define F_SHIFT(basename) (SHIFT_##basename)

#define F_INSERT(word, val, basename)	\
	(((word) & ~(F_MASK(basename))) | (F_ENCODE(val, basename)))

#define F_ENCODE(val, basename)	\
	(((val) << (F_SHIFT(basename))) & (F_MASK(basename)))

#define F_DECODE(val, basename)	\
	(((val) & (F_MASK(basename))) >> (F_SHIFT(basename)))


#define F_EXTRACT(val, basename) \
	(((val) & (F_MASK(basename))) >> (F_SHIFT(basename)))

/*! The number of TOPAZ cores present in the system */
#define TOPAZSC_NUM_CORES 2

#define TOPAZSC_REG_OFF_MAX (TOPAZSC_NUM_CORES * 0x10000 + 0x10000)
#define REG_BASE_MTX                        0x04800000
#define REG_BASE_HOST                       0x00000000

#define MTX_CORE_CODE_MEM       (0x10)
#define MTX_CORE_DATA_MEM       (0x18)

/* Topaz core registers - Host view */
#define REG_OFFSET_TOPAZ_CORE_HOST	0x00010000
#define REG_SIZE_TOPAZ_CORE_HOST	0x00010000

#define REG_OFFSET_TOPAZ_MTX_HOST	0x00000000
#define REG_OFFSET_TOPAZ_TOPAZ_HOST	0x00002000
#define REG_OFFSET_TOPAZ_MVEA_HOST	0x00003000
#define REG_OFFSET_TOPAZ_MVEACMD_HOST	0x00004000
#define REG_OFFSET_TOPAZ_VLC_HOST	0x00005000
#define REG_OFFSET_TOPAZ_DEBLOCKER_HOST	0x00006000
#define REG_OFFSET_TOPAZ_COMMS_HOST	0x00007000
#define REG_OFFSET_TOPAZ_ESB_HOST	0x00008000

#define REG_SIZE_TOPAZ_MTX_HOST		0x00002000
#define REG_SIZE_TOPAZ_TOPAZ_HOST	0x00001000
#define REG_SIZE_TOPAZ_MVEA_HOST	0x00001000
#define REG_SIZE_TOPAZ_MVEACMD_HOST	0x00001000
#define REG_SIZE_TOPAZ_VLC_HOST		0x00001000
#define REG_SIZE_TOPAZ_DEBLOCKER_HOST	0x00001000
#define REG_SIZE_TOPAZ_COMMS_HOST	0x00001000
#define REG_SIZE_TOPAZ_ESB_HOST		0x00004000


/* Topaz core registers MTX view */
#define REG_OFFSET_TOPAZ_CORE_MTX	0x00010000 /* MUST confirm */
#define REG_SIZE_TOPAZ_CORE_MTX		0x00010000 /* MUST confirm */

#define REG_OFFSET_TOPAZ_MTX_MTX	0x00000000
#define REG_OFFSET_TOPAZ_TOPAZ_MTX	0x00000800
#define REG_OFFSET_TOPAZ_MVEA_MTX	0x00000C00
#define REG_OFFSET_TOPAZ_MVEACMD_MTX	0x00001000
#define REG_OFFSET_TOPAZ_VLC_MTX	0x00001400
#define REG_OFFSET_TOPAZ_DEBLOCKER_MTX	0x00001800
#define REG_OFFSET_TOPAZ_COMMS_MTX	0x00001C00
#define REG_OFFSET_TOPAZ_ESB_MTX	0x00002000

#define REG_SIZE_TOPAZ_MTX_MTX		0x00000800
#define REG_SIZE_TOPAZ_TOPAZ_MTX	0x00000400
#define REG_SIZE_TOPAZ_MVEA_MTX		0x00000400
#define REG_SIZE_TOPAZ_MVEACMD_MTX	0x00000400
#define REG_SIZE_TOPAZ_VLC_MTX		0x00000400
#define REG_SIZE_TOPAZ_DEBLOCKER_MTX	0x00000400
#define REG_SIZE_TOPAZ_COMMS_MTX	0x00000400
#define REG_SIZE_TOPAZ_ESB_MTX		0x00002000


/* Register bank addresses - Host View */
#define REG_START_TOPAZ_MULTICORE_HOST	\
	(REG_BASE_HOST + REG_OFFSET_TOPAZ_MULTICORE)
#define REG_END_TOPAZ_MULTICORE_HOST	\
	(REG_START_TOPAZ_MULTICORE_HOST + REG_SIZE_TOPAZ_MULTICORE)

#define REG_START_TOPAZ_DMAC_HOST	\
	(REG_BASE_HOST + REG_OFFSET_TOPAZ_DMAC)
#define REG_END_TOPAZ_DMAC_HOST		\
	(REG_START_TOPAZ_DMAC_HOST + REG_SIZE_TOPAZ_DMAC)

/* #define REG_START_TOPAZ_MTX_HOST(core)	\
	(REG_BASE_HOST + (REG_SIZE_TOPAZ_CORE_HOST*core) + \
	REG_OFFSET_TOPAZ_CORE_HOST + REG_OFFSET_TOPAZ_MTX_HOST) */
/* #define REG_END_TOPAZ_MTX_HOST(core)	\
	(REG_START_TOPAZ_MTX_HOST(core) + REG_SIZE_TOPAZ_MTX_HOST) */
#define REG_START_TOPAZ_MTX_HOST	\
	(REG_BASE_HOST + REG_OFFSET_TOPAZ_MTX)
#define EG_END_TOPAZ_MTX_HOST(core)	\
	(REG_START_TOPAZ_MTX_HOST + REG_SIZE_TOPAZ_MTX)


#define REG_START_TOPAZ_TOPAZ_HOST(core)	\
	(REG_BASE_HOST + (REG_SIZE_TOPAZ_CORE_HOST*core) + \
	REG_OFFSET_TOPAZ_CORE_HOST + REG_OFFSET_TOPAZ_TOPAZ_HOST)
#define REG_END_TOPAZ_TOPAZ_HOST(core)	\
	(REG_START_TOPAZ_TOPAZ_HOST(core) + REG_SIZE_TOPAZ_TOPAZ_HOST)

#define REG_START_TOPAZ_MVEA_HOST(core)	\
	(REG_BASE_HOST + (REG_SIZE_TOPAZ_CORE_HOST*core) + \
	REG_OFFSET_TOPAZ_CORE_HOST + REG_OFFSET_TOPAZ_MVEA_HOST)
#define REG_END_TOPAZ_MVEA_HOST(core)	\
	(REG_START_TOPAZ_MVEA_HOST(core) + REG_SIZE_TOPAZ_MVEA_HOST)


/* Register bank addresses - MTX view */
#define REG_START_TOPAZ_MULTICORE_MTX	\
	(REG_BASE_MTX + REG_OFFSET_TOPAZ_MULTICORE)
#define REG_END_TOPAZ_MULTICORE_MTX	\
	(REG_START_TOPAZ_MULTICORE_MTX + REG_SIZE_TOPAZ_MULTICORE)

#define REG_START_TOPAZ_DMAC_MTX	\
	(REG_BASE_MTX + REG_OFFSET_TOPAZ_DMAC)
#define REG_END_TOPAZ_DMAC_MTX		\
	(REG_START_TOPAZ_DMAC_MTX + REG_SIZE_TOPAZ_DMAC)

#define REG_START_TOPAZ_MTX_MTX(core)	\
	(REG_BASE_MTX + (REG_SIZE_TOPAZ_CORE_MTX*core) + \
	REG_OFFSET_TOPAZ_CORE_MTX + REG_OFFSET_TOPAZ_MTX_MTX)
#define REG_END_TOPAZ_MTX_MTX(core)	\
	(REG_START_TOPAZ_MTX_MTX(core) + REG_SIZE_TOPAZ_MTX_MTX)

#define REG_START_TOPAZ_TOPAZ_MTX(core)	\
	(REG_BASE_MTX + (REG_SIZE_TOPAZ_CORE_MTX*core) + \
	REG_OFFSET_TOPAZ_CORE_MTX + REG_OFFSET_TOPAZ_TOPAZ_MTX)
#define REG_END_TOPAZ_TOPAZ_MTX(core)	\
	(REG_START_TOPAZ_TOPAZ_MTX(core) + REG_SIZE_TOPAZ_TOPAZ_MTX)

#define REG_START_TOPAZ_MVEA_MTX(core)	\
	(REG_BASE_MTX + (REG_SIZE_TOPAZ_CORE_MTX*core) + \
	REG_OFFSET_TOPAZ_CORE_MTX + REG_OFFSET_TOPAZ_MVEA_MTX)
#define REG_END_TOPAZ_MVEA_MTX(core)	\
	(REG_START_TOPAZ_MVEA_MTX(core) + REG_SIZE_TOPAZ_MVEA_MTX)


/* Every Topaz core has a 64K address space*/
#define TOPAZ_CORE_REG_BASE(core) (REG_BASE_HOST + \
	(REG_SIZE_TOPAZ_CORE_HOST*core) + REG_OFFSET_TOPAZ_CORE_HOST)

/* MVEA macro */
#define MVEA_START 0x03000

#ifdef TOPAZ_PDUMP
#define MVEA_WRITE32(offset, value, core) \
	do { \
		MM_WRITE32(MVEA_START + TOPAZ_CORE_REG_BASE(core), \
			offset, value); \
		DRM_ERROR("TOPAZ_PDUMP: MVEA core %d, REG_WT %x %x\n", \
			core, offset, value); \
	} while (0)
#define MVEA_READ32(offset, pointer, core) \
	do { \
		MM_READ32(MVEA_START + TOPAZ_CORE_REG_BASE(core), \
			offset, pointer); \
		DRM_ERROR("TOPAZ_PDUMP: MVEA core %d, REG_RD %x %x\n", \
			core, offset, *(uint32_t *)pointer);\
	} while (0)
#else
#define MVEA_WRITE32(offset, value, core) \
		MM_WRITE32(MVEA_START + TOPAZ_CORE_REG_BASE(core), \
			offset, value)

#define MVEA_READ32(offset, pointer, core) \
		MM_READ32(MVEA_START + TOPAZ_CORE_REG_BASE(core), \
			offset, pointer)
#endif

#define F_MASK_MVEA(basename)  (MASK_MVEA_##basename)	/*     MVEA    */
#define F_SHIFT_MVEA(basename) (SHIFT_MVEA_##basename)	/*     MVEA    */
#define F_ENCODE_MVEA(val, basename)  \
	(((val)<<(F_SHIFT_MVEA(basename)))&(F_MASK_MVEA(basename)))

/* MVEA ESB macro */
#define MVEA_ESB_START 0x08000

#ifdef TOPAZ_PDUMP
#define MVEA_ESB_WRITE32(offset, value, core) \
	do { \
		MM_WRITE32(MVEA_ESB_START + TOPAZ_CORE_REG_BASE(core),\
				offset, value); \
		DRM_ERROR("TOPAZ_PDUMP: MVEA core %d, REG_WT %x %x\n", \
				core, offset, value); \
	} while (0)
#define MVEA_ESB_READ32(offset, pointer, core) \
	do { \
		MM_READ32(MVEA_ESB_START + TOPAZ_CORE_REG_BASE(core),\
				offset, pointer); \
		DRM_ERROR("TOPAZ_PDUMP: MVEA core %d, REG_RD %x %x\n", \
				core, offset, *(uint32_t *)pointer);\
	} while (0)
#else
#define MVEA_ESB_WRITE32(offset, value, core) \
		MM_WRITE32(MVEA_ESB_START + TOPAZ_CORE_REG_BASE(core), \
				offset, value)

#define MVEA_ESB_READ32(offset, pointer, core) \
		MM_READ32(MVEA_ESB_START + TOPAZ_CORE_REG_BASE(core), \
				offset, pointer)
#endif


/* VLC macro */
#define TOPAZ_VLC_START 0x05000

/* TopazHP Multicore Memory Map */
#define TOPAZ_START 0x0000

#ifdef TOPAZ_PDUMP
#define FPGA_WRITE32(offset, value, core) \
	do {\
		MM_WRITE32(TOPAZ_START + TOPAZ_CORE_REG_BASE(core), \
			offset, value); \
		DRM_ERROR("TOPAZ_PDUMP: TOPAZ_CORE %d REG_WT: %x %x\n", \
			core, offset, value); \
	} while (0)
#define FPGA_READ32(offset, pointer, core) \
	do { \
		MM_READ32(TOPAZ_START + TOPAZ_CORE_REG_BASE(core), \
			offset, pointer); \
		DRM_ERROR("TOPAZ_PDUMP: TOPAZ_CORE %d REG_RD: %x %x\n", \
			core, offset, *(uint32_t *)pointer);\
	} while (0)
#else
#define FPGA_WRITE32(offset, value, core) \
		MM_WRITE32(TOPAZ_START + TOPAZ_CORE_REG_BASE(core), \
			offset, value)
#define FPGA_READ32(offset, pointer, core) \
		MM_READ32(TOPAZ_START + TOPAZ_CORE_REG_BASE(core), \
			offset, pointer)
#endif
#define F_MASK_TOPAZ(basename)  (MASK_TOPAZ_##basename)
#define F_SHIFT_TOPAZ(basename) (SHIFT_TOPAZ_##basename)
#define F_ENCODE_TOPAZ(val, basename) \
	(((val)<<(F_SHIFT_TOPAZ(basename)))&(F_MASK_TOPAZ(basename)))
/* DMAC macro */
#define DMAC_START 0x01000

#define F_MASK_DMAC(basename)  (MASK_DMAC_##basename)
#define F_SHIFT_DMAC(basename) (SHIFT_DMAC_##basename)
#define F_ENCODE_DMAC(val, basename)  \
	(((val)<<(F_SHIFT_DMAC(basename)))&(F_MASK_DMAC(basename)))

/* Register CR_IMG_TOPAZ_INTENAB */
#define TOPAZ_CR_IMG_TOPAZ_INTENAB  0x0008
#define MASK_TOPAZ_CR_IMG_TOPAZ_INTEN_MVEA 0x00000001
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_INTEN_MVEA 0
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_INTEN_MVEA 0x0008

#define MASK_TOPAZ_CR_IMG_TOPAZ_INTEN_MTX 0x00000002
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_INTEN_MTX 1
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_INTEN_MTX 0x0008

#define MASK_TOPAZ_CR_IMG_TOPAZ_INTEN_MTX_HALT 0x00000004
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_INTEN_MTX_HALT 2
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_INTEN_MTX_HALT 0x0008

/*(Bit 3 enables fault interrupts caused by the topaz_cores. Bit 4 enables
 * fault interrupts caused by the DMAC)*/
#define MASK_TOPAZ_CR_IMG_TOPAZ_INTEN_MMU_FAULT 0x00000018
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_INTEN_MMU_FAULT 3
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_INTEN_MMU_FAULT 0x0008

#define MASK_TOPAZ_CR_IMG_TOPAZ_MAS_INTEN 0x80000000
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_MAS_INTEN 31
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_MAS_INTEN 0x0008

#define TOPAZ_CR_IMG_TOPAZ_INTCLEAR 0x000C
#define MASK_TOPAZ_CR_IMG_TOPAZ_INTCLR_MVEA 0x00000001
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_INTCLR_MVEA 0
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_INTCLR_MVEA 0x000C

#define TOPAZ_CR_IMG_TOPAZ_INTSTAT  0x0004
#define MASK_TOPAZ_CR_IMG_TOPAZ_INTS_MVEA 0x00000001
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_INTS_MVEA 0
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_INTS_MVEA 0x0004

#define MTX_CCBCTRL_ROFF		0
#define MTX_CCBCTRL_COMPLETE		4
#define MTX_CCBCTRL_CCBSIZE		8
#define MTX_CCBCTRL_QP			12
#define MTX_CCBCTRL_FRAMESKIP		20
#define MTX_CCBCTRL_INITQP		24

#define TOPAZ_CR_MMU_STATUS         0x001C
#define MASK_TOPAZ_CR_MMU_PF_N_RW   0x00000001
#define SHIFT_TOPAZ_CR_MMU_PF_N_RW  0
#define REGNUM_TOPAZ_CR_MMU_PF_N_RW 0x001C

#define MASK_TOPAZ_CR_IMG_TOPAZ_INTCLR_MMU_FAULT 0x00000008
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_INTCLR_MMU_FAULT 3
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_INTCLR_MMU_FAULT 0x000C

#define TOPAZ_CR_MMU_MEM_REQ        0x0020
#define MASK_TOPAZ_CR_MEM_REQ_STAT_READS 0x000000FF
#define SHIFT_TOPAZ_CR_MEM_REQ_STAT_READS 0
#define REGNUM_TOPAZ_CR_MEM_REQ_STAT_READS 0x0020

#define MASK_TOPAZ_CR_IMG_TOPAZ_INTCLR_MTX 0x00000002
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_INTCLR_MTX 1
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_INTCLR_MTX 0x000C

#define MASK_TOPAZ_CR_IMG_TOPAZ_INTCLR_MTX_HALT 0x00000004
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_INTCLR_MTX_HALT 2
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_INTCLR_MTX_HALT 0x000C

/* Register CR_TOPAZ_CMD_FIFO_2 */
#define TOPAZ_CR_TOPAZ_CMD_FIFO_2   0x005C
#define MASK_TOPAZ_CR_CMD_FIFO_FLUSH 0x00000001
#define SHIFT_TOPAZ_CR_CMD_FIFO_FLUSH 0
#define REGNUM_TOPAZ_CR_CMD_FIFO_FLUSH 0x005C

#define MTX_DATA_MEM_BASE		0x82880000
#define MASK_MTX_MTX_MCMID          0x0FF00000
#define SHIFT_MTX_MTX_MCMID         20
#define REGNUM_MTX_MTX_MCMID        0x0108

#define MASK_MTX_MTX_MCM_ADDR       0x000FFFFC
#define SHIFT_MTX_MTX_MCM_ADDR      2
#define REGNUM_MTX_MTX_MCM_ADDR     0x0108

#define MTX_CR_MTX_RAM_ACCESS_STATUS 0x010C
#define MASK_MTX_MTX_MTX_MCM_STAT   0x00000001
#define SHIFT_MTX_MTX_MTX_MCM_STAT  0
#define REGNUM_MTX_MTX_MTX_MCM_STAT 0x010C

#define MASK_MTX_MTX_MCMAI          0x00000002
#define SHIFT_MTX_MTX_MCMAI         1
#define REGNUM_MTX_MTX_MCMAI        0x0108

#define MVEA_CR_MVEA_BUSY           0x0018
#define MVEA_CR_MVEA_DMACMDFIFO_WAIT 0x001C
#define MVEA_CR_MVEA_DMACMDFIFO_STATUS 0x0020

#define MVEA_CR_IMG_MVEA_SRST       0x0000
#define MASK_MVEA_CR_IMG_MVEA_SPE_SOFT_RESET 0x00000001
#define SHIFT_MVEA_CR_IMG_MVEA_SPE_SOFT_RESET 0
#define REGNUM_MVEA_CR_IMG_MVEA_SPE_SOFT_RESET 0x0000

#define MASK_MVEA_CR_IMG_MVEA_IPE_SOFT_RESET 0x00000002
#define SHIFT_MVEA_CR_IMG_MVEA_IPE_SOFT_RESET 1
#define REGNUM_MVEA_CR_IMG_MVEA_IPE_SOFT_RESET 0x0000

#define MASK_MVEA_CR_IMG_MVEA_CMPRS_SOFT_RESET 0x00000004
#define SHIFT_MVEA_CR_IMG_MVEA_CMPRS_SOFT_RESET 2
#define REGNUM_MVEA_CR_IMG_MVEA_CMPRS_SOFT_RESET 0x0000

#define MASK_MVEA_CR_IMG_MVEA_JMCOMP_SOFT_RESET 0x00000008
#define SHIFT_MVEA_CR_IMG_MVEA_JMCOMP_SOFT_RESET 3
#define REGNUM_MVEA_CR_IMG_MVEA_JMCOMP_SOFT_RESET 0x0000

#define MASK_MVEA_CR_IMG_MVEA_CMC_SOFT_RESET 0x00000010
#define SHIFT_MVEA_CR_IMG_MVEA_CMC_SOFT_RESET 4
#define REGNUM_MVEA_CR_IMG_MVEA_CMC_SOFT_RESET 0x0000

#define MASK_MVEA_CR_IMG_MVEA_DCF_SOFT_RESET 0x00000020
#define SHIFT_MVEA_CR_IMG_MVEA_DCF_SOFT_RESET 5
#define REGNUM_MVEA_CR_IMG_MVEA_DCF_SOFT_RESET 0x0000

#define TOPAZ_CR_IMG_TOPAZ_CORE_ID  0x03C0
#define TOPAZ_CR_IMG_TOPAZ_CORE_REV 0x03D0

#define TOPAZ_MTX_PC		(0x00000005)

#define TOPAZ_CR_TOPAZ_AUTO_CLK_GATE 0x0014
#define MASK_TOPAZ_CR_TOPAZ_VLC_AUTO_CLK_GATE 0x00000001
#define SHIFT_TOPAZ_CR_TOPAZ_VLC_AUTO_CLK_GATE 0
#define REGNUM_TOPAZ_CR_TOPAZ_VLC_AUTO_CLK_GATE 0x0014

#define MASK_TOPAZ_CR_TOPAZ_DB_AUTO_CLK_GATE 0x00000002
#define SHIFT_TOPAZ_CR_TOPAZ_DB_AUTO_CLK_GATE 1
#define REGNUM_TOPAZ_CR_TOPAZ_DB_AUTO_CLK_GATE 0x0014

#define	MTX_CORE_CR_MTX_REGISTER_READ_WRITE_DATA_OFFSET 0x000000F8
#define	MTX_CORE_CR_MTX_REGISTER_READ_WRITE_REQUEST_OFFSET 0x000000FC
#define	MTX_CORE_CR_MTX_REGISTER_READ_WRITE_REQUEST_MTX_RNW_MASK 0x00010000
#define	MTX_CORE_CR_MTX_REGISTER_READ_WRITE_REQUEST_MTX_DREADY_MASK 0x80000000

#define	TOPAZ_CORE_CR_MTX_DEBUG_OFFSET	0x00000044

#define MASK_TOPAZ_CR_MTX_RAM_BANKS 0x00000F00
#define SHIFT_TOPAZ_CR_MTX_RAM_BANKS 8
#define REGNUM_TOPAZ_CR_MTX_RAM_BANKS 0x0044

#define MASK_TOPAZ_CR_MTX_RAM_BANK_SIZE 0x000F0000
#define SHIFT_TOPAZ_CR_MTX_RAM_BANK_SIZE 16
#define REGNUM_TOPAZ_CR_MTX_RAM_BANK_SIZE 0x0044

#define MASK_TOPAZ_CR_MTX_LAST_RAM_BANK_SIZE 0x0F000000
#define SHIFT_TOPAZ_CR_MTX_LAST_RAM_BANK_SIZE 24
#define REGNUM_TOPAZ_CR_MTX_LAST_RAM_BANK_SIZE 0x0044

#define MASK_TOPAZ_CR_MTX_DBG_IS_SLAVE 0x00000004
#define SHIFT_TOPAZ_CR_MTX_DBG_IS_SLAVE 2
#define REGNUM_TOPAZ_CR_MTX_DBG_IS_SLAVE 0x003C

#define MASK_TOPAZ_CR_MTX_DBG_GPIO_OUT 0x00000018
#define SHIFT_TOPAZ_CR_MTX_DBG_GPIO_OUT 3
#define REGNUM_TOPAZ_CR_MTX_DBG_GPIO_OUT 0x003C

/* Register CR_MTX_RAM_ACCESS_DATA_EXCHANGE */
#define MTX_CR_MTX_RAM_ACCESS_DATA_EXCHANGE 0x0100
/* Register CR_MTX_RAM_ACCESS_DATA_TRANSFER */
#define MTX_CR_MTX_RAM_ACCESS_DATA_TRANSFER 0x0104

#define	MTX_CORE_CR_MTX_RAM_ACCESS_CONTROL_OFFSET 0x00000108
#define MASK_MTX_MTX_MCMR           0x00000001
#define SHIFT_MTX_MTX_MCMR          0
#define REGNUM_MTX_MTX_MCMR         0x0108

#define MASK_MTX_MTX_MCMAI          0x00000002
#define SHIFT_MTX_MTX_MCMAI         1
#define REGNUM_MTX_MTX_MCMAI        0x0108

#define MASK_MTX_MTX_MCM_ADDR       0x000FFFFC
#define SHIFT_MTX_MTX_MCM_ADDR      2
#define REGNUM_MTX_MTX_MCM_ADDR     0x0108

#define MASK_MTX_MTX_MCMID          0x0FF00000
#define SHIFT_MTX_MTX_MCMID         20
#define REGNUM_MTX_MTX_MCMID        0x0108

#define TOPAZ_CR_MMU_CONTROL0       0x0024
#define MASK_TOPAZ_CR_MMU_BYPASS_DMAC 0x00020000
#define SHIFT_TOPAZ_CR_MMU_BYPASS_DMAC 17
#define REGNUM_TOPAZ_CR_MMU_BYPASS_DMAC 0x0024

#define MASK_TOPAZ_CR_MMU_BYPASS    0x00010000
#define SHIFT_TOPAZ_CR_MMU_BYPASS   16
#define REGNUM_TOPAZ_CR_MMU_BYPASS  0x0024

#define TOPAZ_CR_MMU_DIR_LIST_BASE(X) (0x0030 + (4 * (X)))
#define MASK_TOPAZ_CR_MMU_DIR_LIST_BASE_ADDR 0xFFFFF000
#define SHIFT_TOPAZ_CR_MMU_DIR_LIST_BASE_ADDR 12
#define REGNUM_TOPAZ_CR_MMU_DIR_LIST_BASE_ADDR 0x0030

#define MASK_TOPAZ_CR_MMU_INVALDC   0x00000008
#define SHIFT_TOPAZ_CR_MMU_INVALDC  3
#define REGNUM_TOPAZ_CR_MMU_INVALDC 0x0024

#define MASK_TOPAZ_CR_MMU_FLUSH     0x00000004
#define SHIFT_TOPAZ_CR_MMU_FLUSH    2
#define REGNUM_TOPAZ_CR_MMU_FLUSH   0x0024

#define TOPAZ_CR_MMU_CONTROL1       0x0028

/* Register CR_MMU_BANK_INDEX */
#define TOPAZ_CR_MMU_BANK_INDEX     0x0040
#define MASK_TOPAZ_CR_MMU_BANK_N_INDEX_M(i) (0x00000003 << (8 + ((i) * 2)))
#define SHIFT_TOPAZ_CR_MMU_BANK_N_INDEX_M(i) (8 + ((i) * 2))
#define REGNUM_TOPAZ_CR_MMU_BANK_N_INDEX_M(i) 0x0040

#define MASK_TOPAZ_CR_MMU_BANK_SELECT(i) (0x00000001 << (0 + ((i) * 1)))
#define SHIFT_TOPAZ_CR_MMU_BANK_SELECT(i) (0 + ((i) * 1))
#define REGNUM_TOPAZ_CR_MMU_BANK_SELECT(i) 0x0040

#define TOPAZ_CR_TOPAZ_MAN_CLK_GATE 0x0010
#define MASK_TOPAZ_CR_TOPAZ_MTX_MAN_CLK_GATE 0x00000002
#define SHIFT_TOPAZ_CR_TOPAZ_MTX_MAN_CLK_GATE 1
#define REGNUM_TOPAZ_CR_TOPAZ_MTX_MAN_CLK_GATE 0x0010

#define MTX_CORE_CR_MTX_TXRPT_OFFSET 0x0000000c
#define TXRPT_WAITONKICK_VALUE 0x8ade0000

#define MTX_CORE_CR_MTX_ENABLE_MTX_TOFF_MASK 0x00000002

#define MTX_CORE_CR_MTX_ENABLE_OFFSET 0x00000000
#define	MTX_CORE_CR_MTX_ENABLE_MTX_ENABLE_MASK 0x00000001

#define MASK_TOPAZ_CR_IMG_TOPAZ_INTS_MTX 0x00000002
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_INTS_MTX 1
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_INTS_MTX 0x0004

#define	MTX_CORE_CR_MTX_SOFT_RESET_OFFSET 0x00000200
#define	MTX_CORE_CR_MTX_SOFT_RESET_MTX_RESET_MASK 0x00000001
#define MASK_MTX_BURSTSIZE          0x07000000
#define SHIFT_MTX_BURSTSIZE         24
#define REGNUM_MTX_BURSTSIZE        0x0340

#define MASK_MTX_RNW                0x00020000
#define SHIFT_MTX_RNW               17
#define REGNUM_MTX_RNW              0x0340

#define MASK_MTX_ENABLE             0x00010000
#define SHIFT_MTX_ENABLE            16
#define REGNUM_MTX_ENABLE           0x0340

#define MASK_MTX_LENGTH             0x0000FFFF
#define SHIFT_MTX_LENGTH            0
#define REGNUM_MTX_LENGTH           0x0340

#define TOPAZ_CR_IMG_TOPAZ_SRST     0x0000
#define MASK_TOPAZ_CR_IMG_TOPAZ_MVEA_SOFT_RESET 0x00000001
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_MVEA_SOFT_RESET 0
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_MVEA_SOFT_RESET 0x0000

#define MASK_TOPAZ_CR_IMG_TOPAZ_IO_SOFT_RESET 0x00000004
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_IO_SOFT_RESET 2
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_IO_SOFT_RESET 0x0000
#define SIGNED_TOPAZ_CR_IMG_TOPAZ_IO_SOFT_RESET 0

#define MASK_TOPAZ_CR_IMG_TOPAZ_VLC_SOFT_RESET 0x00000008
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_VLC_SOFT_RESET 3
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_VLC_SOFT_RESET 0x0000
#define SIGNED_TOPAZ_CR_IMG_TOPAZ_VLC_SOFT_RESET 0

#define MASK_TOPAZ_CR_IMG_TOPAZ_DB_SOFT_RESET 0x00000010
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_DB_SOFT_RESET 4
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_DB_SOFT_RESET 0x0000
#define SIGNED_TOPAZ_CR_IMG_TOPAZ_DB_SOFT_RESET 0

#define MASK_TOPAZ_CR_IMG_TOPAZ_MTX_SOFT_RESET 0x00000002
#define SHIFT_TOPAZ_CR_IMG_TOPAZ_MTX_SOFT_RESET 1
#define REGNUM_TOPAZ_CR_IMG_TOPAZ_MTX_SOFT_RESET 0x0000

#define MVEA_CR_MVEA_AUTO_CLOCK_GATING 0x0024
#define MASK_MVEA_CR_MVEA_SPE_AUTO_CLK_GATE 0x00000001
#define SHIFT_MVEA_CR_MVEA_SPE_AUTO_CLK_GATE 0
#define REGNUM_MVEA_CR_MVEA_SPE_AUTO_CLK_GATE 0x0024

#define MASK_MVEA_CR_MVEA_IPE_AUTO_CLK_GATE 0x00000002
#define SHIFT_MVEA_CR_MVEA_IPE_AUTO_CLK_GATE 1
#define REGNUM_MVEA_CR_MVEA_IPE_AUTO_CLK_GATE 0x0024

#define MASK_MVEA_CR_MVEA_CMPRS_AUTO_CLK_GATE 0x00000004
#define SHIFT_MVEA_CR_MVEA_CMPRS_AUTO_CLK_GATE 2
#define REGNUM_MVEA_CR_MVEA_CMPRS_AUTO_CLK_GATE 0x0024

#define MASK_MVEA_CR_MVEA_JMCOMP_AUTO_CLK_GATE 0x00000008
#define SHIFT_MVEA_CR_MVEA_JMCOMP_AUTO_CLK_GATE 3
#define REGNUM_MVEA_CR_MVEA_JMCOMP_AUTO_CLK_GATE 0x0024

/* Register CR_TOPAZ_HW_CFG */
#define TOPAZ_CR_TOPAZ_HW_CFG       0x0050
#define MASK_TOPAZ_CR_NUM_CORES_SUPPORTED 0x0000001F
#define SHIFT_TOPAZ_CR_NUM_CORES_SUPPORTED 0
#define REGNUM_TOPAZ_CR_NUM_CORES_SUPPORTED 0x0050

/* Register CR_TOPAZ_CMD_FIFO_0 */
#define TOPAZ_CR_TOPAZ_CMD_FIFO_0   0x0054
#define MASK_TOPAZ_CR_CMD_FIFO_RDATA 0xFFFFFFFF
#define SHIFT_TOPAZ_CR_CMD_FIFO_RDATA 0
#define REGNUM_TOPAZ_CR_CMD_FIFO_RDATA 0x0054

/* Register CR_TOPAZ_CMD_FIFO_1 */
#define TOPAZ_CR_TOPAZ_CMD_FIFO_1   0x0058
#define MASK_TOPAZ_CR_CMD_FIFO_QUANTITY 0x000000FF
#define SHIFT_TOPAZ_CR_CMD_FIFO_QUANTITY 0
#define REGNUM_TOPAZ_CR_CMD_FIFO_QUANTITY 0x0058

#define MASK_TOPAZ_CR_CMD_FIFO_NOTEMPTY 0x00000100
#define SHIFT_TOPAZ_CR_CMD_FIFO_NOTEMPTY 8
#define REGNUM_TOPAZ_CR_CMD_FIFO_NOTEMPTY 0x0058

/* Register CR_TOPAZ_CMD_FIFO_2 */
#define TOPAZ_CR_TOPAZ_CMD_FIFO_2   0x005C
#define MASK_TOPAZ_CR_CMD_FIFO_FLUSH 0x00000001
#define SHIFT_TOPAZ_CR_CMD_FIFO_FLUSH 0
#define REGNUM_TOPAZ_CR_CMD_FIFO_FLUSH 0x005C

#define MASK_IMG_SOC_BSWAP          0x40000000
#define SHIFT_IMG_SOC_BSWAP         30
#define REGNUM_IMG_SOC_BSWAP        0x0004

#define MASK_IMG_SOC_PW             0x18000000
#define SHIFT_IMG_SOC_PW            27
#define REGNUM_IMG_SOC_PW           0x0004

#define MASK_IMG_SOC_DIR            0x04000000
#define SHIFT_IMG_SOC_DIR           26
#define REGNUM_IMG_SOC_DIR          0x0004

#define MASK_IMG_SOC_PI             0x03000000
#define SHIFT_IMG_SOC_PI            24
#define REGNUM_IMG_SOC_PI           0x0004
#define IMG_SOC_PI_1		0x00000002
#define IMG_SOC_PI_2		0x00000001
#define IMG_SOC_PI_4		0x00000000

/* #define MASK_IMG_SOC_TRANSFER_IEN   0x20000000 */
/* #define SHIFT_IMG_SOC_TRANSFER_IEN  29 */
/* #define REGNUM_IMG_SOC_TRANSFER_IEN 0x0004 */

/* copy from topazscfwif.h */
#define DMAC_VALUE_COUNT(BSWAP, PW, DIR, PERIPH_INCR, COUNT) \
	((((BSWAP)       << SHIFT_IMG_SOC_BSWAP) & MASK_IMG_SOC_BSWAP) | \
	(((PW)          << SHIFT_IMG_SOC_PW)     & MASK_IMG_SOC_PW)    | \
	(((DIR)         << SHIFT_IMG_SOC_DIR)    & MASK_IMG_SOC_DIR)   | \
	(((PERIPH_INCR) << SHIFT_IMG_SOC_PI)     & MASK_IMG_SOC_PI)    | \
	(((COUNT)       << SHIFT_IMG_SOC_CNT)    & MASK_IMG_SOC_CNT))

#define DMAC_VALUE_PERIPH_PARAM(ACC_DEL, INCR, BURST) \
	((((ACC_DEL) << SHIFT_IMG_SOC_ACC_DEL) & MASK_IMG_SOC_ACC_DEL) | \
	(((INCR)    << SHIFT_IMG_SOC_INCR)    & MASK_IMG_SOC_INCR) | \
	(((BURST)   << SHIFT_IMG_SOC_BURST)   & MASK_IMG_SOC_BURST))

#define IMG_SOC_DMAC_PERIPHERAL_ADDR(X) (0x0014 + (32 * (X)))
#define MASK_IMG_SOC_ADDR           0x007FFFFF
#define SHIFT_IMG_SOC_ADDR          0
#define REGNUM_IMG_SOC_ADDR         0x0014

#define SHIFT_TOPAZ_VEC_BUSY        11
#define MASK_TOPAZ_VEC_BUSY         (0x1<<SHIFT_TOPAZ_VEC_BUSY)

#define TOPAZ_MTX_TXRPT_OFFSET         0xc
#define TOPAZ_GUNIT_GVD_PSMI_GFX_OFFSET 0x20D0

#define TOPAZ_GUNIT_READ32(offset)  ioread32(dev_priv->vdc_reg + offset)
#define TOPAZ_READ_BITS(val, basename) \
		(((val)&MASK_TOPAZ_##basename)>>SHIFT_TOPAZ_##basename)

#define TOPAZ_WAIT_UNTIL_IDLE \
	do { \
		uint8_t tmp_poll_number = 0;\
		uint32_t tmp_reg; \
		if (topaz_priv->topaz_cmd_windex == \
			WB_CCB_CTRL_RINDEX(dev_priv)) { \
			tmp_reg = TOPAZ_GUNIT_READ32( \
					TOPAZ_GUNIT_GVD_PSMI_GFX_OFFSET); \
		if (0 != TOPAZ_READ_BITS(tmp_reg, VEC_BUSY)) { \
			MTX_READ32(TOPAZ_MTX_TXRPT_OFFSET, &tmp_reg);\
			while ((tmp_reg != 0x8ade0000) && \
				(tmp_poll_number++ < 10)) \
				MTX_READ32(0xc, &tmp_reg); \
				PSB_DEBUG_GENERAL( \
					"TOPAZ: TXRPT reg remain: %x," \
					"poll %d times.\n", \
					tmp_reg, tmp_poll_number);\
			} \
		} \
	} while (0)

/* Register CR_BUFFER_SIDEBAND */
#define MVEA_CR_BUFFER_SIDEBAND     0x017C
#define MASK_MVEA_CR_CURR_MB_SBAND  0x00000003
#define SHIFT_MVEA_CR_CURR_MB_SBAND 0
#define REGNUM_MVEA_CR_CURR_MB_SBAND 0x017C

#define MASK_MVEA_CR_ABOVE_PIX_IN_SBAND 0x0000000C
#define SHIFT_MVEA_CR_ABOVE_PIX_IN_SBAND 2
#define REGNUM_MVEA_CR_ABOVE_PIX_IN_SBAND 0x017C

#define MASK_MVEA_CR_CURR_PARAM_SBAND 0x00000030
#define SHIFT_MVEA_CR_CURR_PARAM_SBAND 4
#define REGNUM_MVEA_CR_CURR_PARAM_SBAND 0x017C

#define MASK_MVEA_CR_BELOW_PARAM_IN_SBAND 0x000000C0
#define SHIFT_MVEA_CR_BELOW_PARAM_IN_SBAND 6
#define REGNUM_MVEA_CR_BELOW_PARAM_IN_SBAND 0x017C

#define MASK_MVEA_CR_ABOVE_PARAM_IN_SBAND 0x00000300
#define SHIFT_MVEA_CR_ABOVE_PARAM_IN_SBAND 8
#define REGNUM_MVEA_CR_ABOVE_PARAM_IN_SBAND 0x017C

#define MASK_MVEA_CR_REF_SBAND      0x00000C00
#define SHIFT_MVEA_CR_REF_SBAND     10
#define REGNUM_MVEA_CR_REF_SBAND    0x017C

#define MASK_MVEA_CR_RECON_SBAND    0x00003000
#define SHIFT_MVEA_CR_RECON_SBAND   12
#define REGNUM_MVEA_CR_RECON_SBAND  0x017C

#define MASK_MVEA_CR_ABOVE_PIX_OUT_SBAND 0x0000C000
#define SHIFT_MVEA_CR_ABOVE_PIX_OUT_SBAND 14
#define REGNUM_MVEA_CR_ABOVE_PIX_OUT_SBAND 0x017C

#define MASK_MVEA_CR_BELOW_PARAM_OUT_SBAND 0x00030000
#define SHIFT_MVEA_CR_BELOW_PARAM_OUT_SBAND 16
#define REGNUM_MVEA_CR_BELOW_PARAM_OUT_SBAND 0x017C

#define MASK_MVEA_CR_ABOVE_PARAM_OUT_SBAND 0x000C0000
#define SHIFT_MVEA_CR_ABOVE_PARAM_OUT_SBAND 18
#define REGNUM_MVEA_CR_ABOVE_PARAM_OUT_SBAND 0x017C

/* Register CR_IPE_JITTER_FACTOR */
#define MVEA_CR_IPE_JITTER_FACTOR   0x0218
#define MASK_MVEA_CR_IPE_JITTER_FACTOR 0x00000003
#define SHIFT_MVEA_CR_IPE_JITTER_FACTOR 0
#define REGNUM_MVEA_CR_IPE_JITTER_FACTOR 0x0218

/* Register CR_MULTICORE_INT_STAT */
#define TOPAZSC_CR_MULTICORE_INT_STAT 0x0000
#define MASK_TOPAZSC_CR_INT_STAT_DMAC 0x80000000
#define SHIFT_TOPAZSC_CR_INT_STAT_DMAC 31
#define REGNUM_TOPAZSC_CR_INT_STAT_DMAC 0x0000

#define MASK_TOPAZSC_CR_INT_STAT_CORES 0x7FFFFFFF
#define SHIFT_TOPAZSC_CR_INT_STAT_CORES 0
#define REGNUM_TOPAZSC_CR_INT_STAT_CORES 0x0000

/* Register CR_MULTICORE_CORE_SEL_0 */
#define TOPAZSC_CR_MULTICORE_CORE_SEL_0 0x0004
#define MASK_TOPAZSC_CR_DMAC_CORE_SELECT 0x0000000F
#define SHIFT_TOPAZSC_CR_DMAC_CORE_SELECT 0
#define REGNUM_TOPAZSC_CR_DMAC_CORE_SELECT 0x0004

#define MASK_TOPAZSC_CR_WRITES_CORE_ALL 0x80000000
#define SHIFT_TOPAZSC_CR_WRITES_CORE_ALL 31
#define REGNUM_TOPAZSC_CR_WRITES_CORE_ALL 0x0004

/* Register CR_MULTICORE_CORE_SEL_1 */
#define TOPAZSC_CR_MULTICORE_CORE_SEL_1 0x0008
#define MASK_TOPAZSC_CR_RTM_PORT_CORE_SELECT 0x0000000F
#define SHIFT_TOPAZSC_CR_RTM_PORT_CORE_SELECT 0
#define REGNUM_TOPAZSC_CR_RTM_PORT_CORE_SELECT 0x0008

/* Register CR_MULTICORE_RSVD0 */
#define TOPAZSC_CR_MULTICORE_RSVD0  0x0010
#define MASK_TOPAZSC_CR_RESERVED0   0xFFFFFFFF
#define SHIFT_TOPAZSC_CR_RESERVED0  0
#define REGNUM_TOPAZSC_CR_RESERVED0 0x0010

/* Register CR_MULTICORE_CMD_FIFO_0 */
#define TOPAZSC_CR_MULTICORE_CMD_FIFO_0 0x0014
#define MASK_TOPAZSC_CR_CMD_FIFO_WDATA 0xFFFFFFFF
#define SHIFT_TOPAZSC_CR_CMD_FIFO_WDATA 0
#define REGNUM_TOPAZSC_CR_CMD_FIFO_WDATA 0x0014

/* Register CR_MULTICORE_CMD_FIFO_1 */
#define TOPAZSC_CR_MULTICORE_CMD_FIFO_1 0x0018
#define MASK_TOPAZSC_CR_CMD_FIFO_SPACE 0x000000FF
#define SHIFT_TOPAZSC_CR_CMD_FIFO_SPACE 0
#define REGNUM_TOPAZSC_CR_CMD_FIFO_SPACE 0x0018

#define MASK_TOPAZSC_CR_CMD_FIFO_FULL 0x00000100
#define SHIFT_TOPAZSC_CR_CMD_FIFO_FULL 8
#define REGNUM_TOPAZSC_CR_CMD_FIFO_FULL 0x0018

/* Register CR_MULTICORE_IDLE_PWR_MAN */
#define TOPAZSC_CR_MULTICORE_IDLE_PWR_MAN 0x001C
#define MASK_TOPAZSC_CR_TOPAZ_IDLE_DISABLE 0x00000001
#define SHIFT_TOPAZSC_CR_TOPAZ_IDLE_DISABLE 0
#define REGNUM_TOPAZSC_CR_TOPAZ_IDLE_DISABLE 0x001C

/* Register CR_CMC_PROC_ESB_ACCESS */
#define MVEA_CR_CMC_PROC_ESB_ACCESS 0x011C
#define MASK_MVEA_CR_CMC_PROC_ESB_REGION_NUMBER 0x0000001F
#define SHIFT_MVEA_CR_CMC_PROC_ESB_REGION_NUMBER 0
#define REGNUM_MVEA_CR_CMC_PROC_ESB_REGION_NUMBER 0x011C
#define SIGNED_MVEA_CR_CMC_PROC_ESB_REGION_NUMBER 0


/* Table CR_CMC_ESB_LOGICAL_REGION_SETUP_TABLE */

/* Register CR_CMC_ESB_LOGICAL_REGION_SETUP */
#define MVEA_CR_CMC_ESB_LOGICAL_REGION_SETUP(X) (0x0080 + (4 * (X)))
#define MASK_MVEA_CR_CMC_ESB_REGION_VALID 0x80000000
#define SHIFT_MVEA_CR_CMC_ESB_REGION_VALID 31
#define REGNUM_MVEA_CR_CMC_ESB_REGION_VALID 0x0080
#define SIGNED_MVEA_CR_CMC_ESB_REGION_VALID 0

#define MASK_MVEA_CR_CMC_ESB_REGION_TYPE 0x60000000
#define SHIFT_MVEA_CR_CMC_ESB_REGION_TYPE 29
#define REGNUM_MVEA_CR_CMC_ESB_REGION_TYPE 0x0080
#define SIGNED_MVEA_CR_CMC_ESB_REGION_TYPE 0

#define MASK_MVEA_CR_CMC_ESB_REGION_LOGICAL_WIDTH 0x00F00000
#define SHIFT_MVEA_CR_CMC_ESB_REGION_LOGICAL_WIDTH 20
#define REGNUM_MVEA_CR_CMC_ESB_REGION_LOGICAL_WIDTH 0x0080
#define SIGNED_MVEA_CR_CMC_ESB_REGION_LOGICAL_WIDTH 0

#define MASK_MVEA_CR_CMC_ESB_REGION_LOGICAL_OFFSET_X 0x000F0000
#define SHIFT_MVEA_CR_CMC_ESB_REGION_LOGICAL_OFFSET_X 16
#define REGNUM_MVEA_CR_CMC_ESB_REGION_LOGICAL_OFFSET_X 0x0080
#define SIGNED_MVEA_CR_CMC_ESB_REGION_LOGICAL_OFFSET_X 0

#define MASK_MVEA_CR_CMC_ESB_REGION_PHYS_HEIGHT 0x0000F000
#define SHIFT_MVEA_CR_CMC_ESB_REGION_PHYS_HEIGHT 12
#define REGNUM_MVEA_CR_CMC_ESB_REGION_PHYS_HEIGHT 0x0080
#define SIGNED_MVEA_CR_CMC_ESB_REGION_PHYS_HEIGHT 0

#define MASK_MVEA_CR_CMC_ESB_REGION_PHYS_WIDTH 0x00000F00
#define SHIFT_MVEA_CR_CMC_ESB_REGION_PHYS_WIDTH 8
#define REGNUM_MVEA_CR_CMC_ESB_REGION_PHYS_WIDTH 0x0080
#define SIGNED_MVEA_CR_CMC_ESB_REGION_PHYS_WIDTH 0

#define MASK_MVEA_CR_CMC_ESB_REGION_PHYS_ORIGIN_Y 0x000000F0
#define SHIFT_MVEA_CR_CMC_ESB_REGION_PHYS_ORIGIN_Y 4
#define REGNUM_MVEA_CR_CMC_ESB_REGION_PHYS_ORIGIN_Y 0x0080
#define SIGNED_MVEA_CR_CMC_ESB_REGION_PHYS_ORIGIN_Y 0

#define MASK_MVEA_CR_CMC_ESB_REGION_PHYS_ORIGIN_X 0x0000000F
#define SHIFT_MVEA_CR_CMC_ESB_REGION_PHYS_ORIGIN_X 0
#define REGNUM_MVEA_CR_CMC_ESB_REGION_PHYS_ORIGIN_X 0x0080
#define SIGNED_MVEA_CR_CMC_ESB_REGION_PHYS_ORIGIN_X 0


/* Bit 31:16 is the count of remaining items to be transferred */
/* Bit 0 is 1 if transfer State == 'do_nothing'*/
#define MTX_CR_MTX_SYSC_CDMAS0      0x0348

/* Bit 25:2 is the current core DMA transfer address.*/
#define MTX_CR_MTX_SYSC_CDMAS1      0x034C

/* Number of entries in table CR_CMC_ESB_LOGICAL_REGION_SETUP_TABLE */

#define MVEA_CR_CMC_ESB_LOGICAL_REGION_SETUP_TABLE_SIZE_UINT32 32
#define MVEA_CR_CMC_ESB_LOGICAL_REGION_SETUP_TABLE_NUM_ENTRIES 32

#define ESB_HWSYNC      10
#define ESB_POS_MANGLER_ORIGINX(x) ((x) >> 3)
#define ESB_POS_MANGLER(x) ((x) >> 3)

#define ESB_SIZE_MANGLER(x) (((x) >> 3) - 1)
#define REGION_TYPE_LINEAR 0

#define TOPAZSC_ESB_REGION_Y_MAX		(46)
#define TOPAZSC_ESB_REGION_X_MAX		(64)

#define TOPAZSC_ESB_REGION_HEIGH		(48)
#define TOPAZSC_ESB_REGION_WIDTH		(64)


#define REG_OFFSET_COMMS_CORE_HOST	0x00070000
#define REG_SIZE_COMMS_CORE_HOST	0x00070000
#define REG_OFFSET_TOPAZ_COMMS_HOST	0x00007000
#define REG_SIZE_TOPAZ_COMMS_HOST	0x00001000
#define TOPAZ_COMMS_START 0x07000
/* Register CR_STAT_1 */
#define TOPAZ_COMMS_CR_STAT_1(X)    (0x0018 + (192 * (X)))
#define MASK_TOPAZ_COMMS_CR_STAT_DATA_1 0xFFFFFFFF
#define SHIFT_TOPAZ_COMMS_CR_STAT_DATA_1 0
#define REGNUM_TOPAZ_COMMS_CR_STAT_DATA_1 0x0018

/* Register CR_STAT_0 */
#define TOPAZ_COMMS_CR_STAT_0(X)    (0x0014 + (192 * (X)))
#define MASK_TOPAZ_COMMS_CR_STAT_DATA_0 0xFFFFFFFF
#define SHIFT_TOPAZ_COMMS_CR_STAT_DATA_0 0
#define REGNUM_TOPAZ_COMMS_CR_STAT_DATA_0 0x0014

/* Register CR_MTX_STATUS */
#define TOPAZ_COMMS_CR_MTX_STATUS(X) (0x0010 + (192 * (X)))
#define MASK_TOPAZ_COMMS_FLAGS_WORD 0xFFFFFFFF
#define SHIFT_TOPAZ_COMMS_FLAGS_WORD 0
#define REGNUM_TOPAZ_COMMS_FLAGS_WORD 0x0010

/* Register CR_CMD_WB_VAL */
#define TOPAZ_COMMS_CR_CMD_WB_VAL(X) (0x000C + (192 * (X)))
#define MASK_TOPAZ_COMMS_CR_WB_VAL  0xFFFFFFFF
#define SHIFT_TOPAZ_COMMS_CR_WB_VAL 0
#define REGNUM_TOPAZ_COMMS_CR_WB_VAL 0x000C

/* Register CR_CMD_WB_ADDR */
#define TOPAZ_COMMS_CR_CMD_WB_ADDR(X) (0x0008 + (192 * (X)))
#define MASK_TOPAZ_COMMS_CR_WB_ADDR 0xFFFFFFFF
#define SHIFT_TOPAZ_COMMS_CR_WB_ADDR 0
#define REGNUM_TOPAZ_COMMS_CR_WB_ADDR 0x0008

/* Register CR_CMD_DATA_ADDR */
#define TOPAZ_COMMS_CR_CMD_DATA_ADDR(X) (0x0004 + (192 * (X)))
#define MASK_TOPAZ_COMMS_CR_DATA_ADDR 0xFFFFFFFF
#define SHIFT_TOPAZ_COMMS_CR_DATA_ADDR 0
#define REGNUM_TOPAZ_COMMS_CR_DATA_ADDR 0x0004
/* Register CR_TOPAZ_HW_CFG */
#define TOPAZ_CR_TOPAZ_HW_CFG       0x0050
#define MASK_TOPAZ_CR_NUM_CORES_SUPPORTED 0x0000001F
#define SHIFT_TOPAZ_CR_NUM_CORES_SUPPORTED 0
#define REGNUM_TOPAZ_CR_NUM_CORES_SUPPORTED 0x0050
/* Register CR_CMD_WORD */
#define TOPAZ_COMMS_CR_CMD_WORD(X)  (0x0000 + (192 * (X)))
#define MASK_TOPAZ_COMMS_CR_MTX_CMD_ID 0x0000007F
#define SHIFT_TOPAZ_COMMS_CR_MTX_CMD_ID 0
#define REGNUM_TOPAZ_COMMS_CR_MTX_CMD_ID 0x0000

#define COMMS_WRITE32(offset, value, core) \
		MM_WRITE32(TOPAZ_COMMS_START + TOPAZ_CORE_REG_BASE(core), \
				offset, value)
#define COMMS_READ32(offset, pointer, core) \
		MM_READ32(TOPAZ_COMMS_START + TOPAZ_CORE_REG_BASE(core), \
				offset, pointer)

#define TOPAZ_CORE_NUMBER_SET_OFFSET (0x100 + (2 << 2))

#define REG_SIZE_COMMS_CORE_HOST	0x00070000
#define MVEASETUPESBREGION(_OriginX_, _OriginY_, _PhysWidth_, \
		_PhysHeight_, _LogWidth_, _RegType_) \
	((F_ENCODE(ESB_POS_MANGLER_ORIGINX(_OriginX_), \
	MVEA_CR_CMC_ESB_REGION_PHYS_ORIGIN_X)) | `\
		(F_ENCODE(ESB_POS_MANGLER(_OriginY_), \
	MVEA_CR_CMC_ESB_REGION_PHYS_ORIGIN_Y)) | \
		(F_ENCODE(ESB_SIZE_MANGLER(_PhysWidth_), \
	MVEA_CR_CMC_ESB_REGION_PHYS_WIDTH)) | \
		(F_ENCODE(ESB_SIZE_MANGLER(_PhysHeight_), \
	MVEA_CR_CMC_ESB_REGION_PHYS_HEIGHT)) | \
		(F_ENCODE(ESB_SIZE_MANGLER(_LogWidth_),\
	MVEA_CR_CMC_ESB_REGION_LOGICAL_WIDTH)) | \
		(F_ENCODE(_RegType_, MVEA_CR_CMC_ESB_REGION_TYPE)) | \
		(F_ENCODE(1, MVEA_CR_CMC_ESB_REGION_VALID)))


#define TOPAZ_MULTICORE_START		0x00000000

#ifdef TOPAZ_PDUMP
#define TOPAZ_MULTICORE_WRITE32(offset, value) \
	do { \
		MM_WRITE32(TOPAZ_MULTICORE_START, offset, value); \
		DRM_ERROR("TOPAZ_PDUMP: MULTICORE, REG_WT %x %x\n", \
			offset, value);\
	} while (0)

#define TOPAZ_MULTICORE_READ32(offset, pointer) \
	do { \
		MM_READ32(TOPAZ_MULTICORE_START, offset, pointer); \
		DRM_ERROR("TOPAZ_PDUMP: MULTICORE, REG_RD %x %x\n", \
			offset, *(uint32_t *)pointer); \
	} while (0)
#else
#define TOPAZ_MULTICORE_WRITE32(offset, value) \
	MM_WRITE32(TOPAZ_MULTICORE_START, offset, value)
#define TOPAZ_MULTICORE_READ32(offset, pointer) \
	MM_READ32(TOPAZ_MULTICORE_START, offset, pointer)
#endif

#define MTX_DMA_BURSTSIZE_BYTES 32
#define MTX_DMA_ALIGNMENT_BYTES 16

#define MTX_DMA_MEMORY_BASE (0x82880000)
#define PC_START_ADDRESS    (0x80900000)

#define MAX_TOPAZ_CMD_COUNT	(0x1000) /* max syncStatus value used*/


#define MTX_WRITEBACK_DATASIZE_ROUND 4

#define TOPAZ_MTX_WB_READ32(base, core, word, pointer) \
	do { \
		*(uint32_t *)(pointer) = *((uint32_t *)(base) + \
		(core)*MTX_WRITEBACK_DATASIZE_ROUND + (word)); \
	} while (0)

#define TOPAZ_MTX_WB_WRITE32(base, core, word, value) \
	do { \
		*((uint32_t *)(base) + \
		(core)*MTX_WRITEBACK_DATASIZE_ROUND + (word)) \
		= value; \
	} while (0)


#define TOPAZ_MTX_WB_OFFSET(base, core) \
	((base) + (core)*MTX_WRITEBACK_DATASIZE_ROUND*4)

#define POLL_TOPAZ_FREE_FIFO_SPACE(word_num, delay, retries, pointer) \
	do { \
		uint32_t free_space = 0, i; \
		for (i = 0; i < retries; i++) { \
			MULTICORE_READ32( \
			TOPAZHP_TOP_CR_MULTICORE_CMD_FIFO_WRITE_SPACE, \
			&free_space); \
			free_space &= MASK_TOPAZHP_TOP_CR_CMD_FIFO_SPACE; \
			if (free_space >= word_num) \
				break; \
			else \
				PSB_UDELAY(delay); \
		} \
		if (i >= retries) { \
			ret  = -1; \
			DRM_ERROR("TOPAZ: poll FIFO free space failed " \
				"(%d words free)!\n", free_space); \
		} else \
			ret = 0; \
		*pointer = free_space; \
	} while (0)


/* **************** DMAC define **************** */
enum  DMAC_eBSwap {
	DMAC_BSWAP_NO_SWAP = 0x0,/* !< No byte swapping will be performed. */
	DMAC_BSWAP_REVERSE = 0x1,/* !< Byte order will be reversed. */
};
enum DMAC_eAccDel {
	DMAC_ACC_DEL_0 = 0x0,	/* !< Access delay zero clock cycles */
	DMAC_ACC_DEL_256 = 0x1,	/* !< Access delay 256 clock cycles */
	DMAC_ACC_DEL_512 = 0x2,	/* !< Access delay 512 clock cycles */
	DMAC_ACC_DEL_768 = 0x3,	/* !< Access delay 768 clock cycles */
	DMAC_ACC_DEL_1024 = 0x4,/* !< Access delay 1024 clock cycles */
	DMAC_ACC_DEL_1280 = 0x5,/* !< Access delay 1280 clock cycles */
	DMAC_ACC_DEL_1536 = 0x6,/* !< Access delay 1536 clock cycles */
	DMAC_ACC_DEL_1792 = 0x7,/* !< Access delay 1792 clock cycles */
};

enum  DMAC_eBurst {
	DMAC_BURST_0 = 0x0,	/* !< burst size of 0 */
	DMAC_BURST_1 = 0x1,	/* !< burst size of 1 */
	DMAC_BURST_2 = 0x2,	/* !< burst size of 2 */
	DMAC_BURST_3 = 0x3,	/* !< burst size of 3 */
	DMAC_BURST_4 = 0x4,	/* !< burst size of 4 */
	DMAC_BURST_5 = 0x5,	/* !< burst size of 5 */
	DMAC_BURST_6 = 0x6,     /* !< burst size of 6 */
	DMAC_BURST_7 = 0x7,	/* !< burst size of 7 */
};

/* commands for topaz,shared with user space driver */
enum drm_tng_topaz_cmd {
	MTX_CMDID_NULL = 0,
	MTX_CMDID_SHUTDOWN = 1,
	MTX_CMDID_DO_HEADER = 2,
	MTX_CMDID_ENCODE_FRAME = 3,
	MTX_CMDID_START_FRAME = 4,
	MTX_CMDID_ENCODE_SLICE = 5,
	MTX_CMDID_END_FRAME = 6,
	MTX_CMDID_SETVIDEO = 7,
	MTX_CMDID_GETVIDEO = 8,
	MTX_CMDID_DO_CHANGE_PIPEWORK = 9,
	MTX_CMDID_PICMGMT = 0xa,
	MTX_CMDID_RC_UPDATE = 0xb,
	MTX_CMDID_PROVIDE_SOURCE_BUFFER = 0xc,
	MTX_CMDID_PROVIDE_REF_BUFFER = 0xd,
	MTX_CMDID_PROVIDE_CODED_BUFFER = 0xe,
	MTX_CMDID_ABORT = 0xf,

	/*JPEG commands*/
	MTX_CMDID_SETQUANT = 0x10,
	MTX_CMDID_SETUP_INTERFACE = 0x11,
	MTX_CMDID_ISSUEBUFF = 0x12,
	MTX_CMDID_SETUP = 0x13,

	MTX_CMDID_PAD = 0x7a, /*Will be ignored*/
	MTX_CMDID_SW_WRITEREG = 0x7b,
	MTX_CMDID_SW_LEAVE_LOWPOWER = 0x7c,
	MTX_CMDID_SW_ENTER_LOWPOWER = 0x7e,
	MTX_CMDID_SW_NEW_CODEC = 0x7f
};

/* codecs topaz supports,shared with user space driver */
enum drm_tng_topaz_codec {
	IMG_CODEC_JPEG = 0,    /* !< JPEG */
	IMG_CODEC_H264_NO_RC,  /* !< H264 with no rate control */
	IMG_CODEC_H264_VBR,    /* !< H264 variable bitrate */
	IMG_CODEC_H264_CBR,    /* !< H264 constant bitrate */
	IMG_CODEC_H264_VCM,    /* !< H264 video conferance mode */
	IMG_CODEC_H264_LLRC,   /* !< H264 low-latency rate control */
	IMG_CODEC_H264_ALL_RC, /* !< H264 with multiple rate control modes */
	IMG_CODEC_H263_NO_RC,  /* !< H263 with no rate control */
	IMG_CODEC_H263_VBR,    /* !< H263 variable bitrate */
	IMG_CODEC_H263_CBR,    /* !< H263 constant bitrate */
	IMG_CODEC_MPEG4_NO_RC, /* !< MPEG4 with no rate control */
	IMG_CODEC_MPEG4_VBR,   /* !< MPEG4 variable bitrate */
	IMG_CODEC_MPEG4_CBR,   /* !< MPEG4 constant bitrate */
	IMG_CODEC_MPEG2_NO_RC, /* !< MPEG2 with no rate control */
	IMG_CODEC_MPEG2_VBR,   /* !< MPEG2 variable bitrate */
	IMG_CODEC_MPEG2_CBR,   /* !< MPEG2 constant bitrate */
	IMG_CODEC_H264MVC_NO_RC, /* !< MVC H264 with no rate control */
	IMG_CODEC_H264MVC_CBR, /* !< MVC H264 constant bitrate */
	IMG_CODEC_H264MVC_VBR, /* !< MVC H264 variable bitrate */
	IMG_CODEC_NUM
};

enum drm_tng_topaz_standard {
	IMG_STANDARD_NONE = 0, /* !< There is no FW in MTX memory */
	IMG_STANDARD_JPEG,     /* !< JPEG */
	IMG_STANDARD_H264,     /* !< H264 with no rate control */
	IMG_STANDARD_H263,     /* !< H263 with no rate control */
	IMG_STANDARD_MPEG4,    /* !< MPEG4 with no rate control */
	IMG_STANDARD_MPEG2     /* !< MPEG2 with no rate control */
};

enum MTX_eWriteBackData {
	/* !< Command word of command executed by MTX */
	MTX_WRITEBACK_CMDWORD = 0,
	/* !< Writeback value returned by command */
	MTX_WRITEBACK_VALUE = 1,
	/* !< Flags word indicating MTX status (see MTX writeback flags) */
	MTX_WRITEBACK_FLAGSWORD_0 = 2,
	/* !< number of bits written out by this core */
	MTX_WRITEBACK_BITSWRITTEN = 3,
	/* !< End marker for enum */
	MTX_WRITEBACK_DATASIZE
};

int tng_topaz_reset(struct drm_psb_private *dev_priv);
int tng_topaz_init_fw(struct drm_device *dev);

int tng_topaz_init_board(
	struct drm_device *dev,
	struct psb_video_ctx *video_ctx,
	enum drm_tng_topaz_codec codec);

int tng_topaz_setup_fw(
	struct drm_device *dev,
	struct psb_video_ctx *video_ctx,
	enum drm_tng_topaz_codec codec);

int tng_topaz_wait_for_register(
	struct drm_psb_private *dev_priv,
	uint32_t checkfunc,
	uint32_t addr, uint32_t value,
	uint32_t enable);
void tng_topaz_mmu_flushcache(struct drm_psb_private *dev_priv);

uint32_t psb_get_default_pd_addr(struct psb_mmu_driver *driver);
int pnw_video_get_core_num(struct drm_device *dev, uint64_t user_pointer);
int pnw_topaz_kick_null_cmd(
	struct drm_psb_private *dev_priv,
	uint32_t core_id, uint32_t wb_offset,
	uint32_t sync_req, uint8_t irq_enable);
int pnw_wait_on_sync(
	struct drm_psb_private *dev_priv,
	uint32_t sync_seq,
	uint32_t *sync_p);

int pnw_video_frameskip(struct drm_device *dev, uint64_t user_pointer);

static inline char *cmd_to_string(int cmd_id)
{
	switch (cmd_id) {
	case MTX_CMDID_DO_HEADER:
		return "MTX_CMDID_DO_HEADER";
	case MTX_CMDID_ENCODE_FRAME:
		return "MTX_CMDID_ENCODE_FRAME";
	case MTX_CMDID_SETVIDEO:
		return "MTX_CMDID_SETVIDEO";
	case MTX_CMDID_GETVIDEO:
		return "MTX_CMDID_GETVIDEO";
	case MTX_CMDID_PICMGMT:
		return "MTX_CMDID_PICMGMT";
	case MTX_CMDID_SW_NEW_CODEC:
		return "MTX_CMDID_SW_NEW_CODEC";
	case MTX_CMDID_SETQUANT:
		return "MTX_CMDID_SETQUANT";
	case MTX_CMDID_SETUP_INTERFACE:
		return "MTX_CMDID_SETUP_INTERFACE";
	case MTX_CMDID_ISSUEBUFF:
		return "MTX_CMDID_ISSUEBUFF";
	case MTX_CMDID_SETUP:
		return "MTX_CMDID_SETUP";
	case MTX_CMDID_SW_WRITEREG:
		return "MTX_CMDID_SW_WRITEREG";
	case (MTX_CMDID_PICMGMT | MTX_CMDID_PRIORITY):
		return "MTX_CMDID_PICMGMT | MTX_CMDID_PRIORITY";
	case MTX_CMDID_SHUTDOWN:
		return "MTX_CMDID_SHUTDOWN";
	case MTX_CMDID_SW_LEAVE_LOWPOWER:
		return "MTX_CMDID_SW_LEAVE_LOWPOWER";
	case MTX_CMDID_START_FRAME:
		return "MTX_CMDID_START_FRAME";
	case MTX_CMDID_ENCODE_SLICE:
		return "MTX_CMDID_ENCODE_SLICE";
	case MTX_CMDID_END_FRAME:
		return "MTX_CMDID_END_FRAME";
	case MTX_CMDID_RC_UPDATE:
		return "MTX_CMDID_RC_UPDATE";
	case MTX_CMDID_PROVIDE_SOURCE_BUFFER:
		return "MTX_CMDID_PROVIDE_SOURCE_BUFFER";
	case MTX_CMDID_PROVIDE_REF_BUFFER:
		return "MTX_CMDID_PROVIDE_REF_BUFFER";
	case MTX_CMDID_PROVIDE_CODED_BUFFER:
		return "MTX_CMDID_PROVIDE_CODED_BUFFER";
	default:
		DRM_ERROR("Command ID: %08x\n", cmd_id);
		return "Undefined command";

	}
}

static inline char *codec_to_string(int codec)
{
	switch (codec) {
	/* Just guess, is JPEG firmware included in topaz_bin? */
	case IMG_CODEC_JPEG:
		return "JPEG";
	case IMG_CODEC_H264_NO_RC:
		return "H264_NO_RC";
	case IMG_CODEC_H264_VBR:
		return "H264_VBR";
	case IMG_CODEC_H264_CBR:
		return "H264_CBR";
	case IMG_CODEC_H264_VCM:
		return "H264_VCM";
	case IMG_CODEC_H264_LLRC:
		return "H264_LLRC";
	case IMG_CODEC_H264_ALL_RC:
		return "H264_ALL_RC";
	case IMG_CODEC_H263_NO_RC:
		return "H263_NO_RC";
	case IMG_CODEC_H263_VBR:
		return "H263_VBR";
	case IMG_CODEC_H263_CBR:
		return "H263_CBR";
	case IMG_CODEC_MPEG4_NO_RC:
		return "MPEG4_NO_RC";
	case IMG_CODEC_MPEG4_VBR:
		return "MPEG4_VBR";
	case IMG_CODEC_MPEG4_CBR:
		return "MPEG4_CBR";
	case IMG_CODEC_MPEG2_NO_RC:
		return "MPEG2_NO_RC";
	case IMG_CODEC_MPEG2_VBR:
		return "MPEG2_VBR";
	case IMG_CODEC_MPEG2_CBR:
		return "MPEG2_CBR";
	case IMG_CODEC_H264MVC_NO_RC:
		return "H264MVC_NO_RC";
	case IMG_CODEC_H264MVC_CBR:
		return "H264MVC_CBR";
	case IMG_CODEC_H264MVC_VBR:
		return "H264MVC_VBR";
	default:
		return "Undefined codec";
	}
}

static inline void tng_topaz_clearirq(struct drm_device *dev,
				      uint32_t clear_topaz)
{
	struct drm_psb_private *dev_priv = dev->dev_private;

	if (clear_topaz != 0)
		MULTICORE_WRITE32(
			TOPAZHP_TOP_CR_MULTICORE_INT_CLEAR, clear_topaz);

	/* PSB_WVDC32(_PNW_IRQ_TOPAZ_FLAG, PSB_INT_IDENTITY_R); */
}

static inline uint32_t tng_topaz_queryirq(struct drm_device *dev)
{
	struct drm_psb_private *dev_priv = dev->dev_private;
	uint32_t val, /* iir, */ clear = 0;
	struct pnw_topaz_private *topaz_priv = dev_priv->topaz_private;

	printk(KERN_ERR "[FPGA] tng_topaz_queryirq");
	MULTICORE_READ32(TOPAZHP_TOP_CR_MULTICORE_INT_STAT, &val);
	/* iir = PSB_RVDC32(PSB_INT_IDENTITY_R); */

	(void) topaz_priv;

	if ((val == 0) /* && (iir == 0) */) {/* no interrupt */
		printk(KERN_ERR "[FPGA] no interrupt,IIR=TOPAZ_INTSTAT=0\n");
		return 0;
	}

#if 0
	if (val & (1 << 31))
		PSB_DEBUG_IRQ("TOPAZ:IRQ pin activated,cmd seq=0x%04x," \
			"sync seq: 0x%08x\n",
			dev_priv->sequence[LNC_ENGINE_ENCODE],
			*((uint32_t *)topaz_priv->topaz_mtx_wb +
				MTX_WRITEBACK_VALUE));
	else
		PSB_DEBUG_IRQ("TOPAZ:IRQ pin not activated,cmd seq=0x%04x," \
			"sync seq: 0x%08x\n",
			dev_priv->sequence[LNC_ENGINE_ENCODE],
			*((uint32_t *)topaz_priv->topaz_mtx_wb +
			MTX_WRITEBACK_VALUE));
#endif
	if (val & MASK_TOPAZHP_TOP_CR_INT_STAT_MMU_FAULT) {
		uint32_t mmu_status, mmu_req;

		MULTICORE_READ32(TOPAZHP_TOP_CR_MMU_STATUS, &mmu_status);
		MULTICORE_READ32(TOPAZHP_TOP_CR_MMU_STATUS, &mmu_req);

		PSB_DEBUG_IRQ("TOPAZ: detect a page fault interrupt,");
		PSB_DEBUG_IRQ("address=0x%08x,mem req=0x%08x\n",
			mmu_status, mmu_req);
		clear |= F_ENCODE(1, TOPAZHP_TOP_CR_INTCLR_MMU_FAULT);
	}

	if (val & MASK_TOPAZHP_TOP_CR_INT_STAT_MTX_HALT) {
		PSB_DEBUG_IRQ("TOPAZ: detect a MTX_HALT interrupt\n");
		clear |= F_ENCODE(1, TOPAZHP_TOP_CR_INTCLR_MTX_HALT);
	}

	if (val & MASK_TOPAZHP_TOP_CR_INT_STAT_MTX) {
		PSB_DEBUG_IRQ("TOPAZ: detect a MTX interrupt\n");
		clear |= F_ENCODE(1, TOPAZHP_TOP_CR_INTCLR_MTX);
	}

	if (val & MASK_TOPAZHP_TOP_CR_INT_STAT_DMAC) {
		PSB_DEBUG_IRQ("TOPAZ: detect a DMAC interrupt\n");
		clear |= F_ENCODE(1, TOPAZHP_TOP_CR_INTCLR_DMAC);
	}
	return clear;
}

/*Set whether the write operation take effect on all cores
* or only the specific one*/
static inline void mtx_set_target(struct drm_psb_private *dev_priv)
{
	uint32_t reg_val = 0;
	reg_val = F_ENCODE(0, TOPAZHP_TOP_CR_WRITES_CORE_ALL) |
		F_ENCODE(0, TOPAZHP_TOP_CR_RTM_PORT_CORE_SELECT);

	MULTICORE_WRITE32(TOPAZHP_TOP_CR_MULTICORE_CORE_SEL_0, reg_val);
}

#define SHIFT_WB_PRODUCER       (0)
#define MASK_WB_PRODUCER	\
	(((1 << LOG2_WB_FIFO_SIZE) - 1) << SHIFT_WB_PRODUCER)
#define SHIFT_WB_CONSUMER       (0)
#define MASK_WB_CONSUMER	\
	(((1 << LOG2_WB_FIFO_SIZE) - 1) << SHIFT_WB_CONSUMER)

#define MTX_CMDID_WB_INTERRUPT 0x8000

/*! Predefined "=" change fucntion. */
#define CHECKFUNC_ISEQUAL	(0xFFFF0000)
/*! Predefined "<" change fucntion. */
#define CHECKFUNC_LESS		(0xFFFF0001)
/*! Predefined "<=" change fucntion. */
#define CHECKFUNC_LESSEQ	(0xFFFF0002)
/*! Predefined ">" change fucntion.  */
#define CHECKFUNC_GREATER	(0xFFFF0003)
/*! Predefined ">=" change fucntion. */
#define CHECKFUNC_GREATEREQ	(0xFFFF0004)
/*! Predefined "!=" change fucntion. */
#define CHECKFUNC_NOTEQUAL	(0xFFFF0005)

/* Register CR_PROC_ESB_ACCESS_CONTROL */
#define TOPAZHP_CR_PROC_ESB_ACCESS_CONTROL 0x00EC
#define MASK_TOPAZHP_CR_PROC_ESB_ADDR 0x00003FF0
#define SHIFT_TOPAZHP_CR_PROC_ESB_ADDR 4
#define REGNUM_TOPAZHP_CR_PROC_ESB_ADDR 0x00EC
#define SIGNED_TOPAZHP_CR_PROC_ESB_ADDR 0

#define MASK_TOPAZHP_CR_PROC_ESB_READ_N_WRITE 0x00010000
#define SHIFT_TOPAZHP_CR_PROC_ESB_READ_N_WRITE 16
#define REGNUM_TOPAZHP_CR_PROC_ESB_READ_N_WRITE 0x00EC
#define SIGNED_TOPAZHP_CR_PROC_ESB_READ_N_WRITE 0

#define MASK_TOPAZHP_CR_PROC_ESB_OP_VALID 0x00020000
#define SHIFT_TOPAZHP_CR_PROC_ESB_OP_VALID 17
#define REGNUM_TOPAZHP_CR_PROC_ESB_OP_VALID 0x00EC
#define SIGNED_TOPAZHP_CR_PROC_ESB_OP_VALID 0

/* Register INTEL_JMCMP_CF_TOTAL */
#define INTEL_JMCMP_CF_TOTAL 0x0340
#define MASK_INTEL_JMCMP_CF_TOTAL 0xFFFFFFFF
#define SHIFT_INTEL_JMCMP_CF_TOTAL 0
#define REGNUM_INTEL_JMCMP_CF_TOTAL 0x0340
#define SIGNED_INTEL_JMCMP_CF_TOTAL 0

/* Register CR_PROC_ESB_ACCESS_WORD0 */
#define TOPAZHP_CR_PROC_ESB_ACCESS_WORD0 0x00F0
#define MASK_TOPAZHP_CR_PROC_ESB_WORD0 0xFFFFFFFF
#define SHIFT_TOPAZHP_CR_PROC_ESB_WORD0 0
#define REGNUM_TOPAZHP_CR_PROC_ESB_WORD0 0x00F0
#define SIGNED_TOPAZHP_CR_PROC_ESB_WORD0 0

/*img_soc_dmac_reg.h*/
/* Register DMAC_SETUP_0 */
#define IMG_SOC_DMAC_SETUP_0        0x0000
#define MASK_IMG_SOC_START_ADDRESS_00 0xFFFFFFFF
#define SHIFT_IMG_SOC_START_ADDRESS_00 0
#define REGNUM_IMG_SOC_START_ADDRESS_00 0x0000
#define SIGNED_IMG_SOC_START_ADDRESS_00 0

/* Register DMAC_COUNT_0 */
#define IMG_SOC_DMAC_COUNT_0        0x0004
#define MASK_IMG_SOC_CNT_00         0x0000FFFF
#define SHIFT_IMG_SOC_CNT_00        0
#define REGNUM_IMG_SOC_CNT_00       0x0004
#define SIGNED_IMG_SOC_CNT_00       0

#define MASK_IMG_SOC_EN_00          0x00010000
#define SHIFT_IMG_SOC_EN_00         16
#define REGNUM_IMG_SOC_EN_00        0x0004
#define SIGNED_IMG_SOC_EN_00        0

#define MASK_IMG_SOC_ENABLE_2D_MODE_00 0x00020000
#define SHIFT_IMG_SOC_ENABLE_2D_MODE_00 17
#define REGNUM_IMG_SOC_ENABLE_2D_MODE_00 0x0004
#define SIGNED_IMG_SOC_ENABLE_2D_MODE_00 0
#define IMG_SOC_ENABLE_2D_MODE_00_ENABLED		0x00000001
#define IMG_SOC_ENABLE_2D_MODE_00_DISABLED		0x00000000

#define MASK_IMG_SOC_LIST_EN_00     0x00040000
#define SHIFT_IMG_SOC_LIST_EN_00    18
#define REGNUM_IMG_SOC_LIST_EN_00   0x0004
#define SIGNED_IMG_SOC_LIST_EN_00   0

#define MASK_IMG_SOC_SRST_00        0x00080000
#define SHIFT_IMG_SOC_SRST_00       19
#define REGNUM_IMG_SOC_SRST_00      0x0004
#define SIGNED_IMG_SOC_SRST_00      0

#define MASK_IMG_SOC_DREQ_00        0x00100000
#define SHIFT_IMG_SOC_DREQ_00       20
#define REGNUM_IMG_SOC_DREQ_00      0x0004
#define SIGNED_IMG_SOC_DREQ_00      0

#define MASK_IMG_SOC_LIST_FIN_CTL_00 0x00400000
#define SHIFT_IMG_SOC_LIST_FIN_CTL_00 22
#define REGNUM_IMG_SOC_LIST_FIN_CTL_00 0x0004
#define SIGNED_IMG_SOC_LIST_FIN_CTL_00 0

#define MASK_IMG_SOC_PI_00          0x03000000
#define SHIFT_IMG_SOC_PI_00         24
#define REGNUM_IMG_SOC_PI_00        0x0004
#define SIGNED_IMG_SOC_PI_00        0
#define IMG_SOC_PI_00_1		0x00000002
#define IMG_SOC_PI_00_2		0x00000001
#define IMG_SOC_PI_00_4		0x00000000

#define MASK_IMG_SOC_DIR_00         0x04000000
#define SHIFT_IMG_SOC_DIR_00        26
#define REGNUM_IMG_SOC_DIR_00       0x0004
#define SIGNED_IMG_SOC_DIR_00       0

#define MASK_IMG_SOC_PW_00          0x18000000
#define SHIFT_IMG_SOC_PW_00         27
#define REGNUM_IMG_SOC_PW_00        0x0004
#define SIGNED_IMG_SOC_PW_00        0

#define MASK_IMG_SOC_TRANSFER_IEN_00 0x20000000
#define SHIFT_IMG_SOC_TRANSFER_IEN_00 29
#define REGNUM_IMG_SOC_TRANSFER_IEN_00 0x0004
#define SIGNED_IMG_SOC_TRANSFER_IEN_00 0

#define MASK_IMG_SOC_BSWAP_00       0x40000000
#define SHIFT_IMG_SOC_BSWAP_00      30
#define REGNUM_IMG_SOC_BSWAP_00     0x0004
#define SIGNED_IMG_SOC_BSWAP_00     0

#define MASK_IMG_SOC_LIST_IEN_00    0x80000000
#define SHIFT_IMG_SOC_LIST_IEN_00   31
#define REGNUM_IMG_SOC_LIST_IEN_00  0x0004
#define SIGNED_IMG_SOC_LIST_IEN_00  0

/* Register DMAC_PERIPH_0 */
#define IMG_SOC_DMAC_PERIPH_0       0x0008
#define MASK_IMG_SOC_EXT_SA_00      0x0000000F
#define SHIFT_IMG_SOC_EXT_SA_00     0
#define REGNUM_IMG_SOC_EXT_SA_00    0x0008
#define SIGNED_IMG_SOC_EXT_SA_00    0

#define MASK_IMG_SOC_BURST_00       0x07000000
#define SHIFT_IMG_SOC_BURST_00      24
#define REGNUM_IMG_SOC_BURST_00     0x0008
#define SIGNED_IMG_SOC_BURST_00     0

#define MASK_IMG_SOC_INCR_00        0x08000000
#define SHIFT_IMG_SOC_INCR_00       27
#define REGNUM_IMG_SOC_INCR_00      0x0008
#define SIGNED_IMG_SOC_INCR_00      0

#define MASK_IMG_SOC_ACC_DEL_00     0xE0000000
#define SHIFT_IMG_SOC_ACC_DEL_00    29
#define REGNUM_IMG_SOC_ACC_DEL_00   0x0008
#define SIGNED_IMG_SOC_ACC_DEL_00   0

/* Register DMAC_IRQ_STAT_0 */
#define IMG_SOC_DMAC_IRQ_STAT_0     0x000C
#define MASK_IMG_SOC_TRANSFER_FIN_00 0x00020000
#define SHIFT_IMG_SOC_TRANSFER_FIN_00 17
#define REGNUM_IMG_SOC_TRANSFER_FIN_00 0x000C
#define SIGNED_IMG_SOC_TRANSFER_FIN_00 0

#define MASK_IMG_SOC_LIST_INT_00    0x00100000
#define SHIFT_IMG_SOC_LIST_INT_00   20
#define REGNUM_IMG_SOC_LIST_INT_00  0x000C
#define SIGNED_IMG_SOC_LIST_INT_00  0

/* The last linked-list element processed initiated an interrupt.
If LIST_IEN is set for the channel, an interrupt will be generated
on the IRQ line until this bit is cleared, */
#define IMG_SOC_LIST_INT_00_ENABLE	0x00000001

/* last linked list element processed did not initiate an interrupt. */
#define IMG_SOC_LIST_INT_00_DISABLE	0x00000000

#define MASK_IMG_SOC_LIST_FIN_00    0x00200000
#define SHIFT_IMG_SOC_LIST_FIN_00   21
#define REGNUM_IMG_SOC_LIST_FIN_00  0x000C
#define SIGNED_IMG_SOC_LIST_FIN_00  0

/* Register DMAC_2D_MODE_0 */
#define IMG_SOC_DMAC_2D_MODE_0      0x0010
#define MASK_IMG_SOC_ROW_LENGTH_00  0x000003FF
#define SHIFT_IMG_SOC_ROW_LENGTH_00 0
#define REGNUM_IMG_SOC_ROW_LENGTH_00 0x0010
#define SIGNED_IMG_SOC_ROW_LENGTH_00 0

#define MASK_IMG_SOC_LINE_ADDR_OFFSET_00 0x000FFC00
#define SHIFT_IMG_SOC_LINE_ADDR_OFFSET_00 10
#define REGNUM_IMG_SOC_LINE_ADDR_OFFSET_00 0x0010
#define SIGNED_IMG_SOC_LINE_ADDR_OFFSET_00 0

#define MASK_IMG_SOC_REP_COUNT_00   0x7FF00000
#define SHIFT_IMG_SOC_REP_COUNT_00  20
#define REGNUM_IMG_SOC_REP_COUNT_00 0x0010
#define SIGNED_IMG_SOC_REP_COUNT_00 0

/* Register DMAC_PERIPHERAL_ADDR_0 */
#define IMG_SOC_DMAC_PERIPHERAL_ADDR_0 0x0014
#define MASK_IMG_SOC_ADDR_00        0x007FFFFF
#define SHIFT_IMG_SOC_ADDR_00       0
#define REGNUM_IMG_SOC_ADDR_00      0x0014
#define SIGNED_IMG_SOC_ADDR_00      0

/* Register DMAC_PER_HOLD_0 */
#define IMG_SOC_DMAC_PER_HOLD_0     0x0018
#define MASK_IMG_SOC_PER_HOLD_00    0x0000007F
#define SHIFT_IMG_SOC_PER_HOLD_00   0
#define REGNUM_IMG_SOC_PER_HOLD_00  0x0018
#define SIGNED_IMG_SOC_PER_HOLD_00  0

/* Register DMAC_SETUP_1 */
#define IMG_SOC_DMAC_SETUP_1        0x0020
#define MASK_IMG_SOC_START_ADDRESS_01 0xFFFFFFFF
#define SHIFT_IMG_SOC_START_ADDRESS_01 0
#define REGNUM_IMG_SOC_START_ADDRESS_01 0x0020
#define SIGNED_IMG_SOC_START_ADDRESS_01 0

/* Register DMAC_COUNT_1 */
#define IMG_SOC_DMAC_COUNT_1        0x0024
#define MASK_IMG_SOC_CNT_01         0x0000FFFF
#define SHIFT_IMG_SOC_CNT_01        0
#define REGNUM_IMG_SOC_CNT_01       0x0024
#define SIGNED_IMG_SOC_CNT_01       0

#define MASK_IMG_SOC_EN_01          0x00010000
#define SHIFT_IMG_SOC_EN_01         16
#define REGNUM_IMG_SOC_EN_01        0x0024
#define SIGNED_IMG_SOC_EN_01        0

#define MASK_IMG_SOC_ENABLE_2D_MODE_01 0x00020000
#define SHIFT_IMG_SOC_ENABLE_2D_MODE_01 17
#define REGNUM_IMG_SOC_ENABLE_2D_MODE_01 0x0024
#define SIGNED_IMG_SOC_ENABLE_2D_MODE_01 0
#define IMG_SOC_ENABLE_2D_MODE_01_ENABLED		0x00000001
#define IMG_SOC_ENABLE_2D_MODE_01_DISABLED		0x00000000

#define MASK_IMG_SOC_LIST_EN_01     0x00040000
#define SHIFT_IMG_SOC_LIST_EN_01    18
#define REGNUM_IMG_SOC_LIST_EN_01   0x0024
#define SIGNED_IMG_SOC_LIST_EN_01   0

#define MASK_IMG_SOC_SRST_01        0x00080000
#define SHIFT_IMG_SOC_SRST_01       19
#define REGNUM_IMG_SOC_SRST_01      0x0024
#define SIGNED_IMG_SOC_SRST_01      0

#define MASK_IMG_SOC_DREQ_01        0x00100000
#define SHIFT_IMG_SOC_DREQ_01       20
#define REGNUM_IMG_SOC_DREQ_01      0x0024
#define SIGNED_IMG_SOC_DREQ_01      0

#define MASK_IMG_SOC_LIST_FIN_CTL_01 0x00400000
#define SHIFT_IMG_SOC_LIST_FIN_CTL_01 22
#define REGNUM_IMG_SOC_LIST_FIN_CTL_01 0x0024
#define SIGNED_IMG_SOC_LIST_FIN_CTL_01 0

#define MASK_IMG_SOC_PI_01          0x03000000
#define SHIFT_IMG_SOC_PI_01         24
#define REGNUM_IMG_SOC_PI_01        0x0024
#define SIGNED_IMG_SOC_PI_01        0
#define IMG_SOC_PI_01_1		0x00000002
#define IMG_SOC_PI_01_2		0x00000001
#define IMG_SOC_PI_01_4		0x00000000

#define MASK_IMG_SOC_DIR_01         0x04000000
#define SHIFT_IMG_SOC_DIR_01        26
#define REGNUM_IMG_SOC_DIR_01       0x0024
#define SIGNED_IMG_SOC_DIR_01       0

#define MASK_IMG_SOC_PW_01          0x18000000
#define SHIFT_IMG_SOC_PW_01         27
#define REGNUM_IMG_SOC_PW_01        0x0024
#define SIGNED_IMG_SOC_PW_01        0

#define MASK_IMG_SOC_TRANSFER_IEN_01 0x20000000
#define SHIFT_IMG_SOC_TRANSFER_IEN_01 29
#define REGNUM_IMG_SOC_TRANSFER_IEN_01 0x0024
#define SIGNED_IMG_SOC_TRANSFER_IEN_01 0

#define MASK_IMG_SOC_BSWAP_01       0x40000000
#define SHIFT_IMG_SOC_BSWAP_01      30
#define REGNUM_IMG_SOC_BSWAP_01     0x0024
#define SIGNED_IMG_SOC_BSWAP_01     0

#define MASK_IMG_SOC_LIST_IEN_01    0x80000000
#define SHIFT_IMG_SOC_LIST_IEN_01   31
#define REGNUM_IMG_SOC_LIST_IEN_01  0x0024
#define SIGNED_IMG_SOC_LIST_IEN_01  0

/* Register DMAC_PERIPH_1 */
#define IMG_SOC_DMAC_PERIPH_1       0x0028
#define MASK_IMG_SOC_EXT_SA_01      0x0000000F
#define SHIFT_IMG_SOC_EXT_SA_01     0
#define REGNUM_IMG_SOC_EXT_SA_01    0x0028
#define SIGNED_IMG_SOC_EXT_SA_01    0

#define MASK_IMG_SOC_BURST_01       0x07000000
#define SHIFT_IMG_SOC_BURST_01      24
#define REGNUM_IMG_SOC_BURST_01     0x0028
#define SIGNED_IMG_SOC_BURST_01     0

#define MASK_IMG_SOC_INCR_01        0x08000000
#define SHIFT_IMG_SOC_INCR_01       27
#define REGNUM_IMG_SOC_INCR_01      0x0028
#define SIGNED_IMG_SOC_INCR_01      0

#define MASK_IMG_SOC_ACC_DEL_01     0xE0000000
#define SHIFT_IMG_SOC_ACC_DEL_01    29
#define REGNUM_IMG_SOC_ACC_DEL_01   0x0028
#define SIGNED_IMG_SOC_ACC_DEL_01   0

/* Register DMAC_IRQ_STAT_1 */
#define IMG_SOC_DMAC_IRQ_STAT_1     0x002C
#define MASK_IMG_SOC_TRANSFER_FIN_01 0x00020000
#define SHIFT_IMG_SOC_TRANSFER_FIN_01 17
#define REGNUM_IMG_SOC_TRANSFER_FIN_01 0x002C
#define SIGNED_IMG_SOC_TRANSFER_FIN_01 0

#define MASK_IMG_SOC_LIST_INT_01    0x00100000
#define SHIFT_IMG_SOC_LIST_INT_01   20
#define REGNUM_IMG_SOC_LIST_INT_01  0x002C
#define SIGNED_IMG_SOC_LIST_INT_01  0

/* The last linked-list element processed initiated an interrupt.
If LIST_IEN is set for the channel, an interrupt will be generated
on the IRQ line until this bit is cleared, */
#define IMG_SOC_LIST_INT_01_ENABLE	0x00000001

/* last linked list element processed did not initiate an interrupt. */
#define IMG_SOC_LIST_INT_01_DISABLE	0x00000000

#define MASK_IMG_SOC_LIST_FIN_01    0x00200000
#define SHIFT_IMG_SOC_LIST_FIN_01   21
#define REGNUM_IMG_SOC_LIST_FIN_01  0x002C
#define SIGNED_IMG_SOC_LIST_FIN_01  0

/* Register DMAC_2D_MODE_1 */
#define IMG_SOC_DMAC_2D_MODE_1      0x0030
#define MASK_IMG_SOC_ROW_LENGTH_01  0x000003FF
#define SHIFT_IMG_SOC_ROW_LENGTH_01 0
#define REGNUM_IMG_SOC_ROW_LENGTH_01 0x0030
#define SIGNED_IMG_SOC_ROW_LENGTH_01 0

#define MASK_IMG_SOC_LINE_ADDR_OFFSET_01 0x000FFC00
#define SHIFT_IMG_SOC_LINE_ADDR_OFFSET_01 10
#define REGNUM_IMG_SOC_LINE_ADDR_OFFSET_01 0x0030
#define SIGNED_IMG_SOC_LINE_ADDR_OFFSET_01 0

#define MASK_IMG_SOC_REP_COUNT_01   0x7FF00000
#define SHIFT_IMG_SOC_REP_COUNT_01  20
#define REGNUM_IMG_SOC_REP_COUNT_01 0x0030
#define SIGNED_IMG_SOC_REP_COUNT_01 0

/* Register DMAC_PERIPHERAL_ADDR_1 */
#define IMG_SOC_DMAC_PERIPHERAL_ADDR_1 0x0034
#define MASK_IMG_SOC_ADDR_01        0x007FFFFF
#define SHIFT_IMG_SOC_ADDR_01       0
#define REGNUM_IMG_SOC_ADDR_01      0x0034
#define SIGNED_IMG_SOC_ADDR_01      0

/* Register DMAC_PER_HOLD_1 */
#define IMG_SOC_DMAC_PER_HOLD_1     0x0038
#define MASK_IMG_SOC_PER_HOLD_01    0x0000007F
#define SHIFT_IMG_SOC_PER_HOLD_01   0
#define REGNUM_IMG_SOC_PER_HOLD_01  0x0038
#define SIGNED_IMG_SOC_PER_HOLD_01  0

/* Register DMAC_SETUP_2 */
#define IMG_SOC_DMAC_SETUP_2        0x0040
#define MASK_IMG_SOC_START_ADDRESS_02 0xFFFFFFFF
#define SHIFT_IMG_SOC_START_ADDRESS_02 0
#define REGNUM_IMG_SOC_START_ADDRESS_02 0x0040
#define SIGNED_IMG_SOC_START_ADDRESS_02 0

/* Register DMAC_COUNT_2 */
#define IMG_SOC_DMAC_COUNT_2        0x0044
#define MASK_IMG_SOC_CNT_02         0x0000FFFF
#define SHIFT_IMG_SOC_CNT_02        0
#define REGNUM_IMG_SOC_CNT_02       0x0044
#define SIGNED_IMG_SOC_CNT_02       0

#define MASK_IMG_SOC_EN_02          0x00010000
#define SHIFT_IMG_SOC_EN_02         16
#define REGNUM_IMG_SOC_EN_02        0x0044
#define SIGNED_IMG_SOC_EN_02        0

#define MASK_IMG_SOC_ENABLE_2D_MODE_02 0x00020000
#define SHIFT_IMG_SOC_ENABLE_2D_MODE_02 17
#define REGNUM_IMG_SOC_ENABLE_2D_MODE_02 0x0044
#define SIGNED_IMG_SOC_ENABLE_2D_MODE_02 0
#define IMG_SOC_ENABLE_2D_MODE_02_ENABLED		0x00000001
#define IMG_SOC_ENABLE_2D_MODE_02_DISABLED		0x00000000

#define MASK_IMG_SOC_LIST_EN_02     0x00040000
#define SHIFT_IMG_SOC_LIST_EN_02    18
#define REGNUM_IMG_SOC_LIST_EN_02   0x0044
#define SIGNED_IMG_SOC_LIST_EN_02   0

#define MASK_IMG_SOC_SRST_02        0x00080000
#define SHIFT_IMG_SOC_SRST_02       19
#define REGNUM_IMG_SOC_SRST_02      0x0044
#define SIGNED_IMG_SOC_SRST_02      0

#define MASK_IMG_SOC_DREQ_02        0x00100000
#define SHIFT_IMG_SOC_DREQ_02       20
#define REGNUM_IMG_SOC_DREQ_02      0x0044
#define SIGNED_IMG_SOC_DREQ_02      0

#define MASK_IMG_SOC_LIST_FIN_CTL_02 0x00400000
#define SHIFT_IMG_SOC_LIST_FIN_CTL_02 22
#define REGNUM_IMG_SOC_LIST_FIN_CTL_02 0x0044
#define SIGNED_IMG_SOC_LIST_FIN_CTL_02 0

#define MASK_IMG_SOC_PI_02          0x03000000
#define SHIFT_IMG_SOC_PI_02         24
#define REGNUM_IMG_SOC_PI_02        0x0044
#define SIGNED_IMG_SOC_PI_02        0
#define IMG_SOC_PI_02_1		0x00000002
#define IMG_SOC_PI_02_2		0x00000001
#define IMG_SOC_PI_02_4		0x00000000

#define MASK_IMG_SOC_DIR_02         0x04000000
#define SHIFT_IMG_SOC_DIR_02        26
#define REGNUM_IMG_SOC_DIR_02       0x0044
#define SIGNED_IMG_SOC_DIR_02       0

#define MASK_IMG_SOC_PW_02          0x18000000
#define SHIFT_IMG_SOC_PW_02         27
#define REGNUM_IMG_SOC_PW_02        0x0044
#define SIGNED_IMG_SOC_PW_02        0

#define MASK_IMG_SOC_TRANSFER_IEN_02 0x20000000
#define SHIFT_IMG_SOC_TRANSFER_IEN_02 29
#define REGNUM_IMG_SOC_TRANSFER_IEN_02 0x0044
#define SIGNED_IMG_SOC_TRANSFER_IEN_02 0

#define MASK_IMG_SOC_BSWAP_02       0x40000000
#define SHIFT_IMG_SOC_BSWAP_02      30
#define REGNUM_IMG_SOC_BSWAP_02     0x0044
#define SIGNED_IMG_SOC_BSWAP_02     0

#define MASK_IMG_SOC_LIST_IEN_02    0x80000000
#define SHIFT_IMG_SOC_LIST_IEN_02   31
#define REGNUM_IMG_SOC_LIST_IEN_02  0x0044
#define SIGNED_IMG_SOC_LIST_IEN_02  0

/* Register DMAC_PERIPH_2 */
#define IMG_SOC_DMAC_PERIPH_2       0x0048
#define MASK_IMG_SOC_EXT_SA_02      0x0000000F
#define SHIFT_IMG_SOC_EXT_SA_02     0
#define REGNUM_IMG_SOC_EXT_SA_02    0x0048
#define SIGNED_IMG_SOC_EXT_SA_02    0

#define MASK_IMG_SOC_BURST_02       0x07000000
#define SHIFT_IMG_SOC_BURST_02      24
#define REGNUM_IMG_SOC_BURST_02     0x0048
#define SIGNED_IMG_SOC_BURST_02     0

#define MASK_IMG_SOC_INCR_02        0x08000000
#define SHIFT_IMG_SOC_INCR_02       27
#define REGNUM_IMG_SOC_INCR_02      0x0048
#define SIGNED_IMG_SOC_INCR_02      0

#define MASK_IMG_SOC_ACC_DEL_02     0xE0000000
#define SHIFT_IMG_SOC_ACC_DEL_02    29
#define REGNUM_IMG_SOC_ACC_DEL_02   0x0048
#define SIGNED_IMG_SOC_ACC_DEL_02   0

/* Register DMAC_IRQ_STAT_2 */
#define IMG_SOC_DMAC_IRQ_STAT_2     0x004C
#define MASK_IMG_SOC_TRANSFER_FIN_02 0x00020000
#define SHIFT_IMG_SOC_TRANSFER_FIN_02 17
#define REGNUM_IMG_SOC_TRANSFER_FIN_02 0x004C
#define SIGNED_IMG_SOC_TRANSFER_FIN_02 0

#define MASK_IMG_SOC_LIST_INT_02    0x00100000
#define SHIFT_IMG_SOC_LIST_INT_02   20
#define REGNUM_IMG_SOC_LIST_INT_02  0x004C
#define SIGNED_IMG_SOC_LIST_INT_02  0

/* The last linked-list element processed initiated an interrupt.
If LIST_IEN is set for the channel, an interrupt will be generated
on the IRQ line until this bit is cleared, */
#define IMG_SOC_LIST_INT_02_ENABLE	0x00000001
/* last linked list element processed did not initiate an interrupt. */
#define IMG_SOC_LIST_INT_02_DISABLE	0x00000000

#define MASK_IMG_SOC_LIST_FIN_02    0x00200000
#define SHIFT_IMG_SOC_LIST_FIN_02   21
#define REGNUM_IMG_SOC_LIST_FIN_02  0x004C
#define SIGNED_IMG_SOC_LIST_FIN_02  0

/* Register DMAC_2D_MODE_2 */
#define IMG_SOC_DMAC_2D_MODE_2      0x0050
#define MASK_IMG_SOC_ROW_LENGTH_02  0x000003FF
#define SHIFT_IMG_SOC_ROW_LENGTH_02 0
#define REGNUM_IMG_SOC_ROW_LENGTH_02 0x0050
#define SIGNED_IMG_SOC_ROW_LENGTH_02 0

#define MASK_IMG_SOC_LINE_ADDR_OFFSET_02 0x000FFC00
#define SHIFT_IMG_SOC_LINE_ADDR_OFFSET_02 10
#define REGNUM_IMG_SOC_LINE_ADDR_OFFSET_02 0x0050
#define SIGNED_IMG_SOC_LINE_ADDR_OFFSET_02 0

#define MASK_IMG_SOC_REP_COUNT_02   0x7FF00000
#define SHIFT_IMG_SOC_REP_COUNT_02  20
#define REGNUM_IMG_SOC_REP_COUNT_02 0x0050
#define SIGNED_IMG_SOC_REP_COUNT_02 0

/* Register DMAC_PERIPHERAL_ADDR_2 */
#define IMG_SOC_DMAC_PERIPHERAL_ADDR_2 0x0054
#define MASK_IMG_SOC_ADDR_02        0x007FFFFF
#define SHIFT_IMG_SOC_ADDR_02       0
#define REGNUM_IMG_SOC_ADDR_02      0x0054
#define SIGNED_IMG_SOC_ADDR_02      0

/* Register DMAC_PER_HOLD_2 */
#define IMG_SOC_DMAC_PER_HOLD_2     0x0058
#define MASK_IMG_SOC_PER_HOLD_02    0x0000007F
#define SHIFT_IMG_SOC_PER_HOLD_02   0
#define REGNUM_IMG_SOC_PER_HOLD_02  0x0058
#define SIGNED_IMG_SOC_PER_HOLD_02  0

/* Register DMAC_SETUP_3 */
#define IMG_SOC_DMAC_SETUP_3        0x0060
#define MASK_IMG_SOC_START_ADDRESS_03 0xFFFFFFFF
#define SHIFT_IMG_SOC_START_ADDRESS_03 0
#define REGNUM_IMG_SOC_START_ADDRESS_03 0x0060
#define SIGNED_IMG_SOC_START_ADDRESS_03 0

/* Register DMAC_COUNT_3 */
#define IMG_SOC_DMAC_COUNT_3        0x0064
#define MASK_IMG_SOC_CNT_03         0x0000FFFF
#define SHIFT_IMG_SOC_CNT_03        0
#define REGNUM_IMG_SOC_CNT_03       0x0064
#define SIGNED_IMG_SOC_CNT_03       0

#define MASK_IMG_SOC_EN_03          0x00010000
#define SHIFT_IMG_SOC_EN_03         16
#define REGNUM_IMG_SOC_EN_03        0x0064
#define SIGNED_IMG_SOC_EN_03        0

#define MASK_IMG_SOC_ENABLE_2D_MODE_03 0x00020000
#define SHIFT_IMG_SOC_ENABLE_2D_MODE_03 17
#define REGNUM_IMG_SOC_ENABLE_2D_MODE_03 0x0064
#define SIGNED_IMG_SOC_ENABLE_2D_MODE_03 0
#define IMG_SOC_ENABLE_2D_MODE_03_ENABLED		0x00000001
#define IMG_SOC_ENABLE_2D_MODE_03_DISABLED		0x00000000

#define MASK_IMG_SOC_LIST_EN_03     0x00040000
#define SHIFT_IMG_SOC_LIST_EN_03    18
#define REGNUM_IMG_SOC_LIST_EN_03   0x0064
#define SIGNED_IMG_SOC_LIST_EN_03   0

#define MASK_IMG_SOC_SRST_03        0x00080000
#define SHIFT_IMG_SOC_SRST_03       19
#define REGNUM_IMG_SOC_SRST_03      0x0064
#define SIGNED_IMG_SOC_SRST_03      0

#define MASK_IMG_SOC_DREQ_03        0x00100000
#define SHIFT_IMG_SOC_DREQ_03       20
#define REGNUM_IMG_SOC_DREQ_03      0x0064
#define SIGNED_IMG_SOC_DREQ_03      0

#define MASK_IMG_SOC_LIST_FIN_CTL_03 0x00400000
#define SHIFT_IMG_SOC_LIST_FIN_CTL_03 22
#define REGNUM_IMG_SOC_LIST_FIN_CTL_03 0x0064
#define SIGNED_IMG_SOC_LIST_FIN_CTL_03 0

#define MASK_IMG_SOC_PI_03          0x03000000
#define SHIFT_IMG_SOC_PI_03         24
#define REGNUM_IMG_SOC_PI_03        0x0064
#define SIGNED_IMG_SOC_PI_03        0
#define IMG_SOC_PI_03_1		0x00000002
#define IMG_SOC_PI_03_2		0x00000001
#define IMG_SOC_PI_03_4		0x00000000

#define MASK_IMG_SOC_DIR_03         0x04000000
#define SHIFT_IMG_SOC_DIR_03        26
#define REGNUM_IMG_SOC_DIR_03       0x0064
#define SIGNED_IMG_SOC_DIR_03       0

#define MASK_IMG_SOC_PW_03          0x18000000
#define SHIFT_IMG_SOC_PW_03         27
#define REGNUM_IMG_SOC_PW_03        0x0064
#define SIGNED_IMG_SOC_PW_03        0

#define MASK_IMG_SOC_TRANSFER_IEN_03 0x20000000
#define SHIFT_IMG_SOC_TRANSFER_IEN_03 29
#define REGNUM_IMG_SOC_TRANSFER_IEN_03 0x0064
#define SIGNED_IMG_SOC_TRANSFER_IEN_03 0

#define MASK_IMG_SOC_BSWAP_03       0x40000000
#define SHIFT_IMG_SOC_BSWAP_03      30
#define REGNUM_IMG_SOC_BSWAP_03     0x0064
#define SIGNED_IMG_SOC_BSWAP_03     0

#define MASK_IMG_SOC_LIST_IEN_03    0x80000000
#define SHIFT_IMG_SOC_LIST_IEN_03   31
#define REGNUM_IMG_SOC_LIST_IEN_03  0x0064
#define SIGNED_IMG_SOC_LIST_IEN_03  0

/* Register DMAC_PERIPH_3 */
#define IMG_SOC_DMAC_PERIPH_3       0x0068
#define MASK_IMG_SOC_EXT_SA_03      0x0000000F
#define SHIFT_IMG_SOC_EXT_SA_03     0
#define REGNUM_IMG_SOC_EXT_SA_03    0x0068
#define SIGNED_IMG_SOC_EXT_SA_03    0

#define MASK_IMG_SOC_BURST_03       0x07000000
#define SHIFT_IMG_SOC_BURST_03      24
#define REGNUM_IMG_SOC_BURST_03     0x0068
#define SIGNED_IMG_SOC_BURST_03     0

#define MASK_IMG_SOC_INCR_03        0x08000000
#define SHIFT_IMG_SOC_INCR_03       27
#define REGNUM_IMG_SOC_INCR_03      0x0068
#define SIGNED_IMG_SOC_INCR_03      0

#define MASK_IMG_SOC_ACC_DEL_03     0xE0000000
#define SHIFT_IMG_SOC_ACC_DEL_03    29
#define REGNUM_IMG_SOC_ACC_DEL_03   0x0068
#define SIGNED_IMG_SOC_ACC_DEL_03   0

/* Register DMAC_IRQ_STAT_3 */
#define IMG_SOC_DMAC_IRQ_STAT_3     0x006C
#define MASK_IMG_SOC_TRANSFER_FIN_03 0x00020000
#define SHIFT_IMG_SOC_TRANSFER_FIN_03 17
#define REGNUM_IMG_SOC_TRANSFER_FIN_03 0x006C
#define SIGNED_IMG_SOC_TRANSFER_FIN_03 0

#define MASK_IMG_SOC_LIST_INT_03    0x00100000
#define SHIFT_IMG_SOC_LIST_INT_03   20
#define REGNUM_IMG_SOC_LIST_INT_03  0x006C
#define SIGNED_IMG_SOC_LIST_INT_03  0

/* The last linked-list element processed initiated an interrupt.
If LIST_IEN is set for the channel, an interrupt will be generated
on the IRQ line until this bit is cleared, */
#define IMG_SOC_LIST_INT_03_ENABLE	0x00000001

/* last linked list element processed did not initiate an interrupt. */
#define IMG_SOC_LIST_INT_03_DISABLE	0x00000000

#define MASK_IMG_SOC_LIST_FIN_03    0x00200000
#define SHIFT_IMG_SOC_LIST_FIN_03   21
#define REGNUM_IMG_SOC_LIST_FIN_03  0x006C
#define SIGNED_IMG_SOC_LIST_FIN_03  0

/* Register DMAC_2D_MODE_3 */
#define IMG_SOC_DMAC_2D_MODE_3      0x0070
#define MASK_IMG_SOC_ROW_LENGTH_03  0x000003FF
#define SHIFT_IMG_SOC_ROW_LENGTH_03 0
#define REGNUM_IMG_SOC_ROW_LENGTH_03 0x0070
#define SIGNED_IMG_SOC_ROW_LENGTH_03 0

#define MASK_IMG_SOC_LINE_ADDR_OFFSET_03 0x000FFC00
#define SHIFT_IMG_SOC_LINE_ADDR_OFFSET_03 10
#define REGNUM_IMG_SOC_LINE_ADDR_OFFSET_03 0x0070
#define SIGNED_IMG_SOC_LINE_ADDR_OFFSET_03 0

#define MASK_IMG_SOC_REP_COUNT_03   0x7FF00000
#define SHIFT_IMG_SOC_REP_COUNT_03  20
#define REGNUM_IMG_SOC_REP_COUNT_03 0x0070
#define SIGNED_IMG_SOC_REP_COUNT_03 0

/* Register DMAC_PERIPHERAL_ADDR_3 */
#define IMG_SOC_DMAC_PERIPHERAL_ADDR_3 0x0074
#define MASK_IMG_SOC_ADDR_03        0x007FFFFF
#define SHIFT_IMG_SOC_ADDR_03       0
#define REGNUM_IMG_SOC_ADDR_03      0x0074
#define SIGNED_IMG_SOC_ADDR_03      0

/* Register DMAC_PER_HOLD_3 */
#define IMG_SOC_DMAC_PER_HOLD_3     0x0078
#define MASK_IMG_SOC_PER_HOLD_03    0x0000007F
#define SHIFT_IMG_SOC_PER_HOLD_03   0
#define REGNUM_IMG_SOC_PER_HOLD_03  0x0078
#define SIGNED_IMG_SOC_PER_HOLD_03  0

/* Register DMAC_SOFT_RESET */
#define IMG_SOC_DMAC_SOFT_RESET     0x0080

/* Table DMAC */

/* Register DMAC_SETUP */
#define IMG_SOC_DMAC_SETUP(X)       (0x0000 + (32 * (X)))
#define MASK_IMG_SOC_START_ADDRESS  0xFFFFFFFF
#define SHIFT_IMG_SOC_START_ADDRESS 0
#define REGNUM_IMG_SOC_START_ADDRESS 0x0000
#define SIGNED_IMG_SOC_START_ADDRESS 0

/* Register DMAC_COUNT */
#define IMG_SOC_DMAC_COUNT(X)       (0x0004 + (32 * (X)))
#define MASK_IMG_SOC_CNT            0x0000FFFF
#define SHIFT_IMG_SOC_CNT           0
#define REGNUM_IMG_SOC_CNT          0x0004
#define SIGNED_IMG_SOC_CNT          0

#define MASK_IMG_SOC_EN             0x00010000
#define SHIFT_IMG_SOC_EN            16
#define REGNUM_IMG_SOC_EN           0x0004
#define SIGNED_IMG_SOC_EN           0

#define MASK_IMG_SOC_ENABLE_2D_MODE 0x00020000
#define SHIFT_IMG_SOC_ENABLE_2D_MODE 17
#define REGNUM_IMG_SOC_ENABLE_2D_MODE 0x0004
#define SIGNED_IMG_SOC_ENABLE_2D_MODE 0
#define IMG_SOC_ENABLE_2D_MODE_ENABLED		0x00000001
#define IMG_SOC_ENABLE_2D_MODE_DISABLED		0x00000000

#define MASK_IMG_SOC_LIST_EN        0x00040000
#define SHIFT_IMG_SOC_LIST_EN       18
#define REGNUM_IMG_SOC_LIST_EN      0x0004
#define SIGNED_IMG_SOC_LIST_EN      0

#define MASK_IMG_SOC_SRST           0x00080000
#define SHIFT_IMG_SOC_SRST          19
#define REGNUM_IMG_SOC_SRST         0x0004
#define SIGNED_IMG_SOC_SRST         0

#define MASK_IMG_SOC_DREQ           0x00100000
#define SHIFT_IMG_SOC_DREQ          20
#define REGNUM_IMG_SOC_DREQ         0x0004
#define SIGNED_IMG_SOC_DREQ         0

#define MASK_IMG_SOC_LIST_FIN_CTL   0x00400000
#define SHIFT_IMG_SOC_LIST_FIN_CTL  22
#define REGNUM_IMG_SOC_LIST_FIN_CTL 0x0004
#define SIGNED_IMG_SOC_LIST_FIN_CTL 0

#define MASK_IMG_SOC_PI             0x03000000
#define SHIFT_IMG_SOC_PI            24
#define REGNUM_IMG_SOC_PI           0x0004
#define SIGNED_IMG_SOC_PI           0
#define IMG_SOC_PI_1		0x00000002
#define IMG_SOC_PI_2		0x00000001
#define IMG_SOC_PI_4		0x00000000

#define MASK_IMG_SOC_DIR            0x04000000
#define SHIFT_IMG_SOC_DIR           26
#define REGNUM_IMG_SOC_DIR          0x0004
#define SIGNED_IMG_SOC_DIR          0

#define MASK_IMG_SOC_PW             0x18000000
#define SHIFT_IMG_SOC_PW            27
#define REGNUM_IMG_SOC_PW           0x0004
#define SIGNED_IMG_SOC_PW           0

#define MASK_IMG_SOC_TRANSFER_IEN   0x20000000
#define SHIFT_IMG_SOC_TRANSFER_IEN  29
#define REGNUM_IMG_SOC_TRANSFER_IEN 0x0004
#define SIGNED_IMG_SOC_TRANSFER_IEN 0

#define MASK_IMG_SOC_BSWAP          0x40000000
#define SHIFT_IMG_SOC_BSWAP         30
#define REGNUM_IMG_SOC_BSWAP        0x0004
#define SIGNED_IMG_SOC_BSWAP        0

#define MASK_IMG_SOC_LIST_IEN       0x80000000
#define SHIFT_IMG_SOC_LIST_IEN      31
#define REGNUM_IMG_SOC_LIST_IEN     0x0004
#define SIGNED_IMG_SOC_LIST_IEN     0

/* Register DMAC_PERIPH */
#define IMG_SOC_DMAC_PERIPH(X)      (0x0008 + (32 * (X)))
#define MASK_IMG_SOC_EXT_SA         0x0000000F
#define SHIFT_IMG_SOC_EXT_SA        0
#define REGNUM_IMG_SOC_EXT_SA       0x0008
#define SIGNED_IMG_SOC_EXT_SA       0

#define MASK_IMG_SOC_BURST          0x07000000
#define SHIFT_IMG_SOC_BURST         24
#define REGNUM_IMG_SOC_BURST        0x0008
#define SIGNED_IMG_SOC_BURST        0

#define MASK_IMG_SOC_INCR           0x08000000
#define SHIFT_IMG_SOC_INCR          27
#define REGNUM_IMG_SOC_INCR         0x0008
#define SIGNED_IMG_SOC_INCR         0

#define MASK_IMG_SOC_ACC_DEL        0xE0000000
#define SHIFT_IMG_SOC_ACC_DEL       29
#define REGNUM_IMG_SOC_ACC_DEL      0x0008
#define SIGNED_IMG_SOC_ACC_DEL      0

/* Register DMAC_IRQ_STAT */
#define IMG_SOC_DMAC_IRQ_STAT(X)    (0x000C + (32 * (X)))
#define MASK_IMG_SOC_TRANSFER_FIN   0x00020000
#define SHIFT_IMG_SOC_TRANSFER_FIN  17
#define REGNUM_IMG_SOC_TRANSFER_FIN 0x000C
#define SIGNED_IMG_SOC_TRANSFER_FIN 0

#define MASK_IMG_SOC_LIST_INT       0x00100000
#define SHIFT_IMG_SOC_LIST_INT      20
#define REGNUM_IMG_SOC_LIST_INT     0x000C
#define SIGNED_IMG_SOC_LIST_INT     0
/* The last linked-list element processed initiated an interrupt.
If LIST_IEN is set for the channel, an interrupt will be generated
on the IRQ line until this bit is cleared, */
#define IMG_SOC_LIST_INT_ENABLE		0x00000001
/* last linked list element processed did not initiate an interrupt. */
#define IMG_SOC_LIST_INT_DISABLE	0x00000000

#define MASK_IMG_SOC_LIST_FIN       0x00200000
#define SHIFT_IMG_SOC_LIST_FIN      21
#define REGNUM_IMG_SOC_LIST_FIN     0x000C
#define SIGNED_IMG_SOC_LIST_FIN     0

/* Register DMAC_2D_MODE */
#define IMG_SOC_DMAC_2D_MODE(X)     (0x0010 + (32 * (X)))
#define MASK_IMG_SOC_ROW_LENGTH     0x000003FF
#define SHIFT_IMG_SOC_ROW_LENGTH    0
#define REGNUM_IMG_SOC_ROW_LENGTH   0x0010
#define SIGNED_IMG_SOC_ROW_LENGTH   0

#define MASK_IMG_SOC_LINE_ADDR_OFFSET 0x000FFC00
#define SHIFT_IMG_SOC_LINE_ADDR_OFFSET 10
#define REGNUM_IMG_SOC_LINE_ADDR_OFFSET 0x0010
#define SIGNED_IMG_SOC_LINE_ADDR_OFFSET 0

#define MASK_IMG_SOC_REP_COUNT      0x7FF00000
#define SHIFT_IMG_SOC_REP_COUNT     20
#define REGNUM_IMG_SOC_REP_COUNT    0x0010
#define SIGNED_IMG_SOC_REP_COUNT    0

/* Register DMAC_PERIPHERAL_ADDR */
#define IMG_SOC_DMAC_PERIPHERAL_ADDR(X) (0x0014 + (32 * (X)))
#define MASK_IMG_SOC_ADDR           0x007FFFFF
#define SHIFT_IMG_SOC_ADDR          0
#define REGNUM_IMG_SOC_ADDR         0x0014
#define SIGNED_IMG_SOC_ADDR         0

/* Register DMAC_PER_HOLD */
#define IMG_SOC_DMAC_PER_HOLD(X)    (0x0018 + (32 * (X)))
#define MASK_IMG_SOC_PER_HOLD       0x0000007F
#define SHIFT_IMG_SOC_PER_HOLD      0
#define REGNUM_IMG_SOC_PER_HOLD     0x0018
#define SIGNED_IMG_SOC_PER_HOLD     0

/* Number of entries in table DMAC */

#define IMG_SOC_DMAC_SIZE_UINT32    31
#define IMG_SOC_DMAC_NUM_ENTRIES    4

/* From mtx_reg.h */
/* Register CR_MTX_ENABLE */
#define MTX_CR_MTX_ENABLE           0x0000
#define MASK_MTX_MTX_ENABLE         0x00000001
#define SHIFT_MTX_MTX_ENABLE        0
#define REGNUM_MTX_MTX_ENABLE       0x0000
#define SIGNED_MTX_MTX_ENABLE       0

#define MASK_MTX_MTX_TOFF           0x00000002
#define SHIFT_MTX_MTX_TOFF          1
#define REGNUM_MTX_MTX_TOFF         0x0000
#define SIGNED_MTX_MTX_TOFF         0

#define MASK_MTX_MTX_TSTOPPED       0x00000004
#define SHIFT_MTX_MTX_TSTOPPED      2
#define REGNUM_MTX_MTX_TSTOPPED     0x0000
#define SIGNED_MTX_MTX_TSTOPPED     0

#define MASK_MTX_MTX_STEP_REC       0x000000F0
#define SHIFT_MTX_MTX_STEP_REC      4
#define REGNUM_MTX_MTX_STEP_REC     0x0000
#define SIGNED_MTX_MTX_STEP_REC     0

#define MASK_MTX_MTX_ARCH           0x00000800
#define SHIFT_MTX_MTX_ARCH          11
#define REGNUM_MTX_MTX_ARCH         0x0000
#define SIGNED_MTX_MTX_ARCH         0

#define MASK_MTX_MTX_TCAPS          0x0000F000
#define SHIFT_MTX_MTX_TCAPS         12
#define REGNUM_MTX_MTX_TCAPS        0x0000
#define SIGNED_MTX_MTX_TCAPS        0

#define MASK_MTX_MTX_MIN_REV        0x00FF0000
#define SHIFT_MTX_MTX_MIN_REV       16
#define REGNUM_MTX_MTX_MIN_REV      0x0000
#define SIGNED_MTX_MTX_MIN_REV      0

#define MASK_MTX_MTX_MAJ_REV        0xFF000000
#define SHIFT_MTX_MTX_MAJ_REV       24
#define REGNUM_MTX_MTX_MAJ_REV      0x0000
#define SIGNED_MTX_MTX_MAJ_REV      0

/* Register CR_MTX_STATUS */
#define MTX_CR_MTX_STATUS           0x0008
#define MASK_MTX_MTX_CF_C           0x00000001
#define SHIFT_MTX_MTX_CF_C          0
#define REGNUM_MTX_MTX_CF_C         0x0008
#define SIGNED_MTX_MTX_CF_C         0

#define MASK_MTX_MTX_CR_O           0x00000002
#define SHIFT_MTX_MTX_CR_O          1
#define REGNUM_MTX_MTX_CR_O         0x0008
#define SIGNED_MTX_MTX_CR_O         0

#define MASK_MTX_MTX_CF_N           0x00000004
#define SHIFT_MTX_MTX_CF_N          2
#define REGNUM_MTX_MTX_CF_N         0x0008
#define SIGNED_MTX_MTX_CF_N         0

#define MASK_MTX_MTX_CF_Z           0x00000008
#define SHIFT_MTX_MTX_CF_Z          3
#define REGNUM_MTX_MTX_CF_Z         0x0008
#define SIGNED_MTX_MTX_CF_Z         0

#define MASK_MTX_MTX_LSM_STEP       0x00000700
#define SHIFT_MTX_MTX_LSM_STEP      8
#define REGNUM_MTX_MTX_LSM_STEP     0x0008
#define SIGNED_MTX_MTX_LSM_STEP     0

#define MASK_MTX_MTX_HREASON        0x000C0000
#define SHIFT_MTX_MTX_HREASON       18
#define REGNUM_MTX_MTX_HREASON      0x0008
#define SIGNED_MTX_MTX_HREASON      0

/* Register CR_MTX_KICK */
#define MTX_CR_MTX_KICK             0x0080
#define MASK_MTX_MTX_KICK           0x0000FFFF
#define SHIFT_MTX_MTX_KICK          0
#define REGNUM_MTX_MTX_KICK         0x0080
#define SIGNED_MTX_MTX_KICK         0

/* Register CR_MTX_KICKI */
#define MTX_CR_MTX_KICKI            0x0088
#define MASK_MTX_MTX_KICKI          0x0000FFFF
#define SHIFT_MTX_MTX_KICKI         0
#define REGNUM_MTX_MTX_KICKI        0x0088
#define SIGNED_MTX_MTX_KICKI        0

/* Register CR_MTX_FAULT0 */
#define MTX_CR_MTX_FAULT0           0x0090
#define MASK_MTX_REQ_SB             0x000000FF
#define SHIFT_MTX_REQ_SB            0
#define REGNUM_MTX_REQ_SB           0x0090
#define SIGNED_MTX_REQ_SB           0

#define MASK_MTX_REQ_RN_W           0x00000100
#define SHIFT_MTX_REQ_RN_W          8
#define REGNUM_MTX_REQ_RN_W         0x0090
#define SIGNED_MTX_REQ_RN_W         0

#define MASK_MTX_REQ_STATE          0x00000C00
#define SHIFT_MTX_REQ_STATE         10
#define REGNUM_MTX_REQ_STATE        0x0090
#define SIGNED_MTX_REQ_STATE        0

#define MASK_MTX_REQ_LD_DEST        0x00FF0000
#define SHIFT_MTX_REQ_LD_DEST       16
#define REGNUM_MTX_REQ_LD_DEST      0x0090
#define SIGNED_MTX_REQ_LD_DEST      0

#define MASK_MTX_REQ_LD_REG         0xF8000000
#define SHIFT_MTX_REQ_LD_REG        27
#define REGNUM_MTX_REQ_LD_REG       0x0090
#define SIGNED_MTX_REQ_LD_REG       0

/* Register CR_MTX_REGISTER_READ_WRITE_DATA */
#define MTX_CR_MTX_REGISTER_READ_WRITE_DATA 0x00F8
/* Register CR_MTX_REGISTER_READ_WRITE_REQUEST */
#define MTX_CR_MTX_REGISTER_READ_WRITE_REQUEST 0x00FC
#define MASK_MTX_MTX_USPECIFIER     0x0000000F
#define SHIFT_MTX_MTX_USPECIFIER    0
#define REGNUM_MTX_MTX_USPECIFIER   0x00FC
#define SIGNED_MTX_MTX_USPECIFIER   0

#define MASK_MTX_MTX_RSPECIFIER     0x00000070
#define SHIFT_MTX_MTX_RSPECIFIER    4
#define REGNUM_MTX_MTX_RSPECIFIER   0x00FC
#define SIGNED_MTX_MTX_RSPECIFIER   0

#define MASK_MTX_MTX_RNW            0x00010000
#define SHIFT_MTX_MTX_RNW           16
#define REGNUM_MTX_MTX_RNW          0x00FC
#define SIGNED_MTX_MTX_RNW          0

#define MASK_MTX_MTX_DREADY         0x80000000
#define SHIFT_MTX_MTX_DREADY        31
#define REGNUM_MTX_MTX_DREADY       0x00FC
#define SIGNED_MTX_MTX_DREADY       0

/* Register CR_MTX_RAM_ACCESS_DATA_EXCHANGE */
#define MTX_CR_MTX_RAM_ACCESS_DATA_EXCHANGE 0x0100
/* Register CR_MTX_RAM_ACCESS_DATA_TRANSFER */
#define MTX_CR_MTX_RAM_ACCESS_DATA_TRANSFER 0x0104
/* Register CR_MTX_RAM_ACCESS_CONTROL */
#define MTX_CR_MTX_RAM_ACCESS_CONTROL 0x0108
#define MASK_MTX_MTX_MCMR           0x00000001
#define SHIFT_MTX_MTX_MCMR          0
#define REGNUM_MTX_MTX_MCMR         0x0108
#define SIGNED_MTX_MTX_MCMR         0

#define MASK_MTX_MTX_MCMAI          0x00000002
#define SHIFT_MTX_MTX_MCMAI         1
#define REGNUM_MTX_MTX_MCMAI        0x0108
#define SIGNED_MTX_MTX_MCMAI        0

#define MASK_MTX_MTX_MCM_ADDR       0x000FFFFC
#define SHIFT_MTX_MTX_MCM_ADDR      2
#define REGNUM_MTX_MTX_MCM_ADDR     0x0108
#define SIGNED_MTX_MTX_MCM_ADDR     0

#define MASK_MTX_MTX_MCMID          0x0FF00000
#define SHIFT_MTX_MTX_MCMID         20
#define REGNUM_MTX_MTX_MCMID        0x0108
#define SIGNED_MTX_MTX_MCMID        0

/* Register CR_MTX_RAM_ACCESS_STATUS */
#define MTX_CR_MTX_RAM_ACCESS_STATUS 0x010C
#define MASK_MTX_MTX_MTX_MCM_STAT   0x00000001
#define SHIFT_MTX_MTX_MTX_MCM_STAT  0
#define REGNUM_MTX_MTX_MTX_MCM_STAT 0x010C
#define SIGNED_MTX_MTX_MTX_MCM_STAT 0

/* Register CR_MTX_SOFT_RESET */
#define MTX_CR_MTX_SOFT_RESET       0x0200
#define MASK_MTX_MTX_RESET          0x00000001
#define SHIFT_MTX_MTX_RESET         0
#define REGNUM_MTX_MTX_RESET        0x0200
#define SIGNED_MTX_MTX_RESET        0

/* Register CR_MTX_SYSC_CDMAC */
#define MTX_CR_MTX_SYSC_CDMAC       0x0340
#define MASK_MTX_LENGTH             0x0000FFFF
#define SHIFT_MTX_LENGTH            0
#define REGNUM_MTX_LENGTH           0x0340
#define SIGNED_MTX_LENGTH           0

#define MASK_MTX_ENABLE             0x00010000
#define SHIFT_MTX_ENABLE            16
#define REGNUM_MTX_ENABLE           0x0340
#define SIGNED_MTX_ENABLE           0

#define MASK_MTX_RNW                0x00020000
#define SHIFT_MTX_RNW               17
#define REGNUM_MTX_RNW              0x0340
#define SIGNED_MTX_RNW              0

#define MASK_MTX_BURSTSIZE          0x07000000
#define SHIFT_MTX_BURSTSIZE         24
#define REGNUM_MTX_BURSTSIZE        0x0340
#define SIGNED_MTX_BURSTSIZE        0

/* Register CR_MTX_SYSC_CDMAA */
#define MTX_CR_MTX_SYSC_CDMAA       0x0344
#define MASK_MTX_CDMAA_ADDRESS      0x03FFFFFC
#define SHIFT_MTX_CDMAA_ADDRESS     2
#define REGNUM_MTX_CDMAA_ADDRESS    0x0344
#define SIGNED_MTX_CDMAA_ADDRESS    0

/* Register CR_MTX_SYSC_CDMAS0 */
#define MTX_CR_MTX_SYSC_CDMAS0      0x0348
#define MASK_MTX_DONOTHING          0x00000001
#define SHIFT_MTX_DONOTHING         0
#define REGNUM_MTX_DONOTHING        0x0348
#define SIGNED_MTX_DONOTHING        0

#define MASK_MTX_DMAREQUEST         0x00000010
#define SHIFT_MTX_DMAREQUEST        4
#define REGNUM_MTX_DMAREQUEST       0x0348
#define SIGNED_MTX_DMAREQUEST       0

#define MASK_MTX_RAMNUMBER          0x00000F00
#define SHIFT_MTX_RAMNUMBER         8
#define REGNUM_MTX_RAMNUMBER        0x0348
#define SIGNED_MTX_RAMNUMBER        0

#define MASK_MTX_COUNT              0xFFFF0000
#define SHIFT_MTX_COUNT             16
#define REGNUM_MTX_COUNT            0x0348
#define SIGNED_MTX_COUNT            0

/* Register CR_MTX_SYSC_CDMAS1 */
#define MTX_CR_MTX_SYSC_CDMAS1      0x034C
#define MASK_MTX_CDMAS1_ADDRESS     0x03FFFFFC
#define SHIFT_MTX_CDMAS1_ADDRESS    2
#define REGNUM_MTX_CDMAS1_ADDRESS   0x034C
#define SIGNED_MTX_CDMAS1_ADDRESS   0

/* Register CR_MTX_SYSC_CDMAT */
#define MTX_CR_MTX_SYSC_CDMAT       0x0350
#define MASK_MTX_TRANSFERDATA       0xFFFFFFFF
#define SHIFT_MTX_TRANSFERDATA      0
#define REGNUM_MTX_TRANSFERDATA     0x0350
#define SIGNED_MTX_TRANSFERDATA     0

/* Register CR_TOPAZHP_CRC_CLEAR */
#define TOPAZHP_CR_TOPAZHP_CRC_CLEAR 0x03F4
#define MASK_TOPAZHP_CR_IPE_CRC_CLEAR 0x00000001
#define SHIFT_TOPAZHP_CR_IPE_CRC_CLEAR 0
#define REGNUM_TOPAZHP_CR_IPE_CRC_CLEAR 0x03F4
#define SIGNED_TOPAZHP_CR_IPE_CRC_CLEAR 0

#define MASK_TOPAZHP_CR_SPE_CRC_CLEAR 0x00000002
#define SHIFT_TOPAZHP_CR_SPE_CRC_CLEAR 1
#define REGNUM_TOPAZHP_CR_SPE_CRC_CLEAR 0x03F4
#define SIGNED_TOPAZHP_CR_SPE_CRC_CLEAR 0

#define MASK_TOPAZHP_CR_JMCOMP_CRC_CLEAR 0x00000008
#define SHIFT_TOPAZHP_CR_JMCOMP_CRC_CLEAR 3
#define REGNUM_TOPAZHP_CR_JMCOMP_CRC_CLEAR 0x03F4
#define SIGNED_TOPAZHP_CR_JMCOMP_CRC_CLEAR 0

#define MASK_TOPAZHP_CR_H264COMP_CRC_CLEAR 0x00000010
#define SHIFT_TOPAZHP_CR_H264COMP_CRC_CLEAR 4
#define REGNUM_TOPAZHP_CR_H264COMP_CRC_CLEAR 0x03F4
#define SIGNED_TOPAZHP_CR_H264COMP_CRC_CLEAR 0

#define MASK_TOPAZHP_CR_DB_CRC_CLEAR 0x00000020
#define SHIFT_TOPAZHP_CR_DB_CRC_CLEAR 5
#define REGNUM_TOPAZHP_CR_DB_CRC_CLEAR 0x03F4
#define SIGNED_TOPAZHP_CR_DB_CRC_CLEAR 0

#define MASK_TOPAZHP_CR_VLC_CRC_CLEAR 0x00000040
#define SHIFT_TOPAZHP_CR_VLC_CRC_CLEAR 6
#define REGNUM_TOPAZHP_CR_VLC_CRC_CLEAR 0x03F4
#define SIGNED_TOPAZHP_CR_VLC_CRC_CLEAR 0

#define MASK_TOPAZHP_CR_PC_CRC_CLEAR 0x00000080
#define SHIFT_TOPAZHP_CR_PC_CRC_CLEAR 7
#define REGNUM_TOPAZHP_CR_PC_CRC_CLEAR 0x03F4
#define SIGNED_TOPAZHP_CR_PC_CRC_CLEAR 0

#define MASK_TOPAZHP_CR_LRITC_CRC_CLEAR 0x00000100
#define SHIFT_TOPAZHP_CR_LRITC_CRC_CLEAR 8
#define REGNUM_TOPAZHP_CR_LRITC_CRC_CLEAR 0x03F4
#define SIGNED_TOPAZHP_CR_LRITC_CRC_CLEAR 0


/* Table CR_JMCOMP_LUMA_QUANTISER_TABLE */

/* Register CR_JMCOMP_LUMA_QUANTISER */
#define TOPAZHP_CR_JMCOMP_LUMA_QUANTISER(X) (0x0280 + (4 * (X)))
#define MASK_TOPAZHP_CR_JMCOMP_LUMA_QUANT(i) (0x000000FF << (0 + ((i) * 8)))
#define SHIFT_TOPAZHP_CR_JMCOMP_LUMA_QUANT(i) (0 + ((i) * 8))
#define REGNUM_TOPAZHP_CR_JMCOMP_LUMA_QUANT(X, i) (0x0280 + (4 * (X)))

/* Number of entries in table CR_JMCOMP_LUMA_QUANTISER_TABLE */

#define TOPAZHP_CR_JMCOMP_LUMA_QUANTISER_TABLE_SIZE_UINT32 16
#define TOPAZHP_CR_JMCOMP_LUMA_QUANTISER_TABLE_NUM_ENTRIES 16


/* Table CR_JMCOMP_CHROMA_QUANTISER_TABLE */

/* Register CR_JMCOMP_CHROMA_QUANTISER */
#define TOPAZHP_CR_JMCOMP_CHROMA_QUANTISER(X) (0x02C0 + (4 * (X)))
#define MASK_TOPAZHP_CR_JMCOMP_CHROMA_QUANT(i) (0x000000FF << (0 + ((i) * 8)))
#define SHIFT_TOPAZHP_CR_JMCOMP_CHROMA_QUANT(i) (0 + ((i) * 8))
#define REGNUM_TOPAZHP_CR_JMCOMP_CHROMA_QUANT(X, i) (0x02C0 + (4 * (X)))

/* Number of entries in table CR_JMCOMP_CHROMA_QUANTISER_TABLE */

#define TOPAZHP_CR_JMCOMP_CHROMA_QUANTISER_TABLE_SIZE_UINT32 16
#define TOPAZHP_CR_JMCOMP_CHROMA_QUANTISER_TABLE_NUM_ENTRIES 16


/* Table CR_WEIGHTED_PRED_COEFFS */

/* Register CR_WEIGHTED_PRED_COEFFS */
#define TOPAZHP_CR_WEIGHTED_PRED_COEFFS(X) (0x03D4 + (4 * (X)))
#define MASK_TOPAZHP_CR_WEIGHTED_PRED_OFFSET(i) (0x000000FF << (16 + ((i) * 8)))
#define SHIFT_TOPAZHP_CR_WEIGHTED_PRED_OFFSET(i) (16 + ((i) * 8))
#define REGNUM_TOPAZHP_CR_WEIGHTED_PRED_OFFSET(X, i) (0x03D4 + (4 * (X)))

#define MASK_TOPAZHP_CR_WEIGHTED_PRED_WEIGHT(i) (0x000000FF << (0 + ((i) * 8)))
#define SHIFT_TOPAZHP_CR_WEIGHTED_PRED_WEIGHT(i) (0 + ((i) * 8))
#define REGNUM_TOPAZHP_CR_WEIGHTED_PRED_WEIGHT(X, i) \
	(0x03D4 + (4 * (X)))

/* Number of entries in table CR_WEIGHTED_PRED_COEFFS */

#define TOPAZHP_CR_WEIGHTED_PRED_COEFFS_SIZE_UINT32 3
#define TOPAZHP_CR_WEIGHTED_PRED_COEFFS_NUM_ENTRIES 3



/* From system.h */
/*!
******************************************************************************
 TOPAZ configuration values:
******************************************************************************/

/*! The number of TOPAZ cores present in the system */
#define TOPAZHP_NUM_PIPES 3

#define REG_BASE_MTX			0x04800000 /* 0x0200000 FIXME!!! */
#define REG_BASE_HOST			0x00000000

/* Multicore Regs */
#define REG_OFFSET_TOPAZ_MULTICORE	0x00000000
#define REG_OFFSET_TOPAZ_DMAC		0x00000400
#define REG_OFFSET_TOPAZ_MTX		0x00000800

#define REG_SIZE_TOPAZ_MULTICORE	0x00000400
#define REG_SIZE_TOPAZ_DMAC		0x00000400
#define REG_SIZE_TOPAZ_MTX		0x00000800

/* Register bank addresses - Host View */
#define REG_START_TOPAZ_MULTICORE_HOST	\
	(REG_BASE_HOST + REG_OFFSET_TOPAZ_MULTICORE)
#define REG_END_TOPAZ_MULTICORE_HOST	\
	(REG_START_TOPAZ_MULTICORE_HOST + REG_SIZE_TOPAZ_MULTICORE)

#define REG_START_TOPAZ_DMAC_HOST	\
	(REG_BASE_HOST + REG_OFFSET_TOPAZ_DMAC)
#define REG_END_TOPAZ_DMAC_HOST		\
	(REG_START_TOPAZ_DMAC_HOST + REG_SIZE_TOPAZ_DMAC)

#define REG_START_TOPAZ_MTX_HOST	\
	(REG_BASE_HOST + REG_OFFSET_TOPAZ_MTX)
#define REG_END_TOPAZ_MTX_HOST(core)	\
	(REG_START_TOPAZ_MTX_HOST + REG_SIZE_TOPAZ_MTX)

#define REG_START_TOPAZ_TOPAZ_HOST(core)	\
	(REG_BASE_HOST + (REG_SIZE_TOPAZ_CORE_HOST*core) + \
	REG_OFFSET_TOPAZ_CORE_HOST + REG_OFFSET_TOPAZ_TOPAZ_HOST)
#define REG_END_TOPAZ_TOPAZ_HOST(core)	\
	(REG_START_TOPAZ_TOPAZ_HOST(core) + REG_SIZE_TOPAZ_TOPAZ_HOST)

/* FIXME ALL OF THIS IS INCORRECT(start) */
/* Topaz core registers MTX view */
#define REG_OFFSET_TOPAZ_CORE_MTX	0x00010000	/* MUST confirm */
#define REG_SIZE_TOPAZ_CORE_MTX		0x00010000	/* MUST confirm */

#define REG_OFFSET_TOPAZ_MTX_MTX	0x00000000
#define REG_OFFSET_TOPAZ_TOPAZ_MTX	0x00000800
#define REG_OFFSET_TOPAZ_MVEA_MTX	0x00000C00
#define REG_OFFSET_TOPAZ_MVEACMD_MTX	0x00001000
#define REG_OFFSET_TOPAZ_VLC_MTX	0x00001400
#define REG_OFFSET_TOPAZ_DEBLOCKER_MTX	0x00001800
#define REG_OFFSET_TOPAZ_COMMS_MTX	0x00001C00
#define REG_OFFSET_TOPAZ_ESB_MTX	0x00002000

#define REG_SIZE_TOPAZ_MTX_MTX		0x00000800
#define REG_SIZE_TOPAZ_TOPAZ_MTX	0x00000400
#define REG_SIZE_TOPAZ_MVEA_MTX		0x00000400
#define REG_SIZE_TOPAZ_MVEACMD_MTX	0x00000400
#define REG_SIZE_TOPAZ_VLC_MTX		0x00000400
#define REG_SIZE_TOPAZ_DEBLOCKER_MTX	0x00000400
#define REG_SIZE_TOPAZ_COMMS_MTX	0x00000400
#define REG_SIZE_TOPAZ_ESB_MTX		0x00002000


/* Register bank addresses - MTX view */
#define REG_START_TOPAZ_MULTICORE_MTX	\
	(REG_BASE_MTX + REG_OFFSET_TOPAZ_MULTICORE)
#define REG_END_TOPAZ_MULTICORE_MTX	\
	(REG_START_TOPAZ_MULTICORE_MTX + REG_SIZE_TOPAZ_MULTICORE)

#define REG_START_TOPAZ_DMAC_MTX	\
	(REG_BASE_MTX + REG_OFFSET_TOPAZ_DMAC)
#define REG_END_TOPAZ_DMAC_MTX		\
	(REG_START_TOPAZ_DMAC_MTX + REG_SIZE_TOPAZ_DMAC)

#define REG_START_TOPAZ_MTX_MTX(core)	\
	(REG_BASE_MTX + (REG_SIZE_TOPAZ_CORE_MTX*core) + \
	REG_OFFSET_TOPAZ_CORE_MTX + REG_OFFSET_TOPAZ_MTX_MTX)
#define REG_END_TOPAZ_MTX_MTX(core)	\
	(REG_START_TOPAZ_MTX_MTX(core) + REG_SIZE_TOPAZ_MTX_MTX)

#define REG_START_TOPAZ_TOPAZ_MTX(core)	\
	(REG_BASE_MTX + (REG_SIZE_TOPAZ_CORE_MTX*core) + \
	REG_OFFSET_TOPAZ_CORE_MTX + REG_OFFSET_TOPAZ_TOPAZ_MTX)
#define REG_END_TOPAZ_TOPAZ_MTX(core) \
	(REG_START_TOPAZ_TOPAZ_MTX(core) + REG_SIZE_TOPAZ_TOPAZ_MTX)

#define REG_START_TOPAZ_MVEA_MTX(core) \
	(REG_BASE_MTX + (REG_SIZE_TOPAZ_CORE_MTX*core) + \
	REG_OFFSET_TOPAZ_CORE_MTX + REG_OFFSET_TOPAZ_MVEA_MTX)
#define REG_END_TOPAZ_MVEA_MTX(core) \
	(REG_START_TOPAZ_MVEA_MTX(core) + REG_SIZE_TOPAZ_MVEA_MTX)


/*!
******************************************************************************
 DMAC configuration values:
******************************************************************************/
/*! Defined for DMAC as first updated by the SoC Group      */
#define __DMAC_REV_002__
/*! Defined to force the DMAC API to use MSVDX memory spaces*/
#define __DMAC_MSVDX_MEMSPACE__
/*! The maximum number of channels in the SoC               */
#define DMAC_MAX_CHANNELS       (1)
#define DMA_MAX_CHANNELS        (3)
/*! The size of the DMAX HISR stack                         */
#define DMAC_HISR_STACKSIZE     (DEFAULT_HISR_STACK_SIZE)
/*! The priority of the DMAC HISR                           */
#define DMAC_HISR_PRIORITY      (KRN_HIGHEST_PRIORITY)
/*! The number of active DMAC channels supported by the API */
#define DMAC_NUM_ACTIVE_CHANNELS (1)
/*! The width of the DMA memory bus */
#define DMAC_MEMORY_BUSWIDTH	(128)



/* #define MMU_PAGE_SIZE	(0x1000) */
#define TOPAZ_DEV_NAME		"TOPAZ"

enum DMAC_ePW {
	DMAC_PWIDTH_32_BIT = 0x0, /* !< Peripheral width 32-bit.*/
	DMAC_PWIDTH_16_BIT = 0x1, /* !< Peripheral width 16-bit.*/
	DMAC_PWIDTH_8_BIT  = 0x2, /* !< Peripheral width 8-bit.*/
};

/* Register CR_TOPAZHP_SRST */
#define TOPAZHP_CR_TOPAZHP_SRST     0x0000
#define MASK_TOPAZHP_CR_TOPAZHP_IPE_SOFT_RESET 0x00000001
#define SHIFT_TOPAZHP_CR_TOPAZHP_IPE_SOFT_RESET 0
#define REGNUM_TOPAZHP_CR_TOPAZHP_IPE_SOFT_RESET 0x0000
#define SIGNED_TOPAZHP_CR_TOPAZHP_IPE_SOFT_RESET 0

#define MASK_TOPAZHP_CR_TOPAZHP_SPE_SOFT_RESET 0x00000002
#define SHIFT_TOPAZHP_CR_TOPAZHP_SPE_SOFT_RESET 1
#define REGNUM_TOPAZHP_CR_TOPAZHP_SPE_SOFT_RESET 0x0000
#define SIGNED_TOPAZHP_CR_TOPAZHP_SPE_SOFT_RESET 0

#define MASK_TOPAZHP_CR_TOPAZHP_PC_SOFT_RESET 0x00000004
#define SHIFT_TOPAZHP_CR_TOPAZHP_PC_SOFT_RESET 2
#define REGNUM_TOPAZHP_CR_TOPAZHP_PC_SOFT_RESET 0x0000
#define SIGNED_TOPAZHP_CR_TOPAZHP_PC_SOFT_RESET 0

#define MASK_TOPAZHP_CR_TOPAZHP_H264COMP_SOFT_RESET 0x00000008
#define SHIFT_TOPAZHP_CR_TOPAZHP_H264COMP_SOFT_RESET 3
#define REGNUM_TOPAZHP_CR_TOPAZHP_H264COMP_SOFT_RESET 0x0000
#define SIGNED_TOPAZHP_CR_TOPAZHP_H264COMP_SOFT_RESET 0

#define MASK_TOPAZHP_CR_TOPAZHP_JMCOMP_SOFT_RESET 0x00000010
#define SHIFT_TOPAZHP_CR_TOPAZHP_JMCOMP_SOFT_RESET 4
#define REGNUM_TOPAZHP_CR_TOPAZHP_JMCOMP_SOFT_RESET 0x0000
#define SIGNED_TOPAZHP_CR_TOPAZHP_JMCOMP_SOFT_RESET 0

#define MASK_TOPAZHP_CR_TOPAZHP_PREFETCH_SOFT_RESET 0x00000020
#define SHIFT_TOPAZHP_CR_TOPAZHP_PREFETCH_SOFT_RESET 5
#define REGNUM_TOPAZHP_CR_TOPAZHP_PREFETCH_SOFT_RESET 0x0000
#define SIGNED_TOPAZHP_CR_TOPAZHP_PREFETCH_SOFT_RESET 0

#define MASK_TOPAZHP_CR_TOPAZHP_VLC_SOFT_RESET 0x00000040
#define SHIFT_TOPAZHP_CR_TOPAZHP_VLC_SOFT_RESET 6
#define REGNUM_TOPAZHP_CR_TOPAZHP_VLC_SOFT_RESET 0x0000
#define SIGNED_TOPAZHP_CR_TOPAZHP_VLC_SOFT_RESET 0

#define MASK_TOPAZHP_CR_TOPAZHP_DB_SOFT_RESET 0x00000080
#define SHIFT_TOPAZHP_CR_TOPAZHP_DB_SOFT_RESET 7
#define REGNUM_TOPAZHP_CR_TOPAZHP_DB_SOFT_RESET 0x0000
#define SIGNED_TOPAZHP_CR_TOPAZHP_DB_SOFT_RESET 0

#define MASK_TOPAZHP_CR_TOPAZHP_LTRITC_SOFT_RESET 0x00000100
#define SHIFT_TOPAZHP_CR_TOPAZHP_LTRITC_SOFT_RESET 8
#define REGNUM_TOPAZHP_CR_TOPAZHP_LTRITC_SOFT_RESET 0x0000
#define SIGNED_TOPAZHP_CR_TOPAZHP_LTRITC_SOFT_RESET 0

/* Register CR_TOPAZHP_AUTO_CLOCK_GATING */
#define TOPAZHP_CR_TOPAZHP_AUTO_CLOCK_GATING 0x0024
#define MASK_TOPAZHP_CR_TOPAZHP_IPE0_AUTO_CLK_GATE 0x00000001
#define SHIFT_TOPAZHP_CR_TOPAZHP_IPE0_AUTO_CLK_GATE 0
#define REGNUM_TOPAZHP_CR_TOPAZHP_IPE0_AUTO_CLK_GATE 0x0024
#define SIGNED_TOPAZHP_CR_TOPAZHP_IPE0_AUTO_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_IPE1_AUTO_CLK_GATE 0x00000002
#define SHIFT_TOPAZHP_CR_TOPAZHP_IPE1_AUTO_CLK_GATE 1
#define REGNUM_TOPAZHP_CR_TOPAZHP_IPE1_AUTO_CLK_GATE 0x0024
#define SIGNED_TOPAZHP_CR_TOPAZHP_IPE1_AUTO_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_SPE0_AUTO_CLK_GATE 0x00000004
#define SHIFT_TOPAZHP_CR_TOPAZHP_SPE0_AUTO_CLK_GATE 2
#define REGNUM_TOPAZHP_CR_TOPAZHP_SPE0_AUTO_CLK_GATE 0x0024
#define SIGNED_TOPAZHP_CR_TOPAZHP_SPE0_AUTO_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_SPE1_AUTO_CLK_GATE 0x00000008
#define SHIFT_TOPAZHP_CR_TOPAZHP_SPE1_AUTO_CLK_GATE 3
#define REGNUM_TOPAZHP_CR_TOPAZHP_SPE1_AUTO_CLK_GATE 0x0024
#define SIGNED_TOPAZHP_CR_TOPAZHP_SPE1_AUTO_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_H264COMP4X4_AUTO_CLK_GATE 0x00000010
#define SHIFT_TOPAZHP_CR_TOPAZHP_H264COMP4X4_AUTO_CLK_GATE 4
#define REGNUM_TOPAZHP_CR_TOPAZHP_H264COMP4X4_AUTO_CLK_GATE 0x0024
#define SIGNED_TOPAZHP_CR_TOPAZHP_H264COMP4X4_AUTO_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_H264COMP8X8_AUTO_CLK_GATE 0x00000020
#define SHIFT_TOPAZHP_CR_TOPAZHP_H264COMP8X8_AUTO_CLK_GATE 5
#define REGNUM_TOPAZHP_CR_TOPAZHP_H264COMP8X8_AUTO_CLK_GATE 0x0024
#define SIGNED_TOPAZHP_CR_TOPAZHP_H264COMP8X8_AUTO_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_H264COMP16X16_AUTO_CLK_GATE 0x00000040
#define SHIFT_TOPAZHP_CR_TOPAZHP_H264COMP16X16_AUTO_CLK_GATE 6
#define REGNUM_TOPAZHP_CR_TOPAZHP_H264COMP16X16_AUTO_CLK_GATE 0x0024
#define SIGNED_TOPAZHP_CR_TOPAZHP_H264COMP16X16_AUTO_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_JMCOMP_AUTO_CLK_GATE 0x00000080
#define SHIFT_TOPAZHP_CR_TOPAZHP_JMCOMP_AUTO_CLK_GATE 7
#define REGNUM_TOPAZHP_CR_TOPAZHP_JMCOMP_AUTO_CLK_GATE 0x0024
#define SIGNED_TOPAZHP_CR_TOPAZHP_JMCOMP_AUTO_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_VLC_AUTO_CLK_GATE 0x00000200
#define SHIFT_TOPAZHP_CR_TOPAZHP_VLC_AUTO_CLK_GATE 9
#define REGNUM_TOPAZHP_CR_TOPAZHP_VLC_AUTO_CLK_GATE 0x0024
#define SIGNED_TOPAZHP_CR_TOPAZHP_VLC_AUTO_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_DEB_AUTO_CLK_GATE 0x00000400
#define SHIFT_TOPAZHP_CR_TOPAZHP_DEB_AUTO_CLK_GATE 10
#define REGNUM_TOPAZHP_CR_TOPAZHP_DEB_AUTO_CLK_GATE 0x0024
#define SIGNED_TOPAZHP_CR_TOPAZHP_DEB_AUTO_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_PC_DM_AUTO_CLK_GATE 0x00000800
#define SHIFT_TOPAZHP_CR_TOPAZHP_PC_DM_AUTO_CLK_GATE 11
#define REGNUM_TOPAZHP_CR_TOPAZHP_PC_DM_AUTO_CLK_GATE 0x0024
#define SIGNED_TOPAZHP_CR_TOPAZHP_PC_DM_AUTO_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_PC_DMS_AUTO_CLK_GATE 0x00001000
#define SHIFT_TOPAZHP_CR_TOPAZHP_PC_DMS_AUTO_CLK_GATE 12
#define REGNUM_TOPAZHP_CR_TOPAZHP_PC_DMS_AUTO_CLK_GATE 0x0024
#define SIGNED_TOPAZHP_CR_TOPAZHP_PC_DMS_AUTO_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_CABAC_AUTO_CLK_GATE 0x00002000
#define SHIFT_TOPAZHP_CR_TOPAZHP_CABAC_AUTO_CLK_GATE 13
#define REGNUM_TOPAZHP_CR_TOPAZHP_CABAC_AUTO_CLK_GATE 0x0024
#define SIGNED_TOPAZHP_CR_TOPAZHP_CABAC_AUTO_CLK_GATE 0

/* Register CR_TOPAZHP_MAN_CLOCK_GATING */
#define TOPAZHP_CR_TOPAZHP_MAN_CLOCK_GATING 0x0028
#define MASK_TOPAZHP_CR_TOPAZHP_IPE0_MAN_CLK_GATE 0x00000001
#define SHIFT_TOPAZHP_CR_TOPAZHP_IPE0_MAN_CLK_GATE 0
#define REGNUM_TOPAZHP_CR_TOPAZHP_IPE0_MAN_CLK_GATE 0x0028
#define SIGNED_TOPAZHP_CR_TOPAZHP_IPE0_MAN_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_IPE1_MAN_CLK_GATE 0x00000002
#define SHIFT_TOPAZHP_CR_TOPAZHP_IPE1_MAN_CLK_GATE 1
#define REGNUM_TOPAZHP_CR_TOPAZHP_IPE1_MAN_CLK_GATE 0x0028
#define SIGNED_TOPAZHP_CR_TOPAZHP_IPE1_MAN_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_SPE0_MAN_CLK_GATE 0x00000004
#define SHIFT_TOPAZHP_CR_TOPAZHP_SPE0_MAN_CLK_GATE 2
#define REGNUM_TOPAZHP_CR_TOPAZHP_SPE0_MAN_CLK_GATE 0x0028
#define SIGNED_TOPAZHP_CR_TOPAZHP_SPE0_MAN_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_SPE1_MAN_CLK_GATE 0x00000008
#define SHIFT_TOPAZHP_CR_TOPAZHP_SPE1_MAN_CLK_GATE 3
#define REGNUM_TOPAZHP_CR_TOPAZHP_SPE1_MAN_CLK_GATE 0x0028
#define SIGNED_TOPAZHP_CR_TOPAZHP_SPE1_MAN_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_H264COMP4X4_MAN_CLK_GATE 0x00000010
#define SHIFT_TOPAZHP_CR_TOPAZHP_H264COMP4X4_MAN_CLK_GATE 4
#define REGNUM_TOPAZHP_CR_TOPAZHP_H264COMP4X4_MAN_CLK_GATE 0x0028
#define SIGNED_TOPAZHP_CR_TOPAZHP_H264COMP4X4_MAN_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_H264COMP8X8_MAN_CLK_GATE 0x00000020
#define SHIFT_TOPAZHP_CR_TOPAZHP_H264COMP8X8_MAN_CLK_GATE 5
#define REGNUM_TOPAZHP_CR_TOPAZHP_H264COMP8X8_MAN_CLK_GATE 0x0028
#define SIGNED_TOPAZHP_CR_TOPAZHP_H264COMP8X8_MAN_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_H264COMP16X16_MAN_CLK_GATE 0x00000040
#define SHIFT_TOPAZHP_CR_TOPAZHP_H264COMP16X16_MAN_CLK_GATE 6
#define REGNUM_TOPAZHP_CR_TOPAZHP_H264COMP16X16_MAN_CLK_GATE 0x0028
#define SIGNED_TOPAZHP_CR_TOPAZHP_H264COMP16X16_MAN_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_JMCOMP_MAN_CLK_GATE 0x00000080
#define SHIFT_TOPAZHP_CR_TOPAZHP_JMCOMP_MAN_CLK_GATE 7
#define REGNUM_TOPAZHP_CR_TOPAZHP_JMCOMP_MAN_CLK_GATE 0x0028
#define SIGNED_TOPAZHP_CR_TOPAZHP_JMCOMP_MAN_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_PREFETCH_MAN_CLK_GATE 0x00000100
#define SHIFT_TOPAZHP_CR_TOPAZHP_PREFETCH_MAN_CLK_GATE 8
#define REGNUM_TOPAZHP_CR_TOPAZHP_PREFETCH_MAN_CLK_GATE 0x0028
#define SIGNED_TOPAZHP_CR_TOPAZHP_PREFETCH_MAN_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_VLC_MAN_CLK_GATE 0x00000200
#define SHIFT_TOPAZHP_CR_TOPAZHP_VLC_MAN_CLK_GATE 9
#define REGNUM_TOPAZHP_CR_TOPAZHP_VLC_MAN_CLK_GATE 0x0028
#define SIGNED_TOPAZHP_CR_TOPAZHP_VLC_MAN_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_DEB_MAN_CLK_GATE 0x00000400
#define SHIFT_TOPAZHP_CR_TOPAZHP_DEB_MAN_CLK_GATE 10
#define REGNUM_TOPAZHP_CR_TOPAZHP_DEB_MAN_CLK_GATE 0x0028
#define SIGNED_TOPAZHP_CR_TOPAZHP_DEB_MAN_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_PC_DM_MAN_CLK_GATE 0x00000800
#define SHIFT_TOPAZHP_CR_TOPAZHP_PC_DM_MAN_CLK_GATE 11
#define REGNUM_TOPAZHP_CR_TOPAZHP_PC_DM_MAN_CLK_GATE 0x0028
#define SIGNED_TOPAZHP_CR_TOPAZHP_PC_DM_MAN_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_PC_DMS_MAN_CLK_GATE 0x00001000
#define SHIFT_TOPAZHP_CR_TOPAZHP_PC_DMS_MAN_CLK_GATE 12
#define REGNUM_TOPAZHP_CR_TOPAZHP_PC_DMS_MAN_CLK_GATE 0x0028
#define SIGNED_TOPAZHP_CR_TOPAZHP_PC_DMS_MAN_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_CABAC_MAN_CLK_GATE 0x00002000
#define SHIFT_TOPAZHP_CR_TOPAZHP_CABAC_MAN_CLK_GATE 13
#define REGNUM_TOPAZHP_CR_TOPAZHP_CABAC_MAN_CLK_GATE 0x0028
#define SIGNED_TOPAZHP_CR_TOPAZHP_CABAC_MAN_CLK_GATE 0

#define MASK_TOPAZHP_CR_TOPAZHP_LRITC_MAN_CLK_GATE 0x00004000
#define SHIFT_TOPAZHP_CR_TOPAZHP_LRITC_MAN_CLK_GATE 14
#define REGNUM_TOPAZHP_CR_TOPAZHP_LRITC_MAN_CLK_GATE 0x0028
#define SIGNED_TOPAZHP_CR_TOPAZHP_LRITC_MAN_CLK_GATE 0

#define INTEL_CHE_CHK_CFG 0x0050
#define MASK_INTEL_CHE_CK_PRY 0x000000FF
#define SHIFT_INTEL_CHE_CK_PRY 0
#define REGNUM_INTEL_CHE_CK_PRY 0x0050
#define SIGNED_INTEL_CHE_CK_PRY 0

#define TOPAZHP_CR_SEQUENCER_CONFIG 0x0154

#endif
