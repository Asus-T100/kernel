									    /*************************************************************************//*!
									       @Title          Hardware definition file emu_cr_defs.h
									       @Copyright      Copyright (c) Imagination Technologies Ltd. All Rights Reserved
									       @License        Strictly Confidential.
    *//**************************************************************************/

/*               ****   Autogenerated C -- do not edit    ****               */

/*
 * Generated by regconv version MAIN@778794
 *   from files:
 *      (null) (null)
 */

#ifndef _EMU_CR_DEFS_H_
#define _EMU_CR_DEFS_H_

/*

	Soft reset control register which drives the Rogue core and IMGBUS4 memory model
	Write a '1' to reset and a '0' to clear

*/
/*
	Register EMU_CR_SOFT_RESET
*/
#define EMU_CR_SOFT_RESET                                 (0x0000U)
#define EMU_CR_SOFT_RESET_SYS_SHIFT                       (2U)
#define EMU_CR_SOFT_RESET_SYS_CLRMSK                      (IMG_UINT64_C(0XFFFFFFFFFFFFFFFB))
#define EMU_CR_SOFT_RESET_SYS_EN                          (IMG_UINT64_C(0X0000000000000004))
#define EMU_CR_SOFT_RESET_MEM_SHIFT                       (1U)
#define EMU_CR_SOFT_RESET_MEM_CLRMSK                      (IMG_UINT64_C(0XFFFFFFFFFFFFFFFD))
#define EMU_CR_SOFT_RESET_MEM_EN                          (IMG_UINT64_C(0X0000000000000002))
#define EMU_CR_SOFT_RESET_CORE_SHIFT                      (0U)
#define EMU_CR_SOFT_RESET_CORE_CLRMSK                     (IMG_UINT64_C(0XFFFFFFFFFFFFFFFE))
#define EMU_CR_SOFT_RESET_CORE_EN                         (IMG_UINT64_C(0X0000000000000001))

/*

	Programming this register to '1' enables PCI Master Mode
	All external memory accesses from Rogue will be routed over the PCI bus to the host's system memory

*/
/*
	Register EMU_CR_PCI_MASTER
*/
#define EMU_CR_PCI_MASTER                                 (0x0008U)
#define EMU_CR_PCI_MASTER_MODE_SHIFT                      (0U)
#define EMU_CR_PCI_MASTER_MODE_CLRMSK                     (IMG_UINT64_C(0XFFFFFFFFFFFFFFFE))
#define EMU_CR_PCI_MASTER_MODE_EN                         (IMG_UINT64_C(0X0000000000000001))

/*
	Register EMU_CR_RANDOM
*/
#define EMU_CR_RANDOM                                     (0x0010U)
/*
Initialise random seeds
*/
#define EMU_CR_RANDOM_INITIALISE_SHIFT                    (0U)
#define EMU_CR_RANDOM_INITIALISE_CLRMSK                   (0XFFFFFFFEU)
#define EMU_CR_RANDOM_INITIALISE_EN                       (0X00000001U)

/*

	Random address stall seed
   Random address stall cycles
	Random address burst seed
   Random address burst cycles

*/
/*
	Register EMU_CR_RANDOM_ADDR
*/
#define EMU_CR_RANDOM_ADDR                                (0x0018U)
/*
Seed value
*/
#define EMU_CR_RANDOM_ADDR_STALL_SEED_SHIFT               (24U)
#define EMU_CR_RANDOM_ADDR_STALL_SEED_CLRMSK              (0X00FFFFFFU)
/*
Cycle values
*/
#define EMU_CR_RANDOM_ADDR_STALL_CYCLES_SHIFT             (16U)
#define EMU_CR_RANDOM_ADDR_STALL_CYCLES_CLRMSK            (0XFFE0FFFFU)
/*
Seed value
*/
#define EMU_CR_RANDOM_ADDR_BUSRT_SEED_SHIFT               (8U)
#define EMU_CR_RANDOM_ADDR_BUSRT_SEED_CLRMSK              (0XFFFF00FFU)
/*
Cycle values
*/
#define EMU_CR_RANDOM_ADDR_BUSRT_CYCLES_SHIFT             (0U)
#define EMU_CR_RANDOM_ADDR_BUSRT_CYCLES_CLRMSK            (0XFFFFFFE0U)

/*
	Register EMU_CR_RANDOM_ADDR_STALL_ENABLE
*/
#define EMU_CR_RANDOM_ADDR_STALL_ENABLE                   (0x0020U)
/*
Enable random address staller
*/
#define EMU_CR_RANDOM_ADDR_STALL_ENABLE_ENABLE_SHIFT      (0U)
#define EMU_CR_RANDOM_ADDR_STALL_ENABLE_ENABLE_CLRMSK     (0XFFFFFFFEU)
#define EMU_CR_RANDOM_ADDR_STALL_ENABLE_ENABLE_EN         (0X00000001U)

/*

	Random write data stall seed
   Random write data stall cycles
 	Random write data burst seed
   Random write data burst cycles


*/
/*
	Register EMU_CR_RANDOM_WDATA
*/
#define EMU_CR_RANDOM_WDATA                               (0x0028U)
/*
Seed value
*/
#define EMU_CR_RANDOM_WDATA_STALL_SEED_SHIFT              (24U)
#define EMU_CR_RANDOM_WDATA_STALL_SEED_CLRMSK             (0X00FFFFFFU)
/*
Cycle values
*/
#define EMU_CR_RANDOM_WDATA_STALL_CYCLES_SHIFT            (16U)
#define EMU_CR_RANDOM_WDATA_STALL_CYCLES_CLRMSK           (0XFFE0FFFFU)
/*
Seed value
*/
#define EMU_CR_RANDOM_WDATA_BUSRT_SEED_SHIFT              (8U)
#define EMU_CR_RANDOM_WDATA_BUSRT_SEED_CLRMSK             (0XFFFF00FFU)
/*
Cycle values
*/
#define EMU_CR_RANDOM_WDATA_BUSRT_CYCLES_SHIFT            (0U)
#define EMU_CR_RANDOM_WDATA_BUSRT_CYCLES_CLRMSK           (0XFFFFFFE0U)

/*
	Register EMU_CR_RANDOM_WDATA_STALL_ENABLE
*/
#define EMU_CR_RANDOM_WDATA_STALL_ENABLE                  (0x0030U)
/*
Enable random wdata staller
*/
#define EMU_CR_RANDOM_WDATA_STALL_ENABLE_ENABLE_SHIFT     (0U)
#define EMU_CR_RANDOM_WDATA_STALL_ENABLE_ENABLE_CLRMSK    (0XFFFFFFFEU)
#define EMU_CR_RANDOM_WDATA_STALL_ENABLE_ENABLE_EN        (0X00000001U)

/*

	Random write response stall seed
   Random write response stall cycles
 	Random write response burst seed
   Random write response burst cycles

*/
/*
	Register EMU_CR_RANDOM_WRESP
*/
#define EMU_CR_RANDOM_WRESP                               (0x0038U)
/*
Seed value
*/
#define EMU_CR_RANDOM_WRESP_STALL_SEED_SHIFT              (24U)
#define EMU_CR_RANDOM_WRESP_STALL_SEED_CLRMSK             (0X00FFFFFFU)
/*
Cycle values
*/
#define EMU_CR_RANDOM_WRESP_STALL_CYCLES_SHIFT            (16U)
#define EMU_CR_RANDOM_WRESP_STALL_CYCLES_CLRMSK           (0XFFE0FFFFU)
/*
Seed value
*/
#define EMU_CR_RANDOM_WRESP_BUSRT_SEED_SHIFT              (8U)
#define EMU_CR_RANDOM_WRESP_BUSRT_SEED_CLRMSK             (0XFFFF00FFU)
/*
Cycle values
*/
#define EMU_CR_RANDOM_WRESP_BUSRT_CYCLES_SHIFT            (0U)
#define EMU_CR_RANDOM_WRESP_BUSRT_CYCLES_CLRMSK           (0XFFFFFFE0U)

/*
	Register EMU_CR_RANDOM_WRESP_STALL_ENABLE
*/
#define EMU_CR_RANDOM_WRESP_STALL_ENABLE                  (0x0040U)
/*
Enable random wresp tagID staller
*/
#define EMU_CR_RANDOM_WRESP_STALL_ENABLE_ENABLE_SHIFT     (0U)
#define EMU_CR_RANDOM_WRESP_STALL_ENABLE_ENABLE_CLRMSK    (0XFFFFFFFEU)
#define EMU_CR_RANDOM_WRESP_STALL_ENABLE_ENABLE_EN        (0X00000001U)

/*

	Random read data stall seed
   Random read data stall cycles
 	Random read data burst seed
   Random read data burst cycles

*/
/*
	Register EMU_CR_RANDOM_RDATA
*/
#define EMU_CR_RANDOM_RDATA                               (0x0048U)
/*
Seed value
*/
#define EMU_CR_RANDOM_RDATA_STALL_SEED_SHIFT              (24U)
#define EMU_CR_RANDOM_RDATA_STALL_SEED_CLRMSK             (0X00FFFFFFU)
/*
Cycle values
*/
#define EMU_CR_RANDOM_RDATA_STALL_CYCLES_SHIFT            (16U)
#define EMU_CR_RANDOM_RDATA_STALL_CYCLES_CLRMSK           (0XFFE0FFFFU)
/*
Seed value
*/
#define EMU_CR_RANDOM_RDATA_BUSRT_SEED_SHIFT              (8U)
#define EMU_CR_RANDOM_RDATA_BUSRT_SEED_CLRMSK             (0XFFFF00FFU)
/*
Cycle values
*/
#define EMU_CR_RANDOM_RDATA_BUSRT_CYCLES_SHIFT            (0U)
#define EMU_CR_RANDOM_RDATA_BUSRT_CYCLES_CLRMSK           (0XFFFFFFE0U)

/*
	Register EMU_CR_RANDOM_RDATA_STALL_ENABLE
*/
#define EMU_CR_RANDOM_RDATA_STALL_ENABLE                  (0x0050U)
/*
Enable random rdata staller
*/
#define EMU_CR_RANDOM_RDATA_STALL_ENABLE_ENABLE_SHIFT     (0U)
#define EMU_CR_RANDOM_RDATA_STALL_ENABLE_ENABLE_CLRMSK    (0XFFFFFFFEU)
#define EMU_CR_RANDOM_RDATA_STALL_ENABLE_ENABLE_EN        (0X00000001U)

/*

   Behaviour is selected with the following priorities:
   1) set max_latency to 0 for bypass mode (ie no latency, no reordering - same as disabling reordering with 0x0060)
   2) set min_latency to 4095 for max latency
   3) if max_latency /= 0 and min_latency /= 4095 and max_latency < min_latency bypass mode will be selected
   4) if max_latency /= 0 and min_latency /= 4095 and max_latency >= min_latency a randomly generated
      latency between the max_latency and min_latency will be used.

*/
/*
	Register EMU_CR_RDATA_REORDER
*/
#define EMU_CR_RDATA_REORDER                              (0x0058U)
/*
Maximum latency value
*/
#define EMU_CR_RDATA_REORDER_MAX_LATENCY_SHIFT            (16U)
#define EMU_CR_RDATA_REORDER_MAX_LATENCY_CLRMSK           (0XF000FFFFU)
/*
Minimum latency value
*/
#define EMU_CR_RDATA_REORDER_MIN_LATENCY_SHIFT            (0U)
#define EMU_CR_RDATA_REORDER_MIN_LATENCY_CLRMSK           (0XFFFFF000U)

/*
	Register EMU_CR_RDATA_REORDER_ENABLE
*/
#define EMU_CR_RDATA_REORDER_ENABLE                       (0x0060U)
/*
Enable reordering of read data
*/
#define EMU_CR_RDATA_REORDER_ENABLE_ENABLE_SHIFT          (0U)
#define EMU_CR_RDATA_REORDER_ENABLE_ENABLE_CLRMSK         (0XFFFFFFFEU)
#define EMU_CR_RDATA_REORDER_ENABLE_ENABLE_EN             (0X00000001U)

/*

	Report errors in emulator wrapper

*/
/*
	Register EMU_CR_WRAPPER_ERROR
*/
#define EMU_CR_WRAPPER_ERROR                              (0x0068U)
/*
Reordering fifos not empty when fifo_out_en is de-asserted
*/
#define EMU_CR_WRAPPER_ERROR_REORDERING_ERR1_SHIFT        (1U)
#define EMU_CR_WRAPPER_ERROR_REORDERING_ERR1_CLRMSK       (0XFFFFFFFDU)
#define EMU_CR_WRAPPER_ERROR_REORDERING_ERR1_EN           (0X00000002U)
/*
Reordering fifos not empty while reordering is turned off
*/
#define EMU_CR_WRAPPER_ERROR_REORDERING_ERR0_SHIFT        (0U)
#define EMU_CR_WRAPPER_ERROR_REORDERING_ERR0_CLRMSK       (0XFFFFFFFEU)
#define EMU_CR_WRAPPER_ERROR_REORDERING_ERR0_EN           (0X00000001U)

/*

	Random host write seed
	Random host write addresses to populate and invalidate
	Random host write scale - Controls gaps between invalidates as follow:
      b'00 => new_gap = previous_gap + previous_gap       - less frequently
      b'01 => new_gap = previous_gap + 1/4(previous_gap)
      b'10 => new_gap = previous_gap + 1/8(previous_gap)
      b'11 => new_gap = previous_gap + 1/16(previous_gap) - more frequently

*/
/*
	Register EMU_CR_RANDOM_HOST_WRITE
*/
#define EMU_CR_RANDOM_HOST_WRITE                          (0x0100U)
/*
Seed values
*/
#define EMU_CR_RANDOM_HOST_WRITE_SEED_SHIFT               (12U)
#define EMU_CR_RANDOM_HOST_WRITE_SEED_CLRMSK              (0XFFE00FFFU)
/*
Number of addresses to populate
*/
#define EMU_CR_RANDOM_HOST_WRITE_ADDR_NO_SHIFT            (4U)
#define EMU_CR_RANDOM_HOST_WRITE_ADDR_NO_CLRMSK           (0XFFFFFC0FU)
/*
Scale write
*/
#define EMU_CR_RANDOM_HOST_WRITE_SCALE_SHIFT              (0U)
#define EMU_CR_RANDOM_HOST_WRITE_SCALE_CLRMSK             (0XFFFFFFFCU)

/*
	Register EMU_CR_RANDOM_HOST_WRITE_ENABLE
*/
#define EMU_CR_RANDOM_HOST_WRITE_ENABLE                   (0x0108U)
/*
Enable random host write
*/
#define EMU_CR_RANDOM_HOST_WRITE_ENABLE_ENABLE_SHIFT      (0U)
#define EMU_CR_RANDOM_HOST_WRITE_ENABLE_ENABLE_CLRMSK     (0XFFFFFFFEU)
#define EMU_CR_RANDOM_HOST_WRITE_ENABLE_ENABLE_EN         (0X00000001U)

/*

	Random host write address 0

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR0
*/
#define EMU_CR_RANDOM_HOST_ADDR0                          (0x0118U)
/*
Address 0 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR0_ADDR0_SHIFT              (0U)
#define EMU_CR_RANDOM_HOST_ADDR0_ADDR0_CLRMSK             (00000000U)

/*

	Random host write address 1

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR1
*/
#define EMU_CR_RANDOM_HOST_ADDR1                          (0x0120U)
/*
Address 1 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR1_ADDR1_SHIFT              (0U)
#define EMU_CR_RANDOM_HOST_ADDR1_ADDR1_CLRMSK             (00000000U)

/*

	Random host write address 2

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR2
*/
#define EMU_CR_RANDOM_HOST_ADDR2                          (0x0128U)
/*
Address 2 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR2_ADDR2_SHIFT              (0U)
#define EMU_CR_RANDOM_HOST_ADDR2_ADDR2_CLRMSK             (00000000U)

/*

	Random host write address 3

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR3
*/
#define EMU_CR_RANDOM_HOST_ADDR3                          (0x0130U)
/*
Address 3 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR3_ADDR3_SHIFT              (0U)
#define EMU_CR_RANDOM_HOST_ADDR3_ADDR3_CLRMSK             (00000000U)

/*

	Random host write address 4

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR4
*/
#define EMU_CR_RANDOM_HOST_ADDR4                          (0x0138U)
/*
Address 4 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR4_ADDR4_SHIFT              (0U)
#define EMU_CR_RANDOM_HOST_ADDR4_ADDR4_CLRMSK             (00000000U)

/*

	Random host write address 5

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR5
*/
#define EMU_CR_RANDOM_HOST_ADDR5                          (0x0140U)
/*
Address 5 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR5_ADDR5_SHIFT              (0U)
#define EMU_CR_RANDOM_HOST_ADDR5_ADDR5_CLRMSK             (00000000U)

/*

	Random host write address 6

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR6
*/
#define EMU_CR_RANDOM_HOST_ADDR6                          (0x0148U)
/*
Address 6 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR6_ADDR6_SHIFT              (0U)
#define EMU_CR_RANDOM_HOST_ADDR6_ADDR6_CLRMSK             (00000000U)

/*

	Random host write address 7

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR7
*/
#define EMU_CR_RANDOM_HOST_ADDR7                          (0x0150U)
/*
Address 7 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR7_ADDR7_SHIFT              (0U)
#define EMU_CR_RANDOM_HOST_ADDR7_ADDR7_CLRMSK             (00000000U)

/*

	Random host write address 8

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR8
*/
#define EMU_CR_RANDOM_HOST_ADDR8                          (0x0158U)
/*
Address 8 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR8_ADDR8_SHIFT              (0U)
#define EMU_CR_RANDOM_HOST_ADDR8_ADDR8_CLRMSK             (00000000U)

/*

	Random host write address 9

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR9
*/
#define EMU_CR_RANDOM_HOST_ADDR9                          (0x0160U)
/*
Address 9 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR9_ADDR9_SHIFT              (0U)
#define EMU_CR_RANDOM_HOST_ADDR9_ADDR9_CLRMSK             (00000000U)

/*

	Random host write address 10

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR10
*/
#define EMU_CR_RANDOM_HOST_ADDR10                         (0x0168U)
/*
Address 10 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR10_ADDR10_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR10_ADDR10_CLRMSK           (00000000U)

/*

	Random host write address 11

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR11
*/
#define EMU_CR_RANDOM_HOST_ADDR11                         (0x0170U)
/*
Address 11 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR11_ADDR11_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR11_ADDR11_CLRMSK           (00000000U)

/*

	Random host write address 12

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR12
*/
#define EMU_CR_RANDOM_HOST_ADDR12                         (0x0178U)
/*
Address 12 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR12_ADDR12_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR12_ADDR12_CLRMSK           (00000000U)

/*

	Random host write address 13

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR13
*/
#define EMU_CR_RANDOM_HOST_ADDR13                         (0x0180U)
/*
Address 13 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR13_ADDR13_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR13_ADDR13_CLRMSK           (00000000U)

/*

	Random host write address 14

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR14
*/
#define EMU_CR_RANDOM_HOST_ADDR14                         (0x0188U)
/*
Address 14 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR14_ADDR14_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR14_ADDR14_CLRMSK           (00000000U)

/*

	Random host write address 15

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR15
*/
#define EMU_CR_RANDOM_HOST_ADDR15                         (0x0190U)
/*
Address 15 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR15_ADDR15_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR15_ADDR15_CLRMSK           (00000000U)

/*

	Random host write address 16

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR16
*/
#define EMU_CR_RANDOM_HOST_ADDR16                         (0x0198U)
/*
Address 16 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR16_ADDR16_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR16_ADDR16_CLRMSK           (00000000U)

/*

	Random host write address 17

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR17
*/
#define EMU_CR_RANDOM_HOST_ADDR17                         (0x01A0U)
/*
Address 17 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR17_ADDR17_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR17_ADDR17_CLRMSK           (00000000U)

/*

	Random host write address 18

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR18
*/
#define EMU_CR_RANDOM_HOST_ADDR18                         (0x01A8U)
/*
Address 18 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR18_ADDR18_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR18_ADDR18_CLRMSK           (00000000U)

/*

	Random host write address 19

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR19
*/
#define EMU_CR_RANDOM_HOST_ADDR19                         (0x01B0U)
/*
Address 19 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR19_ADDR19_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR19_ADDR19_CLRMSK           (00000000U)

/*

	Random host write address 20

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR20
*/
#define EMU_CR_RANDOM_HOST_ADDR20                         (0x01B8U)
/*
Address 20 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR20_ADDR20_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR20_ADDR20_CLRMSK           (00000000U)

/*

	Random host write address 21

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR21
*/
#define EMU_CR_RANDOM_HOST_ADDR21                         (0x01C0U)
/*
Address 21 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR21_ADDR21_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR21_ADDR21_CLRMSK           (00000000U)

/*

	Random host write address 22

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR22
*/
#define EMU_CR_RANDOM_HOST_ADDR22                         (0x01C8U)
/*
Address 22 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR22_ADDR22_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR22_ADDR22_CLRMSK           (00000000U)

/*

	Random host write address 23

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR23
*/
#define EMU_CR_RANDOM_HOST_ADDR23                         (0x01D0U)
/*
Address 23 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR23_ADDR23_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR23_ADDR23_CLRMSK           (00000000U)

/*

	Random host write address 24

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR24
*/
#define EMU_CR_RANDOM_HOST_ADDR24                         (0x01D8U)
/*
Address 24 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR24_ADDR24_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR24_ADDR24_CLRMSK           (00000000U)

/*

	Random host write address 25

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR25
*/
#define EMU_CR_RANDOM_HOST_ADDR25                         (0x01E0U)
/*
Address 25 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR25_ADDR25_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR25_ADDR25_CLRMSK           (00000000U)

/*

	Random host write address 26

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR26
*/
#define EMU_CR_RANDOM_HOST_ADDR26                         (0x01E8U)
/*
Address 26 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR26_ADDR26_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR26_ADDR26_CLRMSK           (00000000U)

/*

	Random host write address 27

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR27
*/
#define EMU_CR_RANDOM_HOST_ADDR27                         (0x01F0U)
/*
Address 27 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR27_ADDR27_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR27_ADDR27_CLRMSK           (00000000U)

/*

	Random host write address 28

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR28
*/
#define EMU_CR_RANDOM_HOST_ADDR28                         (0x01F8U)
/*
Address 28 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR28_ADDR28_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR28_ADDR28_CLRMSK           (00000000U)

/*

	Random host write address 29

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR29
*/
#define EMU_CR_RANDOM_HOST_ADDR29                         (0x0200U)
/*
Address 29 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR29_ADDR29_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR29_ADDR29_CLRMSK           (00000000U)

/*

	Random host write address 30

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR30
*/
#define EMU_CR_RANDOM_HOST_ADDR30                         (0x0208U)
/*
Address 30 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR30_ADDR30_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR30_ADDR30_CLRMSK           (00000000U)

/*

	Random host write address 31

*/
/*
	Register EMU_CR_RANDOM_HOST_ADDR31
*/
#define EMU_CR_RANDOM_HOST_ADDR31                         (0x0210U)
/*
Address 31 to be populated
*/
#define EMU_CR_RANDOM_HOST_ADDR31_ADDR31_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_ADDR31_ADDR31_CLRMSK           (00000000U)

/*

	Random host write data 0

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA0
*/
#define EMU_CR_RANDOM_HOST_WDATA0                         (0x0218U)
/*
Data for address 0 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA0_WDATA0_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_WDATA0_WDATA0_CLRMSK           (00000000U)

/*

	Random host write data 1

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA1
*/
#define EMU_CR_RANDOM_HOST_WDATA1                         (0x0220U)
/*
Data for address 1 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA1_WDATA1_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_WDATA1_WDATA1_CLRMSK           (00000000U)

/*

	Random host write data 2

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA2
*/
#define EMU_CR_RANDOM_HOST_WDATA2                         (0x0228U)
/*
Data for address 2 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA2_WDATA2_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_WDATA2_WDATA2_CLRMSK           (00000000U)

/*

	Random host write data 3

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA3
*/
#define EMU_CR_RANDOM_HOST_WDATA3                         (0x0230U)
/*
Data for address 3 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA3_WDATA3_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_WDATA3_WDATA3_CLRMSK           (00000000U)

/*

	Random host write data 4

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA4
*/
#define EMU_CR_RANDOM_HOST_WDATA4                         (0x0238U)
/*
Data for address 4 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA4_WDATA4_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_WDATA4_WDATA4_CLRMSK           (00000000U)

/*

	Random host write data 5

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA5
*/
#define EMU_CR_RANDOM_HOST_WDATA5                         (0x0240U)
/*
Data for address 5 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA5_WDATA5_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_WDATA5_WDATA5_CLRMSK           (00000000U)

/*

	Random host write data 6

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA6
*/
#define EMU_CR_RANDOM_HOST_WDATA6                         (0x0248U)
/*
Data for address 6 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA6_WDATA6_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_WDATA6_WDATA6_CLRMSK           (00000000U)

/*

	Random host write data 7

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA7
*/
#define EMU_CR_RANDOM_HOST_WDATA7                         (0x0250U)
/*
Data for address 7 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA7_WDATA7_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_WDATA7_WDATA7_CLRMSK           (00000000U)

/*

	Random host write data 8

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA8
*/
#define EMU_CR_RANDOM_HOST_WDATA8                         (0x0258U)
/*
Data for address 8 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA8_WDATA8_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_WDATA8_WDATA8_CLRMSK           (00000000U)

/*

	Random host write data 9

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA9
*/
#define EMU_CR_RANDOM_HOST_WDATA9                         (0x0260U)
/*
Data for address 9 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA9_WDATA9_SHIFT            (0U)
#define EMU_CR_RANDOM_HOST_WDATA9_WDATA9_CLRMSK           (00000000U)

/*

	Random host write data 10

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA10
*/
#define EMU_CR_RANDOM_HOST_WDATA10                        (0x0268U)
/*
Data for address 10 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA10_WDATA10_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA10_WDATA10_CLRMSK         (00000000U)

/*

	Random host write data 11

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA11
*/
#define EMU_CR_RANDOM_HOST_WDATA11                        (0x0270U)
/*
Data for address 11 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA11_WDATA11_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA11_WDATA11_CLRMSK         (00000000U)

/*

	Random host write data 12

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA12
*/
#define EMU_CR_RANDOM_HOST_WDATA12                        (0x0278U)
/*
Data for address 12 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA12_WDATA12_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA12_WDATA12_CLRMSK         (00000000U)

/*

	Random host write data 13

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA13
*/
#define EMU_CR_RANDOM_HOST_WDATA13                        (0x0280U)
/*
Data for address 13 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA13_WDATA13_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA13_WDATA13_CLRMSK         (00000000U)

/*

	Random host write data 14

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA14
*/
#define EMU_CR_RANDOM_HOST_WDATA14                        (0x0288U)
/*
Data for address 14 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA14_WDATA14_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA14_WDATA14_CLRMSK         (00000000U)

/*

	Random host write data 15

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA15
*/
#define EMU_CR_RANDOM_HOST_WDATA15                        (0x0290U)
/*
Data for address 15 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA15_WDATA15_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA15_WDATA15_CLRMSK         (00000000U)

/*

	Random host write data 16

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA16
*/
#define EMU_CR_RANDOM_HOST_WDATA16                        (0x0298U)
/*
Data for address 16 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA16_WDATA16_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA16_WDATA16_CLRMSK         (00000000U)

/*

	Random host write data 17

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA17
*/
#define EMU_CR_RANDOM_HOST_WDATA17                        (0x02A0U)
/*
Data for address 17 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA17_WDATA17_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA17_WDATA17_CLRMSK         (00000000U)

/*

	Random host write data 18

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA18
*/
#define EMU_CR_RANDOM_HOST_WDATA18                        (0x02A8U)
/*
Data for address 18 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA18_WDATA18_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA18_WDATA18_CLRMSK         (00000000U)

/*

	Random host write data 19

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA19
*/
#define EMU_CR_RANDOM_HOST_WDATA19                        (0x02B0U)
/*
Data for address 19 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA19_WDATA19_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA19_WDATA19_CLRMSK         (00000000U)

/*

	Random host write data 20

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA20
*/
#define EMU_CR_RANDOM_HOST_WDATA20                        (0x02B8U)
/*
Data for address 20 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA20_WDATA20_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA20_WDATA20_CLRMSK         (00000000U)

/*

	Random host write data 21

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA21
*/
#define EMU_CR_RANDOM_HOST_WDATA21                        (0x02C0U)
/*
Data for address 21 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA21_WDATA21_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA21_WDATA21_CLRMSK         (00000000U)

/*

	Random host write data 22

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA22
*/
#define EMU_CR_RANDOM_HOST_WDATA22                        (0x02C8U)
/*
Data for address 22 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA22_WDATA22_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA22_WDATA22_CLRMSK         (00000000U)

/*

	Random host write data 23

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA23
*/
#define EMU_CR_RANDOM_HOST_WDATA23                        (0x02D0U)
/*
Data for address 23 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA23_WDATA23_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA23_WDATA23_CLRMSK         (00000000U)

/*

	Random host write data 24

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA24
*/
#define EMU_CR_RANDOM_HOST_WDATA24                        (0x02D8U)
/*
Data for address 24 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA24_WDATA24_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA24_WDATA24_CLRMSK         (00000000U)

/*

	Random host write data 25

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA25
*/
#define EMU_CR_RANDOM_HOST_WDATA25                        (0x02E0U)
/*
Data for address 25 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA25_WDATA25_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA25_WDATA25_CLRMSK         (00000000U)

/*

	Random host write data 26

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA26
*/
#define EMU_CR_RANDOM_HOST_WDATA26                        (0x02E8U)
/*
Data for address 26 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA26_WDATA26_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA26_WDATA26_CLRMSK         (00000000U)

/*

	Random host write data 27

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA27
*/
#define EMU_CR_RANDOM_HOST_WDATA27                        (0x02F0U)
/*
Data for address 27 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA27_WDATA27_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA27_WDATA27_CLRMSK         (00000000U)

/*

	Random host write data 28

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA28
*/
#define EMU_CR_RANDOM_HOST_WDATA28                        (0x02F8U)
/*
Data for address 28 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA28_WDATA28_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA28_WDATA28_CLRMSK         (00000000U)

/*

	Random host write data 29

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA29
*/
#define EMU_CR_RANDOM_HOST_WDATA29                        (0x0300U)
/*
Data for address 29 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA29_WDATA29_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA29_WDATA29_CLRMSK         (00000000U)

/*

	Random host write data 30

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA30
*/
#define EMU_CR_RANDOM_HOST_WDATA30                        (0x0308U)
/*
Data for address 30 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA30_WDATA30_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA30_WDATA30_CLRMSK         (00000000U)

/*

	Random host write data 31

*/
/*
	Register EMU_CR_RANDOM_HOST_WDATA31
*/
#define EMU_CR_RANDOM_HOST_WDATA31                        (0x0310U)
/*
Data for address 31 to be populated
*/
#define EMU_CR_RANDOM_HOST_WDATA31_WDATA31_SHIFT          (0U)
#define EMU_CR_RANDOM_HOST_WDATA31_WDATA31_CLRMSK         (00000000U)

/*

	Memory latency control for return data

*/
/*
	Register EMU_CR_MEMORY_LATENCY
*/
#define EMU_CR_MEMORY_LATENCY                             (0x1548U)
/*
Return Data
*/
#define EMU_CR_MEMORY_LATENCY_RDATA_SHIFT                 (0U)
#define EMU_CR_MEMORY_LATENCY_RDATA_CLRMSK                (IMG_UINT64_C(0XFFFFFFFFFFFFFE00))

#endif				/* _EMU_CR_DEFS_H_ */

/*****************************************************************************
 End of file (emu_cr_defs.h)
*****************************************************************************/
